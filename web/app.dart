/**
 * This application displays documentation generated by the docgen tool
 * found at dart-repo/dart/pkg/docgen. 
 * 
 * The Yaml file outputted by the docgen tool will be read in to 
 * generate [Page] and [Category] and [CategoryItem]. 
 * Pages, Categories and CategoryItems are used to format and layout the page. 
 */
// TODO(janicejl): Add a link to the dart docgen landing page in future. 
library dartdoc_viewer;

import 'dart:html';
import 'dart:math';
import 'package:web_ui/web_ui.dart';
import 'package:dartdoc_viewer/data.dart';
import 'package:dartdoc_viewer/item.dart';
import 'package:dartdoc_viewer/read_yaml.dart';

// TODO(janicejl): YAML path should not be hardcoded. 
// Path to the Yaml file being read in. 
const sourcePath = "../../test/yaml/large_test.yaml";

//Function to set the title of the current page. 
String get title => currentPage == null ? "" : currentPage.name;

@observable Item homePage;

// The current page being shown.
@observable Item currentPage = null;

@observable List<Item> pages = new ObservableList();


/**
 * Changes the currentPage to the page of the item clicked.
 */
changePage(Item page, {bool isFromPopState: false}) {
  if (page != null) {
    if (!isFromPopState) {
      pages.add(page);
      var state = window.location.hash;
      if (state == "") {
        state = "/#${page.name}";
      } else {
        state = "/$state/${page.name}";
      }
      window.history.pushState(page.path, "", state);
    }
    currentPage = page;
  }
}

main() {
  window.history.pushState("", "", "");
  var sourceYaml = getYamlFile(sourcePath);
  sourceYaml.then( (response) {
    currentPage = loadData(response).first;
    homePage = currentPage;
  });
  
  // Handles browser navigation
  // TODO(tmandel): Fix that it takes two clicks on the back button from the
  // homepage to leave the site.
  window.onPopState.listen((event) {
    if (event.state != null) {
      var newPage = homePage;
      if (event.state != "") {
        var path = event.state.split('/');
        path.forEach((index) => newPage = newPage.content[int.parse(index)]);
      }
      changePage(newPage, isFromPopState: true);
    }
  });
  
  
      
  
  
  
}
