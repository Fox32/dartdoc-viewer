"name" : "dart.math"
"comment" : ""
"variables" : 
  "SQRT2" : 
    "name" : "SQRT2"
    "qualifiedname" : "dart.math.SQRT2"
    "comment" : "<p>Square root of 2.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "SQRT1_2" : 
    "name" : "SQRT1_2"
    "qualifiedname" : "dart.math.SQRT1_2"
    "comment" : "<p>Square root of 1/2.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "PI" : 
    "name" : "PI"
    "qualifiedname" : "dart.math.PI"
    "comment" : "<p>The PI constant.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "LOG10E" : 
    "name" : "LOG10E"
    "qualifiedname" : "dart.math.LOG10E"
    "comment" : "<p>Base-10 logarithm of <code>E</code>.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "LOG2E" : 
    "name" : "LOG2E"
    "qualifiedname" : "dart.math.LOG2E"
    "comment" : "<p>Base-2 logarithm of <code>E</code>.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "LN2" : 
    "name" : "LN2"
    "qualifiedname" : "dart.math.LN2"
    "comment" : "<p>Natural logarithm of 2.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "LN10" : 
    "name" : "LN10"
    "qualifiedname" : "dart.math.LN10"
    "comment" : "<p>Natural logarithm of 10.</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
  "E" : 
    "name" : "E"
    "qualifiedname" : "dart.math.E"
    "comment" : "<p>Base of the natural logarithms.</p> <p>Typically written as \"e\".</p>"
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.double"
"functions" : 
  "log" : 
    "name" : "log"
    "qualifiedname" : "dart.math.log"
    "comment" : "<p>Converts <code>x</code> to a double and returns the natural logarithm of the value. Returns negative infinity if <code>x</code> is equal to zero. Returns NaN if <code>x</code> is NaN or less than zero.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.log#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "exp" : 
    "name" : "exp"
    "qualifiedname" : "dart.math.exp"
    "comment" : "<p>Converts <code>x</code> to a double and returns the natural exponent, <code>E</code>, to the power <code>x</code>. Returns NaN if <code>x</code> is NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.exp#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "sqrt" : 
    "name" : "sqrt"
    "qualifiedname" : "dart.math.sqrt"
    "comment" : "<p>Converts <code>x</code> to a double and returns the positive square root of the value.</p> <p>Returns -0.0 if <code>x</code> is -0.0, and NaN if <code>x</code> is otherwise negative or NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.sqrt#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "atan" : 
    "name" : "atan"
    "qualifiedname" : "dart.math.atan"
    "comment" : "<p>Converts <code>x</code> to a dobule and returns the arc tangent of the vlaue. Returns a value in the range -PI/2..PI/2, or NaN if <code>x</code> is NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.atan#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "asin" : 
    "name" : "asin"
    "qualifiedname" : "dart.math.asin"
    "comment" : "<p>Converts <code>x</code> to a double and returns the arc sine of the value. Returns a value in the range -PI..PI, or  NaN if <code>x</code> is outside the range -1..1.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.asin#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "acos" : 
    "name" : "acos"
    "qualifiedname" : "dart.math.acos"
    "comment" : "<p>Converts <code>x</code> to a double and returns the arc cosine of the value.</p> <p>Returns a value in the range -PI..PI, or NaN if <code>x</code> is outside the range -1..1.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.acos#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "tan" : 
    "name" : "tan"
    "qualifiedname" : "dart.math.tan"
    "comment" : "<p>Converts <code>x</code> to a double and returns the tangent of the value.</p> <p>The tangent function is equivalent to <code>:sin(x)/cos(x):</code> and may be infinite (positive or negative) when <code>:cos(x):</code> is equal to zero. If <code>x</code> is not a finite number, the result is NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.tan#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "cos" : 
    "name" : "cos"
    "qualifiedname" : "dart.math.cos"
    "comment" : "<p>Converts <code>x</code> to a double and returns the cosine of the value.</p> <p>If <code>x</code> is not a finite number, the result is NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.cos#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "sin" : 
    "name" : "sin"
    "qualifiedname" : "dart.math.sin"
    "comment" : "<p>Converts <code>x</code> to a double and returns the sine of the value.</p> <p>If <code>x</code> is not a finite number, the result is NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.sin#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "pow" : 
    "name" : "pow"
    "qualifiedname" : "dart.math.pow"
    "comment" : "<p>Returns <code>x</code> to the power of <code>exponent</code>.</p> <p>If <code>x</code> is an <code>int</code> and <code>exponent</code> is a non-negative <code>int</code>, the result is an <code>int</code>, otherwise the result it is a <code>double</code>.</p> <p>Notice that an <code>int</code> result cannot overflow, but a <code>double</code> result might be <code>double.INFINITY</code>.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.num"
    "parameters" : 
      "x" : 
        "name" : "x"
        "qualifiedname" : "dart.math.pow#x"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
      "exponent" : 
        "name" : "exponent"
        "qualifiedname" : "dart.math.pow#exponent"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "atan2" : 
    "name" : "atan2"
    "qualifiedname" : "dart.math.atan2"
    "comment" : "<p>A variant of <code>atan</code>.</p> <p>Converts both arguments to doubles.</p> <p>Returns the angle between the positive x-axis and the vector (<code>b</code>,<code>a</code>). The result, in radians, is in the range -PI..PI.</p> <p>If <code>b</code> is positive, this is the same as <code>:atan(b/a):</code>.</p> <p>The result is negative when <code>a</code> is negative (including when <code>a</code> is the double -0.0).</p> <p>If <code>a</code> is equal to zero, the vector (<code>b</code>,<code>a</code>) is considered parallel to the x-axis, even if <code>b</code> is also equal to zero. The sign of <code>b</code> determines the direction of the vector along the x-axis.</p> <p>Returns NaN if either argument is NaN.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.double"
    "parameters" : 
      "a" : 
        "name" : "a"
        "qualifiedname" : "dart.math.atan2#a"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
      "b" : 
        "name" : "b"
        "qualifiedname" : "dart.math.atan2#b"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "max" : 
    "name" : "max"
    "qualifiedname" : "dart.math.max"
    "comment" : "<p>Returns the larger of two numbers.</p> <p>Returns NaN if either argument is NaN. The larger of <code>:-0.0:</code> and <code>:0.0:</code> is <code>:0.0:</code>. If the arguments are otherwise equal (including int and doubles with the same mathematical value) then it is unspecified which of the two arguments is returned.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.num"
    "parameters" : 
      "a" : 
        "name" : "a"
        "qualifiedname" : "dart.math.max#a"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
      "b" : 
        "name" : "b"
        "qualifiedname" : "dart.math.max#b"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
  "min" : 
    "name" : "min"
    "qualifiedname" : "dart.math.min"
    "comment" : "<p>Returns the lesser of two numbers.</p> <p>Returns NaN if either argument is NaN. The lesser of <code>:-0.0:</code> and <code>:0.0:</code> is <code>:-0.0:</code>. If the arguments are otherwise equal (including int and doubles with the same mathematical value) then it is unspecified which of the two arguments is returned.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.num"
    "parameters" : 
      "a" : 
        "name" : "a"
        "qualifiedname" : "dart.math.min#a"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
      "b" : 
        "name" : "b"
        "qualifiedname" : "dart.math.min#b"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.num"
        "value" : "null"
"classes" : 
  "Random" : 
    "name" : "Random"
    "qualifiedname" : "dart.math.Random"
    "comment" : "<p>A random number generator. The default implementation supplies a stream of pseudo-random bits which is not suitable for cryptographic purposes.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "Random" : 
        "name" : "Random"
        "qualifiedname" : "dart.math.Random.Random"
        "comment" : "<p>Creates a random-number generator. The optional parameter <code>seed</code> is used to initialize the internal state of the generator. The implementation of the random stream can change between releases of the library.</p> <p>Implementation note: The default implementation uses up to 64-bits of seed.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.math.Random"
        "parameters" : 
          "seed" : 
            "name" : "seed"
            "qualifiedname" : "dart.math.Random.Random#seed"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "nextInt" : 
        "name" : "nextInt"
        "qualifiedname" : "dart.math.Random.nextInt"
        "comment" : "<p>Generates a positive random integer uniformly distributed on the range from 0, inclusive, to <code>max</code>, exclusive.</p> <p>Implementation note: The default implementation supports <code>max</code> values between 1 and ((1&lt;&lt;32) - 1) inclusive.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "max" : 
            "name" : "max"
            "qualifiedname" : "dart.math.Random.nextInt#max"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "nextDouble" : 
        "name" : "nextDouble"
        "qualifiedname" : "dart.math.Random.nextDouble"
        "comment" : "<p>Generates a positive random floating point value uniformly distributed on the range from 0.0, inclusive, to 1.0, exclusive.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.double"
        "parameters" : 
      "nextBool" : 
        "name" : "nextBool"
        "qualifiedname" : "dart.math.Random.nextBool"
        "comment" : "<p>Generates a random boolean value.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
