"name" : "dart.collection"
"comment" : ""
"variables" : 
"functions" : 
"classes" : 
  "LinkedHashMap" : 
    "name" : "LinkedHashMap"
    "qualifiedname" : "dart.collection.LinkedHashMap"
    "comment" : "<p>A hash-table based implementation of <code>Map</code>.</p> <p>Keys insertion order is remembered, and keys are iterated in insertion order. Values are iterated in their corresponding key's order.</p> <p>The keys of a <code>HashMap</code> must have consistent <code>Object.operator==</code> and <code>Object.hashCode</code> implementations. This means that the <code>==</code> operator must define a stable equivalence relation on the keys (reflexive, anti-symmetric, transitive, and consistent over time), and that <code>hashCode</code> must be the same for objects that are considered equal by <code>==</code>.</p> <p>The map allows <code>null</code> as a key.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Map"
    "variables" : 
    "methods" : 
      "LinkedHashMap" : 
        "name" : "LinkedHashMap"
        "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "LinkedHashMap.from" : 
        "name" : "LinkedHashMap.from"
        "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.from"
        "comment" : "<p>Creates a <code>LinkedHashMap</code> that contains all key value pairs of <code>other</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.LinkedHashMap"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.from#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "LinkedHashMap.fromIterable" : 
        "name" : "LinkedHashMap.fromIterable"
        "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterable"
        "comment" : "<p>Creates a <code>LinkedHashMap</code> where the keys and values are computed from the <code>iterable</code>.</p> <p>For each element of the <code>iterable</code> this constructor computes a key/value pair, by applying <code>key</code> and <code>value</code> respectively.</p> <p>The keys of the key/value pairs do not need to be unique. The last occurrence of a key will simply overwrite any previous value.</p> <p>If no values are specified for <code>key</code> and <code>value</code> the default is the identity function.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.LinkedHashMap"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterable#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterable#key"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterable#value"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "LinkedHashMap.fromIterables" : 
        "name" : "LinkedHashMap.fromIterables"
        "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterables"
        "comment" : "<p>Creates a <code>LinkedHashMap</code> associating the given <code>keys</code> to <code>values</code>.</p> <p>This constructor iterates over <code>keys</code> and <code>values</code> and maps each element of <code>keys</code> to the corresponding element of <code>values</code>.</p> <p>If <code>keys</code> contains the same object multiple times, the last occurrence overwrites the previous value.</p> <p>It is an error if the two <code>Iterable</code>s don't have the same length.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.LinkedHashMap"
        "parameters" : 
          "keys" : 
            "name" : "keys"
            "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterables#keys"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "values" : 
            "name" : "values"
            "qualifiedname" : "dart.collection.LinkedHashMap.LinkedHashMap.fromIterables#values"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "containsKey" : 
        "name" : "containsKey"
        "qualifiedname" : "dart.collection.LinkedHashMap.containsKey"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.LinkedHashMap.containsKey#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "containsValue" : 
        "name" : "containsValue"
        "qualifiedname" : "dart.collection.LinkedHashMap.containsValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.LinkedHashMap.containsValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.LinkedHashMap.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.LinkedHashMap.addAll#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.collection.LinkedHashMap.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dart.collection.LinkedHashMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.LinkedHashMap.[]#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "[]=" : 
        "name" : "[]="
        "qualifiedname" : "dart.collection.LinkedHashMap.[]="
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.LinkedHashMap.[]=#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedHashMap.K"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.LinkedHashMap.[]=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedHashMap.V"
            "value" : "null"
      "putIfAbsent" : 
        "name" : "putIfAbsent"
        "qualifiedname" : "dart.collection.LinkedHashMap.putIfAbsent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.LinkedHashMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.LinkedHashMap.putIfAbsent#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedHashMap.K"
            "value" : "null"
          "ifAbsent" : 
            "name" : "ifAbsent"
            "qualifiedname" : "dart.collection.LinkedHashMap.putIfAbsent#ifAbsent"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.LinkedHashMap.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.LinkedHashMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.LinkedHashMap.remove#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.LinkedHashMap.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.LinkedHashMap.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.LinkedHashMap.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "keys" : 
        "name" : "keys"
        "qualifiedname" : "dart.collection.LinkedHashMap.keys"
        "comment" : "<p>The keys of the map, in insertion order.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "values" : 
        "name" : "values"
        "qualifiedname" : "dart.collection.LinkedHashMap.values"
        "comment" : "<p>The values of the map, in the order of their corresponding <code>keys</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.LinkedHashMap.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.LinkedHashMap.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.LinkedHashMap.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.LinkedHashMap.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "LinkedHashSet" : 
    "name" : "LinkedHashSet"
    "qualifiedname" : "dart.collection.LinkedHashSet"
    "comment" : "<p>A <code>LinkedHashSet</code> is a hash-table based <code>Set</code> implementation.</p> <p>The <code>LinkedHashSet</code> also keep track of the order that elements were inserted in, and iteration happens in first-to-last insertion order.</p> <p>The elements of a <code>LinkedHashSet</code> must have consistent <code>Object.operator==</code> and <code>Object.hashCode</code> implementations. This means that the <code>==</code> operator must define a stable equivalence relation on the elements (reflexive, anti-symmetric, transitive, and consistent over time), and that <code>hashCode</code> must be the same for objects that are considered equal by <code>==</code>.</p> <p>The set allows <code>null</code> as an element.</p> <p>Most simple operations on <code>HashSet</code> are done in constant time: <code>add</code>, <code>contains</code>, <code>remove</code>, and <code>length</code>.</p>"
    "superclass" : "dart.collection._HashSetBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "LinkedHashSet" : 
        "name" : "LinkedHashSet"
        "qualifiedname" : "dart.collection.LinkedHashSet.LinkedHashSet"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "LinkedHashSet.from" : 
        "name" : "LinkedHashSet.from"
        "qualifiedname" : "dart.collection.LinkedHashSet.LinkedHashSet.from"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.LinkedHashSet"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.LinkedHashSet.LinkedHashSet.from#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.LinkedHashSet.iterator"
        "comment" : "<p>Return an iterator that iterates over elements in insertion order.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.LinkedHashSet.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.LinkedHashSet.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.LinkedHashSet.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "contains" : 
        "name" : "contains"
        "qualifiedname" : "dart.collection.LinkedHashSet.contains"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.collection.LinkedHashSet.contains#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.LinkedHashSet.forEach"
        "comment" : "<p>Perform an operation on each element in insertion order.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.LinkedHashSet.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.LinkedHashSet.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedHashSet.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.LinkedHashSet.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedHashSet.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.LinkedHashSet.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedHashSet.E"
        "parameters" : 
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.LinkedHashSet.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.LinkedHashSet.add#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedHashSet.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.LinkedHashSet.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objects" : 
            "name" : "objects"
            "qualifiedname" : "dart.collection.LinkedHashSet.addAll#objects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.LinkedHashSet.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.collection.LinkedHashSet.remove#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "removeAll" : 
        "name" : "removeAll"
        "qualifiedname" : "dart.collection.LinkedHashSet.removeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objectsToRemove" : 
            "name" : "objectsToRemove"
            "qualifiedname" : "dart.collection.LinkedHashSet.removeAll#objectsToRemove"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "removeWhere" : 
        "name" : "removeWhere"
        "qualifiedname" : "dart.collection.LinkedHashSet.removeWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.LinkedHashSet.removeWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "retainWhere" : 
        "name" : "retainWhere"
        "qualifiedname" : "dart.collection.LinkedHashSet.retainWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.LinkedHashSet.retainWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.LinkedHashSet.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_newSet" : 
        "name" : "_newSet"
        "qualifiedname" : "dart.collection.LinkedHashSet._newSet"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
  "ListMixin" : 
    "name" : "ListMixin"
    "qualifiedname" : "dart.collection.ListMixin"
    "comment" : "<p>Base implementation of a <code>List</code> class.</p> <p>This class can be used as a mixin.</p> <p>This implements all read operations using only the <code>length</code> and <code>operator[]</code> members. It implements write operations using those and <code>length=</code> and <code>operator[]=</code></p> <p>A fixed-length list should mix this class in, and the <code>FixedLengthListMixin</code> as well, in that order, to overwrite the methods that modify the length.</p> <p>An unmodifiable list should mix <code>UnmodifiableListMixin</code> on top of this mixin to prevent all modifications.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.List"
    "variables" : 
    "methods" : 
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.ListMixin.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
      "elementAt" : 
        "name" : "elementAt"
        "qualifiedname" : "dart.collection.ListMixin.elementAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListMixin.elementAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.ListMixin.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.ListMixin.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.ListMixin.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.ListMixin.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.ListMixin.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.ListMixin.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.ListMixin.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "contains" : 
        "name" : "contains"
        "qualifiedname" : "dart.collection.ListMixin.contains"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListMixin.contains#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "every" : 
        "name" : "every"
        "qualifiedname" : "dart.collection.ListMixin.every"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.every#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "any" : 
        "name" : "any"
        "qualifiedname" : "dart.collection.ListMixin.any"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.any#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "firstWhere" : 
        "name" : "firstWhere"
        "qualifiedname" : "dart.collection.ListMixin.firstWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.firstWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.ListMixin.firstWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "lastWhere" : 
        "name" : "lastWhere"
        "qualifiedname" : "dart.collection.ListMixin.lastWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.lastWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.ListMixin.lastWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "singleWhere" : 
        "name" : "singleWhere"
        "qualifiedname" : "dart.collection.ListMixin.singleWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.singleWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "join" : 
        "name" : "join"
        "qualifiedname" : "dart.collection.ListMixin.join"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.collection.ListMixin.join#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "where" : 
        "name" : "where"
        "qualifiedname" : "dart.collection.ListMixin.where"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.where#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "map" : 
        "name" : "map"
        "qualifiedname" : "dart.collection.ListMixin.map"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.ListMixin.map#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "expand" : 
        "name" : "expand"
        "qualifiedname" : "dart.collection.ListMixin.expand"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.ListMixin.expand#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "reduce" : 
        "name" : "reduce"
        "qualifiedname" : "dart.collection.ListMixin.reduce"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.ListMixin.reduce#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "fold" : 
        "name" : "fold"
        "qualifiedname" : "dart.collection.ListMixin.fold"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "initialValue" : 
            "name" : "initialValue"
            "qualifiedname" : "dart.collection.ListMixin.fold#initialValue"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.ListMixin.fold#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "skip" : 
        "name" : "skip"
        "qualifiedname" : "dart.collection.ListMixin.skip"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "count" : 
            "name" : "count"
            "qualifiedname" : "dart.collection.ListMixin.skip#count"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "skipWhile" : 
        "name" : "skipWhile"
        "qualifiedname" : "dart.collection.ListMixin.skipWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.skipWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "take" : 
        "name" : "take"
        "qualifiedname" : "dart.collection.ListMixin.take"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "count" : 
            "name" : "count"
            "qualifiedname" : "dart.collection.ListMixin.take#count"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "takeWhile" : 
        "name" : "takeWhile"
        "qualifiedname" : "dart.collection.ListMixin.takeWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.takeWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "toList" : 
        "name" : "toList"
        "qualifiedname" : "dart.collection.ListMixin.toList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "growable" : 
            "name" : "growable"
            "qualifiedname" : "dart.collection.ListMixin.toList#growable"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "toSet" : 
        "name" : "toSet"
        "qualifiedname" : "dart.collection.ListMixin.toSet"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.ListMixin.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListMixin.add#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListMixin.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.ListMixin.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListMixin.addAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.ListMixin.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListMixin.remove#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "removeWhere" : 
        "name" : "removeWhere"
        "qualifiedname" : "dart.collection.ListMixin.removeWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.removeWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "retainWhere" : 
        "name" : "retainWhere"
        "qualifiedname" : "dart.collection.ListMixin.retainWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin.retainWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_filter" : 
        "name" : "_filter"
        "qualifiedname" : "dart.collection.ListMixin._filter"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.collection.ListMixin._filter#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListMixin._filter#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "retainMatching" : 
            "name" : "retainMatching"
            "qualifiedname" : "dart.collection.ListMixin._filter#retainMatching"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.ListMixin.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "removeLast" : 
        "name" : "removeLast"
        "qualifiedname" : "dart.collection.ListMixin.removeLast"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "sort" : 
        "name" : "sort"
        "qualifiedname" : "dart.collection.ListMixin.sort"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "compare" : 
            "name" : "compare"
            "qualifiedname" : "dart.collection.ListMixin.sort#compare"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "asMap" : 
        "name" : "asMap"
        "qualifiedname" : "dart.collection.ListMixin.asMap"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Map"
        "parameters" : 
      "_rangeCheck" : 
        "name" : "_rangeCheck"
        "qualifiedname" : "dart.collection.ListMixin._rangeCheck"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin._rangeCheck#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin._rangeCheck#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "sublist" : 
        "name" : "sublist"
        "qualifiedname" : "dart.collection.ListMixin.sublist"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin.sublist#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin.sublist#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "getRange" : 
        "name" : "getRange"
        "qualifiedname" : "dart.collection.ListMixin.getRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin.getRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin.getRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "removeRange" : 
        "name" : "removeRange"
        "qualifiedname" : "dart.collection.ListMixin.removeRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin.removeRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin.removeRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "fillRange" : 
        "name" : "fillRange"
        "qualifiedname" : "dart.collection.ListMixin.fillRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin.fillRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin.fillRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "fill" : 
            "name" : "fill"
            "qualifiedname" : "dart.collection.ListMixin.fillRange#fill"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListMixin.E"
            "value" : "null"
      "setRange" : 
        "name" : "setRange"
        "qualifiedname" : "dart.collection.ListMixin.setRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin.setRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin.setRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListMixin.setRange#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "skipCount" : 
            "name" : "skipCount"
            "qualifiedname" : "dart.collection.ListMixin.setRange#skipCount"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
      "replaceRange" : 
        "name" : "replaceRange"
        "qualifiedname" : "dart.collection.ListMixin.replaceRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListMixin.replaceRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListMixin.replaceRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "newContents" : 
            "name" : "newContents"
            "qualifiedname" : "dart.collection.ListMixin.replaceRange#newContents"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "indexOf" : 
        "name" : "indexOf"
        "qualifiedname" : "dart.collection.ListMixin.indexOf"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListMixin.indexOf#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "startIndex" : 
            "name" : "startIndex"
            "qualifiedname" : "dart.collection.ListMixin.indexOf#startIndex"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
      "lastIndexOf" : 
        "name" : "lastIndexOf"
        "qualifiedname" : "dart.collection.ListMixin.lastIndexOf"
        "comment" : "<p>Returns the last index in the list <code>a</code> of the given <code>element</code>, starting the search at index <code>startIndex</code> to 0. Returns -1 if <code>element</code> is not found.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListMixin.lastIndexOf#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "startIndex" : 
            "name" : "startIndex"
            "qualifiedname" : "dart.collection.ListMixin.lastIndexOf#startIndex"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "insert" : 
        "name" : "insert"
        "qualifiedname" : "dart.collection.ListMixin.insert"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListMixin.insert#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListMixin.insert#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListMixin.E"
            "value" : "null"
      "removeAt" : 
        "name" : "removeAt"
        "qualifiedname" : "dart.collection.ListMixin.removeAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListMixin.removeAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "insertAll" : 
        "name" : "insertAll"
        "qualifiedname" : "dart.collection.ListMixin.insertAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListMixin.insertAll#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListMixin.insertAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "setAll" : 
        "name" : "setAll"
        "qualifiedname" : "dart.collection.ListMixin.setAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListMixin.setAll#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListMixin.setAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "reversed" : 
        "name" : "reversed"
        "qualifiedname" : "dart.collection.ListMixin.reversed"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.ListMixin.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "ListBase" : 
    "name" : "ListBase"
    "qualifiedname" : "dart.collection.ListBase"
    "comment" : "<p>Abstract implementation of a list.</p> <p>All operations are defined in terms of <code>length</code>, <code>operator[]</code>, <code>operator[]=</code> and <code>length=</code>, which need to be implemented.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.collection.ListMixin"
    "variables" : 
    "methods" : 
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.ListBase.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
      "elementAt" : 
        "name" : "elementAt"
        "qualifiedname" : "dart.collection.ListBase.elementAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListBase.elementAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.ListBase.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.ListBase.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.ListBase.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.ListBase.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.ListBase.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.ListBase.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.ListBase.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "contains" : 
        "name" : "contains"
        "qualifiedname" : "dart.collection.ListBase.contains"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListBase.contains#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "every" : 
        "name" : "every"
        "qualifiedname" : "dart.collection.ListBase.every"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.every#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "any" : 
        "name" : "any"
        "qualifiedname" : "dart.collection.ListBase.any"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.any#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "firstWhere" : 
        "name" : "firstWhere"
        "qualifiedname" : "dart.collection.ListBase.firstWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.firstWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.ListBase.firstWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "lastWhere" : 
        "name" : "lastWhere"
        "qualifiedname" : "dart.collection.ListBase.lastWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.lastWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.ListBase.lastWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "singleWhere" : 
        "name" : "singleWhere"
        "qualifiedname" : "dart.collection.ListBase.singleWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.singleWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "join" : 
        "name" : "join"
        "qualifiedname" : "dart.collection.ListBase.join"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.collection.ListBase.join#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "where" : 
        "name" : "where"
        "qualifiedname" : "dart.collection.ListBase.where"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.where#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "map" : 
        "name" : "map"
        "qualifiedname" : "dart.collection.ListBase.map"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.ListBase.map#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "expand" : 
        "name" : "expand"
        "qualifiedname" : "dart.collection.ListBase.expand"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.ListBase.expand#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "reduce" : 
        "name" : "reduce"
        "qualifiedname" : "dart.collection.ListBase.reduce"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.ListBase.reduce#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "fold" : 
        "name" : "fold"
        "qualifiedname" : "dart.collection.ListBase.fold"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "initialValue" : 
            "name" : "initialValue"
            "qualifiedname" : "dart.collection.ListBase.fold#initialValue"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.ListBase.fold#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "skip" : 
        "name" : "skip"
        "qualifiedname" : "dart.collection.ListBase.skip"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "count" : 
            "name" : "count"
            "qualifiedname" : "dart.collection.ListBase.skip#count"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "skipWhile" : 
        "name" : "skipWhile"
        "qualifiedname" : "dart.collection.ListBase.skipWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.skipWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "take" : 
        "name" : "take"
        "qualifiedname" : "dart.collection.ListBase.take"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "count" : 
            "name" : "count"
            "qualifiedname" : "dart.collection.ListBase.take#count"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "takeWhile" : 
        "name" : "takeWhile"
        "qualifiedname" : "dart.collection.ListBase.takeWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.takeWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "toList" : 
        "name" : "toList"
        "qualifiedname" : "dart.collection.ListBase.toList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "growable" : 
            "name" : "growable"
            "qualifiedname" : "dart.collection.ListBase.toList#growable"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "toSet" : 
        "name" : "toSet"
        "qualifiedname" : "dart.collection.ListBase.toSet"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.ListBase.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListBase.add#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListMixin.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.ListBase.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListBase.addAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.ListBase.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListBase.remove#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "removeWhere" : 
        "name" : "removeWhere"
        "qualifiedname" : "dart.collection.ListBase.removeWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.removeWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "retainWhere" : 
        "name" : "retainWhere"
        "qualifiedname" : "dart.collection.ListBase.retainWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListBase.retainWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.ListBase.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "removeLast" : 
        "name" : "removeLast"
        "qualifiedname" : "dart.collection.ListBase.removeLast"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
      "sort" : 
        "name" : "sort"
        "qualifiedname" : "dart.collection.ListBase.sort"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "compare" : 
            "name" : "compare"
            "qualifiedname" : "dart.collection.ListBase.sort#compare"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "asMap" : 
        "name" : "asMap"
        "qualifiedname" : "dart.collection.ListBase.asMap"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Map"
        "parameters" : 
      "_rangeCheck" : 
        "name" : "_rangeCheck"
        "qualifiedname" : "dart.collection.ListBase._rangeCheck"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase._rangeCheck#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase._rangeCheck#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "sublist" : 
        "name" : "sublist"
        "qualifiedname" : "dart.collection.ListBase.sublist"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase.sublist#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase.sublist#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "getRange" : 
        "name" : "getRange"
        "qualifiedname" : "dart.collection.ListBase.getRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase.getRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase.getRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "removeRange" : 
        "name" : "removeRange"
        "qualifiedname" : "dart.collection.ListBase.removeRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase.removeRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase.removeRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "fillRange" : 
        "name" : "fillRange"
        "qualifiedname" : "dart.collection.ListBase.fillRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase.fillRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase.fillRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "fill" : 
            "name" : "fill"
            "qualifiedname" : "dart.collection.ListBase.fillRange#fill"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListMixin.E"
            "value" : "null"
      "setRange" : 
        "name" : "setRange"
        "qualifiedname" : "dart.collection.ListBase.setRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase.setRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase.setRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListBase.setRange#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "skipCount" : 
            "name" : "skipCount"
            "qualifiedname" : "dart.collection.ListBase.setRange#skipCount"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
      "replaceRange" : 
        "name" : "replaceRange"
        "qualifiedname" : "dart.collection.ListBase.replaceRange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.collection.ListBase.replaceRange#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.collection.ListBase.replaceRange#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "newContents" : 
            "name" : "newContents"
            "qualifiedname" : "dart.collection.ListBase.replaceRange#newContents"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "indexOf" : 
        "name" : "indexOf"
        "qualifiedname" : "dart.collection.ListBase.indexOf"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListBase.indexOf#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "startIndex" : 
            "name" : "startIndex"
            "qualifiedname" : "dart.collection.ListBase.indexOf#startIndex"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
      "lastIndexOf" : 
        "name" : "lastIndexOf"
        "qualifiedname" : "dart.collection.ListBase.lastIndexOf"
        "comment" : "<p>Returns the last index in the list <code>a</code> of the given <code>element</code>, starting the search at index <code>startIndex</code> to 0. Returns -1 if <code>element</code> is not found.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListBase.lastIndexOf#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "startIndex" : 
            "name" : "startIndex"
            "qualifiedname" : "dart.collection.ListBase.lastIndexOf#startIndex"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "insert" : 
        "name" : "insert"
        "qualifiedname" : "dart.collection.ListBase.insert"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListBase.insert#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListBase.insert#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListMixin.E"
            "value" : "null"
      "removeAt" : 
        "name" : "removeAt"
        "qualifiedname" : "dart.collection.ListBase.removeAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListMixin.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListBase.removeAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "insertAll" : 
        "name" : "insertAll"
        "qualifiedname" : "dart.collection.ListBase.insertAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListBase.insertAll#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListBase.insertAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "setAll" : 
        "name" : "setAll"
        "qualifiedname" : "dart.collection.ListBase.setAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListBase.setAll#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.ListBase.setAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "reversed" : 
        "name" : "reversed"
        "qualifiedname" : "dart.collection.ListBase.reversed"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.ListBase.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "HashMap" : 
    "name" : "HashMap"
    "qualifiedname" : "dart.collection.HashMap"
    "comment" : "<p>A hash-table based implementation of <code>Map</code>.</p> <p>The keys of a <code>HashMap</code> must have consistent <code>Object.operator==</code> and <code>Object.hashCode</code> implementations. This means that the <code>==</code> operator must define a stable equivalence relation on the keys (reflexive, anti-symmetric, transitive, and consistent over time), and that <code>hashCode</code> must be the same for objects that are considered equal by <code>==</code>.</p> <p>The map allows <code>null</code> as a key.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Map"
    "variables" : 
    "methods" : 
      "HashMap" : 
        "name" : "HashMap"
        "qualifiedname" : "dart.collection.HashMap.HashMap"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "HashMap.from" : 
        "name" : "HashMap.from"
        "qualifiedname" : "dart.collection.HashMap.HashMap.from"
        "comment" : "<p>Creates a <code>HashMap</code> that contains all key value pairs of <code>other</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.HashMap"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.HashMap.HashMap.from#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "HashMap.fromIterable" : 
        "name" : "HashMap.fromIterable"
        "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterable"
        "comment" : "<p>Creates a <code>HashMap</code> where the keys and values are computed from the <code>iterable</code>.</p> <p>For each element of the <code>iterable</code> this constructor computes a key/value pair, by applying <code>key</code> and <code>value</code> respectively.</p> <p>The keys of the key/value pairs do not need to be unique. The last occurrence of a key will simply overwrite any previous value.</p> <p>If no values are specified for <code>key</code> and <code>value</code> the default is the identity function.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.HashMap"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterable#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterable#key"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterable#value"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "HashMap.fromIterables" : 
        "name" : "HashMap.fromIterables"
        "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterables"
        "comment" : "<p>Creates a <code>HashMap</code> associating the given <code>keys</code> to <code>values</code>.</p> <p>This constructor iterates over <code>keys</code> and <code>values</code> and maps each element of <code>keys</code> to the corresponding element of <code>values</code>.</p> <p>If <code>keys</code> contains the same object multiple times, the last occurrence overwrites the previous value.</p> <p>It is an error if the two <code>Iterable</code>s don't have the same length.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.HashMap"
        "parameters" : 
          "keys" : 
            "name" : "keys"
            "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterables#keys"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "values" : 
            "name" : "values"
            "qualifiedname" : "dart.collection.HashMap.HashMap.fromIterables#values"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.HashMap.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.HashMap.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.HashMap.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "keys" : 
        "name" : "keys"
        "qualifiedname" : "dart.collection.HashMap.keys"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "values" : 
        "name" : "values"
        "qualifiedname" : "dart.collection.HashMap.values"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "containsKey" : 
        "name" : "containsKey"
        "qualifiedname" : "dart.collection.HashMap.containsKey"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.HashMap.containsKey#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "containsValue" : 
        "name" : "containsValue"
        "qualifiedname" : "dart.collection.HashMap.containsValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.HashMap.containsValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.HashMap.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.HashMap.addAll#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.collection.HashMap.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dart.collection.HashMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.HashMap.[]#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "[]=" : 
        "name" : "[]="
        "qualifiedname" : "dart.collection.HashMap.[]="
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.HashMap.[]=#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.HashMap.K"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.HashMap.[]=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.HashMap.V"
            "value" : "null"
      "putIfAbsent" : 
        "name" : "putIfAbsent"
        "qualifiedname" : "dart.collection.HashMap.putIfAbsent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.HashMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.HashMap.putIfAbsent#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.HashMap.K"
            "value" : "null"
          "ifAbsent" : 
            "name" : "ifAbsent"
            "qualifiedname" : "dart.collection.HashMap.putIfAbsent#ifAbsent"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.HashMap.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.HashMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.HashMap.remove#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.HashMap.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.HashMap.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.HashMap.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.HashMap.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "HashSet" : 
    "name" : "HashSet"
    "qualifiedname" : "dart.collection.HashSet"
    "comment" : "<p>A <code>HashSet</code> is a hash-table based <code>Set</code> implementation.</p> <p>The elements of a <code>HashSet</code> must have consistent <code>Object.operator==</code> and <code>Object.hashCode</code> implementations. This means that the <code>==</code> operator must define a stable equivalence relation on the elements (reflexive, anti-symmetric, transitive, and consistent over time), and that <code>hashCode</code> must be the same for objects that are considered equal by <code>==</code>.</p> <p>The set allows <code>null</code> as an element.</p> <p>Most simple operations on <code>HashSet</code> are done in constant time: <code>add</code>, <code>contains</code>, <code>remove</code>, and <code>length</code>.</p>"
    "superclass" : "dart.collection._HashSetBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "HashSet" : 
        "name" : "HashSet"
        "qualifiedname" : "dart.collection.HashSet.HashSet"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "HashSet.from" : 
        "name" : "HashSet.from"
        "qualifiedname" : "dart.collection.HashSet.HashSet.from"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.HashSet"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.HashSet.HashSet.from#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.HashSet.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.HashSet.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.HashSet.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.HashSet.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "contains" : 
        "name" : "contains"
        "qualifiedname" : "dart.collection.HashSet.contains"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.collection.HashSet.contains#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.HashSet.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.HashSet.add#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.HashSet.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.HashSet.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objects" : 
            "name" : "objects"
            "qualifiedname" : "dart.collection.HashSet.addAll#objects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.HashSet.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.collection.HashSet.remove#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "removeAll" : 
        "name" : "removeAll"
        "qualifiedname" : "dart.collection.HashSet.removeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objectsToRemove" : 
            "name" : "objectsToRemove"
            "qualifiedname" : "dart.collection.HashSet.removeAll#objectsToRemove"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "removeWhere" : 
        "name" : "removeWhere"
        "qualifiedname" : "dart.collection.HashSet.removeWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.HashSet.removeWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "retainWhere" : 
        "name" : "retainWhere"
        "qualifiedname" : "dart.collection.HashSet.retainWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.HashSet.retainWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.HashSet.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_newSet" : 
        "name" : "_newSet"
        "qualifiedname" : "dart.collection.HashSet._newSet"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
  "_HashSetBase" : 
    "name" : "_HashSetBase"
    "qualifiedname" : "dart.collection._HashSetBase"
    "comment" : "<p>Common parts of <code>HashSet</code> and <code>LinkedHashSet</code> implementations.</p>"
    "superclass" : "dart.collection.IterableBase"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Set"
    "variables" : 
    "methods" : 
      "containsAll" : 
        "name" : "containsAll"
        "qualifiedname" : "dart.collection._HashSetBase.containsAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection._HashSetBase.containsAll#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "_newSet" : 
        "name" : "_newSet"
        "qualifiedname" : "dart.collection._HashSetBase._newSet"
        "comment" : "<p>Create a new Set of the same type as this.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
      "intersection" : 
        "name" : "intersection"
        "qualifiedname" : "dart.collection._HashSetBase.intersection"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection._HashSetBase.intersection#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Set"
            "value" : "null"
      "union" : 
        "name" : "union"
        "qualifiedname" : "dart.collection._HashSetBase.union"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection._HashSetBase.union#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Set"
            "value" : "null"
      "difference" : 
        "name" : "difference"
        "qualifiedname" : "dart.collection._HashSetBase.difference"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection._HashSetBase.difference#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Set"
            "value" : "null"
      "retainAll" : 
        "name" : "retainAll"
        "qualifiedname" : "dart.collection._HashSetBase.retainAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objectsToRetain" : 
            "name" : "objectsToRetain"
            "qualifiedname" : "dart.collection._HashSetBase.retainAll#objectsToRetain"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection._HashSetBase.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "LinkedListEntry" : 
    "name" : "LinkedListEntry"
    "qualifiedname" : "dart.collection.LinkedListEntry"
    "comment" : "<p>Entry element for a <code>LinkedList</code>. Any entry must extend this class.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.collection._LinkedListLink"
    "variables" : 
      "_list" : 
        "name" : "_list"
        "qualifiedname" : "dart.collection.LinkedListEntry._list"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection.LinkedList"
      "_next" : 
        "name" : "_next"
        "qualifiedname" : "dart.collection.LinkedListEntry._next"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
      "_previous" : 
        "name" : "_previous"
        "qualifiedname" : "dart.collection.LinkedListEntry._previous"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
    "methods" : 
      "list" : 
        "name" : "list"
        "qualifiedname" : "dart.collection.LinkedListEntry.list"
        "comment" : "<p>Get the list containing this element.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedList"
        "parameters" : 
      "unlink" : 
        "name" : "unlink"
        "qualifiedname" : "dart.collection.LinkedListEntry.unlink"
        "comment" : "<p>Unlink the element from the list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "next" : 
        "name" : "next"
        "qualifiedname" : "dart.collection.LinkedListEntry.next"
        "comment" : "<p>Return the succeeding element in the list.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedListEntry.E"
        "parameters" : 
      "previous" : 
        "name" : "previous"
        "qualifiedname" : "dart.collection.LinkedListEntry.previous"
        "comment" : "<p>Return the preceeding element in the list.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedListEntry.E"
        "parameters" : 
      "insertAfter" : 
        "name" : "insertAfter"
        "qualifiedname" : "dart.collection.LinkedListEntry.insertAfter"
        "comment" : "<p>insert an element after this.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedListEntry.insertAfter#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedListEntry.E"
            "value" : "null"
      "insertBefore" : 
        "name" : "insertBefore"
        "qualifiedname" : "dart.collection.LinkedListEntry.insertBefore"
        "comment" : "<p>Insert an element before this.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedListEntry.insertBefore#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedListEntry.E"
            "value" : "null"
  "_LinkedListLink" : 
    "name" : "_LinkedListLink"
    "qualifiedname" : "dart.collection._LinkedListLink"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_next" : 
        "name" : "_next"
        "qualifiedname" : "dart.collection._LinkedListLink._next"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
      "_previous" : 
        "name" : "_previous"
        "qualifiedname" : "dart.collection._LinkedListLink._previous"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
    "methods" : 
  "_LinkedListIterator" : 
    "name" : "_LinkedListIterator"
    "qualifiedname" : "dart.collection._LinkedListIterator"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterator"
    "variables" : 
      "_list" : 
        "name" : "_list"
        "qualifiedname" : "dart.collection._LinkedListIterator._list"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.collection.LinkedList"
      "_modificationCount" : 
        "name" : "_modificationCount"
        "qualifiedname" : "dart.collection._LinkedListIterator._modificationCount"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_current" : 
        "name" : "_current"
        "qualifiedname" : "dart.collection._LinkedListIterator._current"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListIterator.E"
      "_next" : 
        "name" : "_next"
        "qualifiedname" : "dart.collection._LinkedListIterator._next"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
    "methods" : 
      "_LinkedListIterator" : 
        "name" : "_LinkedListIterator"
        "qualifiedname" : "dart.collection._LinkedListIterator._LinkedListIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "list" : 
            "name" : "list"
            "qualifiedname" : "dart.collection._LinkedListIterator._LinkedListIterator#list"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedList"
            "value" : "null"
      "current" : 
        "name" : "current"
        "qualifiedname" : "dart.collection._LinkedListIterator.current"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._LinkedListIterator.E"
        "parameters" : 
      "moveNext" : 
        "name" : "moveNext"
        "qualifiedname" : "dart.collection._LinkedListIterator.moveNext"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "LinkedList" : 
    "name" : "LinkedList"
    "qualifiedname" : "dart.collection.LinkedList"
    "comment" : "<p>A linked list implementation, providing O(1) removal(unlink) of elements and manual traversal through <code>next</code> and <code>previous</code>.</p> <p>The list elements must extend <code>LinkedListEntry</code>.</p>"
    "superclass" : "dart.collection.IterableBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.collection._LinkedListLink"
    "variables" : 
      "_modificationCount" : 
        "name" : "_modificationCount"
        "qualifiedname" : "dart.collection.LinkedList._modificationCount"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_length" : 
        "name" : "_length"
        "qualifiedname" : "dart.collection.LinkedList._length"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_next" : 
        "name" : "_next"
        "qualifiedname" : "dart.collection.LinkedList._next"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
      "_previous" : 
        "name" : "_previous"
        "qualifiedname" : "dart.collection.LinkedList._previous"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._LinkedListLink"
    "methods" : 
      "LinkedList" : 
        "name" : "LinkedList"
        "qualifiedname" : "dart.collection.LinkedList.LinkedList"
        "comment" : "<p>Construct a new empty linked list.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "addFirst" : 
        "name" : "addFirst"
        "qualifiedname" : "dart.collection.LinkedList.addFirst"
        "comment" : "<p>Add <code>entry</code> to the beginning of the list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedList.addFirst#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedList.E"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.LinkedList.add"
        "comment" : "<p>Add <code>entry</code> to the end of the list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedList.add#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedList.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.LinkedList.addAll"
        "comment" : "<p>Add <code>entries</code> to the end of the list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entries" : 
            "name" : "entries"
            "qualifiedname" : "dart.collection.LinkedList.addAll#entries"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.LinkedList.remove"
        "comment" : "<p>Remove <code>entry</code> from the list. This is the same as calling <code>entry.unlink()</code>.</p> <p>If <code>entry</code> is not in the list, <code>false</code> is returned.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedList.remove#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedList.E"
            "value" : "null"
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.LinkedList.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.LinkedList.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.LinkedList.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.LinkedList.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.LinkedList.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedList.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.LinkedList.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedList.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.LinkedList.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.LinkedList.E"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.LinkedList.forEach"
        "comment" : "<p>Call <code>action</code> with each entry in the list.</p> <p>It's an error if <code>action</code> modify the list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.LinkedList.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.LinkedList.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_insertAfter" : 
        "name" : "_insertAfter"
        "qualifiedname" : "dart.collection.LinkedList._insertAfter"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedList._insertAfter#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._LinkedListLink"
            "value" : "null"
          "newEntry" : 
            "name" : "newEntry"
            "qualifiedname" : "dart.collection.LinkedList._insertAfter#newEntry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedList.E"
            "value" : "null"
      "_unlink" : 
        "name" : "_unlink"
        "qualifiedname" : "dart.collection.LinkedList._unlink"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "entry" : 
            "name" : "entry"
            "qualifiedname" : "dart.collection.LinkedList._unlink#entry"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.LinkedListEntry"
            "value" : "null"
  "_SplayTreeNodeIterator" : 
    "name" : "_SplayTreeNodeIterator"
    "qualifiedname" : "dart.collection._SplayTreeNodeIterator"
    "comment" : ""
    "superclass" : "dart.collection._SplayTreeIterator"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_SplayTreeNodeIterator" : 
        "name" : "_SplayTreeNodeIterator"
        "qualifiedname" : "dart.collection._SplayTreeNodeIterator._SplayTreeNodeIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection._SplayTreeNodeIterator._SplayTreeNodeIterator#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree"
            "value" : "null"
      "_getValue" : 
        "name" : "_getValue"
        "qualifiedname" : "dart.collection._SplayTreeNodeIterator._getValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection._SplayTreeNode"
        "parameters" : 
          "node" : 
            "name" : "node"
            "qualifiedname" : "dart.collection._SplayTreeNodeIterator._getValue#node"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode"
            "value" : "null"
  "_SplayTreeValueIterator" : 
    "name" : "_SplayTreeValueIterator"
    "qualifiedname" : "dart.collection._SplayTreeValueIterator"
    "comment" : ""
    "superclass" : "dart.collection._SplayTreeIterator"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_SplayTreeValueIterator" : 
        "name" : "_SplayTreeValueIterator"
        "qualifiedname" : "dart.collection._SplayTreeValueIterator._SplayTreeValueIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection._SplayTreeValueIterator._SplayTreeValueIterator#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap"
            "value" : "null"
      "_getValue" : 
        "name" : "_getValue"
        "qualifiedname" : "dart.collection._SplayTreeValueIterator._getValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection._SplayTreeValueIterator.V"
        "parameters" : 
          "node" : 
            "name" : "node"
            "qualifiedname" : "dart.collection._SplayTreeValueIterator._getValue#node"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeMapNode"
            "value" : "null"
  "_SplayTreeKeyIterator" : 
    "name" : "_SplayTreeKeyIterator"
    "qualifiedname" : "dart.collection._SplayTreeKeyIterator"
    "comment" : ""
    "superclass" : "dart.collection._SplayTreeIterator"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_SplayTreeKeyIterator" : 
        "name" : "_SplayTreeKeyIterator"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterator._SplayTreeKeyIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection._SplayTreeKeyIterator._SplayTreeKeyIterator#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree"
            "value" : "null"
      "_getValue" : 
        "name" : "_getValue"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterator._getValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection._SplayTreeKeyIterator.K"
        "parameters" : 
          "node" : 
            "name" : "node"
            "qualifiedname" : "dart.collection._SplayTreeKeyIterator._getValue#node"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode"
            "value" : "null"
  "_SplayTreeValueIterable" : 
    "name" : "_SplayTreeValueIterable"
    "qualifiedname" : "dart.collection._SplayTreeValueIterable"
    "comment" : ""
    "superclass" : "dart.collection.IterableBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_map" : 
        "name" : "_map"
        "qualifiedname" : "dart.collection._SplayTreeValueIterable._map"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection.SplayTreeMap"
    "methods" : 
      "_SplayTreeValueIterable" : 
        "name" : "_SplayTreeValueIterable"
        "qualifiedname" : "dart.collection._SplayTreeValueIterable._SplayTreeValueIterable"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_map" : 
            "name" : "_map"
            "qualifiedname" : "dart.collection._SplayTreeValueIterable._SplayTreeValueIterable#_map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection._SplayTreeValueIterable.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection._SplayTreeValueIterable.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection._SplayTreeValueIterable.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
  "_SplayTreeKeyIterable" : 
    "name" : "_SplayTreeKeyIterable"
    "qualifiedname" : "dart.collection._SplayTreeKeyIterable"
    "comment" : ""
    "superclass" : "dart.collection.IterableBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_tree" : 
        "name" : "_tree"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterable._tree"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTree"
    "methods" : 
      "_SplayTreeKeyIterable" : 
        "name" : "_SplayTreeKeyIterable"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterable._SplayTreeKeyIterable"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_tree" : 
            "name" : "_tree"
            "qualifiedname" : "dart.collection._SplayTreeKeyIterable._SplayTreeKeyIterable#_tree"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterable.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterable.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection._SplayTreeKeyIterable.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
  "_SplayTreeIterator" : 
    "name" : "_SplayTreeIterator"
    "qualifiedname" : "dart.collection._SplayTreeIterator"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterator"
    "variables" : 
      "_tree" : 
        "name" : "_tree"
        "qualifiedname" : "dart.collection._SplayTreeIterator._tree"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.collection._SplayTree"
      "_workList" : 
        "name" : "_workList"
        "qualifiedname" : "dart.collection._SplayTreeIterator._workList"
        "comment" : "<p>Worklist of nodes to visit.</p> <p>These nodes have been passed over on the way down in a depth-first left-to-right traversal. Visiting each node, and their right subtrees will visit the remainder of the nodes of a full traversal.</p> <p>Only valid as long as the original tree isn't reordered.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
      "_modificationCount" : 
        "name" : "_modificationCount"
        "qualifiedname" : "dart.collection._SplayTreeIterator._modificationCount"
        "comment" : "<p>Original modification counter of <code>_tree</code>.</p> <p>Incremented on <code>_tree</code> when a key is added or removed. If it changes, iteration is aborted.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_splayCount" : 
        "name" : "_splayCount"
        "qualifiedname" : "dart.collection._SplayTreeIterator._splayCount"
        "comment" : "<p>Count of splay operations on <code>_tree</code> when <code>_workList</code> was built.</p> <p>If the splay count on <code>_tree</code> increases, <code>_workList</code> becomes invalid.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_currentNode" : 
        "name" : "_currentNode"
        "qualifiedname" : "dart.collection._SplayTreeIterator._currentNode"
        "comment" : "<p>Current node.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTreeNode"
    "methods" : 
      "_SplayTreeIterator" : 
        "name" : "_SplayTreeIterator"
        "qualifiedname" : "dart.collection._SplayTreeIterator._SplayTreeIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "tree" : 
            "name" : "tree"
            "qualifiedname" : "dart.collection._SplayTreeIterator._SplayTreeIterator#tree"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree"
            "value" : "null"
      "current" : 
        "name" : "current"
        "qualifiedname" : "dart.collection._SplayTreeIterator.current"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._SplayTreeIterator.T"
        "parameters" : 
      "_findLeftMostDescendent" : 
        "name" : "_findLeftMostDescendent"
        "qualifiedname" : "dart.collection._SplayTreeIterator._findLeftMostDescendent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "node" : 
            "name" : "node"
            "qualifiedname" : "dart.collection._SplayTreeIterator._findLeftMostDescendent#node"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode"
            "value" : "null"
      "_rebuildWorkList" : 
        "name" : "_rebuildWorkList"
        "qualifiedname" : "dart.collection._SplayTreeIterator._rebuildWorkList"
        "comment" : "<p>Called when the tree structure of the tree has changed.</p> <p>This can be caused by a splay operation. If the key-set changes, iteration is aborted before getting here, so we know that the keys are the same as before, it's only the tree that has been reordered.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "currentNode" : 
            "name" : "currentNode"
            "qualifiedname" : "dart.collection._SplayTreeIterator._rebuildWorkList#currentNode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode"
            "value" : "null"
      "moveNext" : 
        "name" : "moveNext"
        "qualifiedname" : "dart.collection._SplayTreeIterator.moveNext"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_getValue" : 
        "name" : "_getValue"
        "qualifiedname" : "dart.collection._SplayTreeIterator._getValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection._SplayTreeIterator.T"
        "parameters" : 
          "node" : 
            "name" : "node"
            "qualifiedname" : "dart.collection._SplayTreeIterator._getValue#node"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode"
            "value" : "null"
  "SplayTreeMap" : 
    "name" : "SplayTreeMap"
    "qualifiedname" : "dart.collection.SplayTreeMap"
    "comment" : ""
    "superclass" : "dart.collection._SplayTree"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Map"
    "variables" : 
      "_comparator" : 
        "name" : "_comparator"
        "qualifiedname" : "dart.collection.SplayTreeMap._comparator"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Function"
    "methods" : 
      "SplayTreeMap" : 
        "name" : "SplayTreeMap"
        "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "compare" : 
            "name" : "compare"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap#compare"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "SplayTreeMap.from" : 
        "name" : "SplayTreeMap.from"
        "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.from"
        "comment" : "<p>Creates a <code>SplayTreeMap</code> that contains all key value pairs of <code>other</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.from#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "compare" : 
            "name" : "compare"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.from#compare"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "SplayTreeMap.fromIterable" : 
        "name" : "SplayTreeMap.fromIterable"
        "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterable"
        "comment" : "<p>Creates a <code>SplayTreeMap</code> where the keys and values are computed from the <code>iterable</code>.</p> <p>For each element of the <code>iterable</code> this constructor computes a key/value pair, by applying <code>key</code> and <code>value</code> respectively.</p> <p>The keys of the key/value pairs do not need to be unique. The last occurrence of a key will simply overwrite any previous value.</p> <p>If no values are specified for <code>key</code> and <code>value</code> the default is the identity function.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterable#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterable#key"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterable#value"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "compare" : 
            "name" : "compare"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterable#compare"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "SplayTreeMap.fromIterables" : 
        "name" : "SplayTreeMap.fromIterables"
        "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterables"
        "comment" : "<p>Creates a <code>SplayTreeMap</code> associating the given <code>keys</code> to <code>values</code>.</p> <p>This constructor iterates over <code>keys</code> and <code>values</code> and maps each element of <code>keys</code> to the corresponding element of <code>values</code>.</p> <p>If <code>keys</code> contains the same object multiple times, the last occurrence overwrites the previous value.</p> <p>It is an error if the two <code>Iterable</code>s don't have the same length.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap"
        "parameters" : 
          "keys" : 
            "name" : "keys"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterables#keys"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "values" : 
            "name" : "values"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterables#values"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "compare" : 
            "name" : "compare"
            "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap.fromIterables#compare"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_compare" : 
        "name" : "_compare"
        "qualifiedname" : "dart.collection.SplayTreeMap._compare"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "key1" : 
            "name" : "key1"
            "qualifiedname" : "dart.collection.SplayTreeMap._compare#key1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.K"
            "value" : "null"
          "key2" : 
            "name" : "key2"
            "qualifiedname" : "dart.collection.SplayTreeMap._compare#key2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.K"
            "value" : "null"
      "SplayTreeMap._internal" : 
        "name" : "SplayTreeMap._internal"
        "qualifiedname" : "dart.collection.SplayTreeMap.SplayTreeMap._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.collection.SplayTreeMap.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.[]#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.SplayTreeMap.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.remove#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "[]=" : 
        "name" : "[]="
        "qualifiedname" : "dart.collection.SplayTreeMap.[]="
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.[]=#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.K"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.SplayTreeMap.[]=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.V"
            "value" : "null"
      "putIfAbsent" : 
        "name" : "putIfAbsent"
        "qualifiedname" : "dart.collection.SplayTreeMap.putIfAbsent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.putIfAbsent#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.K"
            "value" : "null"
          "ifAbsent" : 
            "name" : "ifAbsent"
            "qualifiedname" : "dart.collection.SplayTreeMap.putIfAbsent#ifAbsent"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.SplayTreeMap.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.SplayTreeMap.addAll#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.SplayTreeMap.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.SplayTreeMap.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.SplayTreeMap.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.SplayTreeMap.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.SplayTreeMap.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.SplayTreeMap.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "containsKey" : 
        "name" : "containsKey"
        "qualifiedname" : "dart.collection.SplayTreeMap.containsKey"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.containsKey#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "containsValue" : 
        "name" : "containsValue"
        "qualifiedname" : "dart.collection.SplayTreeMap.containsValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.SplayTreeMap.containsValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "keys" : 
        "name" : "keys"
        "qualifiedname" : "dart.collection.SplayTreeMap.keys"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "values" : 
        "name" : "values"
        "qualifiedname" : "dart.collection.SplayTreeMap.values"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.SplayTreeMap.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "firstKey" : 
        "name" : "firstKey"
        "qualifiedname" : "dart.collection.SplayTreeMap.firstKey"
        "comment" : "<p>Get the first key in the map. Returns <code>null</code> if the map is empty.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.K"
        "parameters" : 
      "lastKey" : 
        "name" : "lastKey"
        "qualifiedname" : "dart.collection.SplayTreeMap.lastKey"
        "comment" : "<p>Get the last key in the map. Returns <code>null</code> if the map is empty.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.K"
        "parameters" : 
      "lastKeyBefore" : 
        "name" : "lastKeyBefore"
        "qualifiedname" : "dart.collection.SplayTreeMap.lastKeyBefore"
        "comment" : "<p>Get the last key in the map that is strictly smaller than <code>key</code>. Returns <code>null</code> if no key was not found.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.K"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.lastKeyBefore#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.K"
            "value" : "null"
      "firstKeyAfter" : 
        "name" : "firstKeyAfter"
        "qualifiedname" : "dart.collection.SplayTreeMap.firstKeyAfter"
        "comment" : "<p>Get the first key in the map that is strictly larger than <code>key</code>. Returns <code>null</code> if no key was not found.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.SplayTreeMap.K"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.SplayTreeMap.firstKeyAfter#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.SplayTreeMap.K"
            "value" : "null"
  "_SplayTree" : 
    "name" : "_SplayTree"
    "qualifiedname" : "dart.collection._SplayTree"
    "comment" : "<p>A splay tree is a self-balancing binary search tree.</p> <p>It has the additional property that recently accessed elements are quick to access again. It performs basic operations such as insertion, look-up and removal, in O(log(n)) amortized time.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_root" : 
        "name" : "_root"
        "qualifiedname" : "dart.collection._SplayTree._root"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTreeNode"
      "_dummy" : 
        "name" : "_dummy"
        "qualifiedname" : "dart.collection._SplayTree._dummy"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTreeNode"
      "_count" : 
        "name" : "_count"
        "qualifiedname" : "dart.collection._SplayTree._count"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_modificationCount" : 
        "name" : "_modificationCount"
        "qualifiedname" : "dart.collection._SplayTree._modificationCount"
        "comment" : "<p>Counter incremented whenever the keys in the map changes.</p> <p>Used to detect concurrent modifications.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_splayCount" : 
        "name" : "_splayCount"
        "qualifiedname" : "dart.collection._SplayTree._splayCount"
        "comment" : "<p>Counter incremented whenever the tree structure changes.</p> <p>Used to detect that an in-place traversal cannot use cached information that relies on the tree structure.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_compare" : 
        "name" : "_compare"
        "qualifiedname" : "dart.collection._SplayTree._compare"
        "comment" : "<p>Comparison used to compare keys.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "key1" : 
            "name" : "key1"
            "qualifiedname" : "dart.collection._SplayTree._compare#key1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree.K"
            "value" : "null"
          "key2" : 
            "name" : "key2"
            "qualifiedname" : "dart.collection._SplayTree._compare#key2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree.K"
            "value" : "null"
      "_splay" : 
        "name" : "_splay"
        "qualifiedname" : "dart.collection._SplayTree._splay"
        "comment" : "<p>Perform the splay operation for the given key. Moves the node with the given key to the top of the tree.  If no node has the given key, the last node on the search path is moved to the top of the tree. This is the simplified top-down splaying algorithm from: \"Self-adjusting Binary Search Trees\" by Sleator and Tarjan.</p> <p>Returns the result of comparing the new root of the tree to <code>key</code>. Returns -1 if the table is empty.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection._SplayTree._splay#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree.K"
            "value" : "null"
      "_splayMin" : 
        "name" : "_splayMin"
        "qualifiedname" : "dart.collection._SplayTree._splayMin"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_splayMax" : 
        "name" : "_splayMax"
        "qualifiedname" : "dart.collection._SplayTree._splayMax"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_remove" : 
        "name" : "_remove"
        "qualifiedname" : "dart.collection._SplayTree._remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection._SplayTreeNode"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection._SplayTree._remove#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTree.K"
            "value" : "null"
      "_addNewRoot" : 
        "name" : "_addNewRoot"
        "qualifiedname" : "dart.collection._SplayTree._addNewRoot"
        "comment" : "<p>Adds a new root node with the given <code>key</code> or <code>value</code>.</p> <p>The <code>comp</code> value is the result of comparing the existing root's key with key.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "node" : 
            "name" : "node"
            "qualifiedname" : "dart.collection._SplayTree._addNewRoot#node"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode"
            "value" : "null"
          "comp" : 
            "name" : "comp"
            "qualifiedname" : "dart.collection._SplayTree._addNewRoot#comp"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_first" : 
        "name" : "_first"
        "qualifiedname" : "dart.collection._SplayTree._first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._SplayTreeNode"
        "parameters" : 
      "_last" : 
        "name" : "_last"
        "qualifiedname" : "dart.collection._SplayTree._last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._SplayTreeNode"
        "parameters" : 
      "_clear" : 
        "name" : "_clear"
        "qualifiedname" : "dart.collection._SplayTree._clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_SplayTreeMapNode" : 
    "name" : "_SplayTreeMapNode"
    "qualifiedname" : "dart.collection._SplayTreeMapNode"
    "comment" : "<p>A node in a splay tree based map.</p> <p>A <code>_SplayTreeNode</code> that also contains a value</p>"
    "superclass" : "dart.collection._SplayTreeNode"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.collection._SplayTreeMapNode.value"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTreeMapNode.V"
    "methods" : 
      "_SplayTreeMapNode" : 
        "name" : "_SplayTreeMapNode"
        "qualifiedname" : "dart.collection._SplayTreeMapNode._SplayTreeMapNode"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection._SplayTreeMapNode._SplayTreeMapNode#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeMapNode.K"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection._SplayTreeMapNode._SplayTreeMapNode#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeMapNode.V"
            "value" : "null"
  "_SplayTreeNode" : 
    "name" : "_SplayTreeNode"
    "qualifiedname" : "dart.collection._SplayTreeNode"
    "comment" : "<p>A node in a splay tree. It holds the sorting key and the left and right children in the tree.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "key" : 
        "name" : "key"
        "qualifiedname" : "dart.collection._SplayTreeNode.key"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.collection._SplayTreeNode.K"
      "left" : 
        "name" : "left"
        "qualifiedname" : "dart.collection._SplayTreeNode.left"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTreeNode"
      "right" : 
        "name" : "right"
        "qualifiedname" : "dart.collection._SplayTreeNode.right"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._SplayTreeNode"
    "methods" : 
      "_SplayTreeNode" : 
        "name" : "_SplayTreeNode"
        "qualifiedname" : "dart.collection._SplayTreeNode._SplayTreeNode"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection._SplayTreeNode._SplayTreeNode#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._SplayTreeNode.K"
            "value" : "null"
  "_ListQueueIterator" : 
    "name" : "_ListQueueIterator"
    "qualifiedname" : "dart.collection._ListQueueIterator"
    "comment" : "<p>Iterator for a <code>ListQueue</code>.</p> <p>Considers any add or remove operation a concurrent modification.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterator"
    "variables" : 
      "_queue" : 
        "name" : "_queue"
        "qualifiedname" : "dart.collection._ListQueueIterator._queue"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.collection.ListQueue"
      "_end" : 
        "name" : "_end"
        "qualifiedname" : "dart.collection._ListQueueIterator._end"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_modificationCount" : 
        "name" : "_modificationCount"
        "qualifiedname" : "dart.collection._ListQueueIterator._modificationCount"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_position" : 
        "name" : "_position"
        "qualifiedname" : "dart.collection._ListQueueIterator._position"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_current" : 
        "name" : "_current"
        "qualifiedname" : "dart.collection._ListQueueIterator._current"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._ListQueueIterator.E"
    "methods" : 
      "_ListQueueIterator" : 
        "name" : "_ListQueueIterator"
        "qualifiedname" : "dart.collection._ListQueueIterator._ListQueueIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "queue" : 
            "name" : "queue"
            "qualifiedname" : "dart.collection._ListQueueIterator._ListQueueIterator#queue"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListQueue"
            "value" : "null"
      "current" : 
        "name" : "current"
        "qualifiedname" : "dart.collection._ListQueueIterator.current"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._ListQueueIterator.E"
        "parameters" : 
      "moveNext" : 
        "name" : "moveNext"
        "qualifiedname" : "dart.collection._ListQueueIterator.moveNext"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "ListQueue" : 
    "name" : "ListQueue"
    "qualifiedname" : "dart.collection.ListQueue"
    "comment" : "<p>List based <code>Queue</code>.</p> <p>Keeps a cyclic buffer of elements, and grows to a larger buffer when it fills up. This guarantees constant time peek and remove operations, and amortized constant time add operations.</p> <p>The structure is efficient for any queue or stack usage.</p> <p>Operations like <code>removeAll</code> and <code>removeWhere</code> are very inefficient. If those are needed, use a <code>DoubleLinkedQueue</code> instead.</p>"
    "superclass" : "dart.collection.IterableBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.collection.Queue"
    "variables" : 
      "_INITIAL_CAPACITY" : 
        "name" : "_INITIAL_CAPACITY"
        "qualifiedname" : "dart.collection.ListQueue._INITIAL_CAPACITY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_table" : 
        "name" : "_table"
        "qualifiedname" : "dart.collection.ListQueue._table"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_head" : 
        "name" : "_head"
        "qualifiedname" : "dart.collection.ListQueue._head"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_tail" : 
        "name" : "_tail"
        "qualifiedname" : "dart.collection.ListQueue._tail"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_modificationCount" : 
        "name" : "_modificationCount"
        "qualifiedname" : "dart.collection.ListQueue._modificationCount"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "ListQueue" : 
        "name" : "ListQueue"
        "qualifiedname" : "dart.collection.ListQueue.ListQueue"
        "comment" : "<p>Create an empty queue.</p> <p>If <code>initialCapacity</code> is given, prepare the queue for at least that many elements.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "initialCapacity" : 
            "name" : "initialCapacity"
            "qualifiedname" : "dart.collection.ListQueue.ListQueue#initialCapacity"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "ListQueue.from" : 
        "name" : "ListQueue.from"
        "qualifiedname" : "dart.collection.ListQueue.ListQueue.from"
        "comment" : "<p>Create a queue initially containing the elements of <code>source</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.ListQueue"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.collection.ListQueue.ListQueue.from#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.ListQueue.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterator"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.ListQueue.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "action" : 
            "name" : "action"
            "qualifiedname" : "dart.collection.ListQueue.forEach#action"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.ListQueue.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.ListQueue.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.ListQueue.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListQueue.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.ListQueue.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListQueue.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.ListQueue.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.ListQueue.E"
        "parameters" : 
      "elementAt" : 
        "name" : "elementAt"
        "qualifiedname" : "dart.collection.ListQueue.elementAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListQueue.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.ListQueue.elementAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "toList" : 
        "name" : "toList"
        "qualifiedname" : "dart.collection.ListQueue.toList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "growable" : 
            "name" : "growable"
            "qualifiedname" : "dart.collection.ListQueue.toList#growable"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.ListQueue.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListQueue.add#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListQueue.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.ListQueue.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "elements" : 
            "name" : "elements"
            "qualifiedname" : "dart.collection.ListQueue.addAll#elements"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.ListQueue.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.collection.ListQueue.remove#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "_filterWhere" : 
        "name" : "_filterWhere"
        "qualifiedname" : "dart.collection.ListQueue._filterWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListQueue._filterWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "removeMatching" : 
            "name" : "removeMatching"
            "qualifiedname" : "dart.collection.ListQueue._filterWhere#removeMatching"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "removeWhere" : 
        "name" : "removeWhere"
        "qualifiedname" : "dart.collection.ListQueue.removeWhere"
        "comment" : "<p>Remove all elements matched by <code>test</code>.</p> <p>This method is inefficient since it works by repeatedly removing single elements, each of which can take linear time.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListQueue.removeWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "retainWhere" : 
        "name" : "retainWhere"
        "qualifiedname" : "dart.collection.ListQueue.retainWhere"
        "comment" : "<p>Remove all elements not matched by <code>test</code>.</p> <p>This method is inefficient since it works by repeatedly removing single elements, each of which can take linear time.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.ListQueue.retainWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.ListQueue.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.ListQueue.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "addLast" : 
        "name" : "addLast"
        "qualifiedname" : "dart.collection.ListQueue.addLast"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListQueue.addLast#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListQueue.E"
            "value" : "null"
      "addFirst" : 
        "name" : "addFirst"
        "qualifiedname" : "dart.collection.ListQueue.addFirst"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListQueue.addFirst#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListQueue.E"
            "value" : "null"
      "removeFirst" : 
        "name" : "removeFirst"
        "qualifiedname" : "dart.collection.ListQueue.removeFirst"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListQueue.E"
        "parameters" : 
      "removeLast" : 
        "name" : "removeLast"
        "qualifiedname" : "dart.collection.ListQueue.removeLast"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.ListQueue.E"
        "parameters" : 
      "_isPowerOf2" : 
        "name" : "_isPowerOf2"
        "qualifiedname" : "dart.collection.ListQueue._isPowerOf2"
        "comment" : "<p>Whether <code>number</code> is a power of two.</p> <p>Only works for positive numbers.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "number" : 
            "name" : "number"
            "qualifiedname" : "dart.collection.ListQueue._isPowerOf2#number"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_nextPowerOf2" : 
        "name" : "_nextPowerOf2"
        "qualifiedname" : "dart.collection.ListQueue._nextPowerOf2"
        "comment" : "<p>Rounds <code>number</code> up to the nearest power of 2.</p> <p>If <code>number</code> is a power of 2 already, it is returned.</p> <p>Only works for positive numbers.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "number" : 
            "name" : "number"
            "qualifiedname" : "dart.collection.ListQueue._nextPowerOf2#number"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_checkModification" : 
        "name" : "_checkModification"
        "qualifiedname" : "dart.collection.ListQueue._checkModification"
        "comment" : "<p>Check if the queue has been modified during iteration.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "expectedModificationCount" : 
            "name" : "expectedModificationCount"
            "qualifiedname" : "dart.collection.ListQueue._checkModification#expectedModificationCount"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_add" : 
        "name" : "_add"
        "qualifiedname" : "dart.collection.ListQueue._add"
        "comment" : "<p>Adds element at end of queue. Used by both <code>add</code> and <code>addAll</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.ListQueue._add#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.ListQueue.E"
            "value" : "null"
      "_remove" : 
        "name" : "_remove"
        "qualifiedname" : "dart.collection.ListQueue._remove"
        "comment" : "<p>Removes the element at <code>offset</code> into <code>_table</code>.</p> <p>Removal is performed by linerarly moving elements either before or after <code>offset</code> by one position.</p> <p>Returns the new offset of the following element. This may be the same offset or the following offset depending on how elements are moved to fill the hole.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "offset" : 
            "name" : "offset"
            "qualifiedname" : "dart.collection.ListQueue._remove#offset"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_grow" : 
        "name" : "_grow"
        "qualifiedname" : "dart.collection.ListQueue._grow"
        "comment" : "<p>Grow the table when full.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_writeToList" : 
        "name" : "_writeToList"
        "qualifiedname" : "dart.collection.ListQueue._writeToList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.collection.ListQueue._writeToList#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "_preGrow" : 
        "name" : "_preGrow"
        "qualifiedname" : "dart.collection.ListQueue._preGrow"
        "comment" : "<p>Grows the table even if it is not full.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "newElementCount" : 
            "name" : "newElementCount"
            "qualifiedname" : "dart.collection.ListQueue._preGrow#newElementCount"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_DoubleLinkedQueueIterator" : 
    "name" : "_DoubleLinkedQueueIterator"
    "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterator"
    "variables" : 
      "_sentinel" : 
        "name" : "_sentinel"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator._sentinel"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._DoubleLinkedQueueEntrySentinel"
      "_currentEntry" : 
        "name" : "_currentEntry"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator._currentEntry"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection.DoubleLinkedQueueEntry"
      "_current" : 
        "name" : "_current"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator._current"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._DoubleLinkedQueueIterator.E"
    "methods" : 
      "_DoubleLinkedQueueIterator" : 
        "name" : "_DoubleLinkedQueueIterator"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator._DoubleLinkedQueueIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "sentinel" : 
            "name" : "sentinel"
            "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator._DoubleLinkedQueueIterator#sentinel"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._DoubleLinkedQueueEntrySentinel"
            "value" : "null"
      "moveNext" : 
        "name" : "moveNext"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator.moveNext"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "current" : 
        "name" : "current"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueIterator.current"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._DoubleLinkedQueueIterator.E"
        "parameters" : 
  "DoubleLinkedQueue" : 
    "name" : "DoubleLinkedQueue"
    "qualifiedname" : "dart.collection.DoubleLinkedQueue"
    "comment" : "<p>A <code>Queue</code> implementation based on a double-linked list.</p> <p>Allows constant time add, remove-at-ends and peek operations.</p> <p>Can do <code>removeAll</code> and <code>retainAll</code> in linear time.</p>"
    "superclass" : "dart.collection.IterableBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.collection.Queue"
    "variables" : 
      "_sentinel" : 
        "name" : "_sentinel"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue._sentinel"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection._DoubleLinkedQueueEntrySentinel"
      "_elementCount" : 
        "name" : "_elementCount"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue._elementCount"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "DoubleLinkedQueue" : 
        "name" : "DoubleLinkedQueue"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.DoubleLinkedQueue"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "DoubleLinkedQueue.from" : 
        "name" : "DoubleLinkedQueue.from"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.DoubleLinkedQueue.from"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueue"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.DoubleLinkedQueue.from#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "addLast" : 
        "name" : "addLast"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.addLast"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.addLast#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueue.E"
            "value" : "null"
      "addFirst" : 
        "name" : "addFirst"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.addFirst"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.addFirst#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueue.E"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.add#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueue.E"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.addAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "removeLast" : 
        "name" : "removeLast"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.removeLast"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueue.E"
        "parameters" : 
      "removeFirst" : 
        "name" : "removeFirst"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.removeFirst"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueue.E"
        "parameters" : 
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "o" : 
            "name" : "o"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.remove#o"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "_filter" : 
        "name" : "_filter"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue._filter"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue._filter#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "removeMatching" : 
            "name" : "removeMatching"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue._filter#removeMatching"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "removeWhere" : 
        "name" : "removeWhere"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.removeWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.removeWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "retainWhere" : 
        "name" : "retainWhere"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.retainWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.retainWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueue.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueue.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueue.E"
        "parameters" : 
      "lastEntry" : 
        "name" : "lastEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.lastEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry"
        "parameters" : 
      "firstEntry" : 
        "name" : "firstEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.firstEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "forEachEntry" : 
        "name" : "forEachEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.forEachEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.DoubleLinkedQueue.forEachEntry#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "iterator" : 
        "name" : "iterator"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.iterator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._DoubleLinkedQueueIterator"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.collection.DoubleLinkedQueue.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_DoubleLinkedQueueEntrySentinel" : 
    "name" : "_DoubleLinkedQueueEntrySentinel"
    "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel"
    "comment" : "<p>A sentinel in a double linked list is used to manipulate the list at both ends. A double linked list has exactly one sentinel, which is the only entry when the list is constructed. Initially, a sentinel has its next and previous entry point to itself. A sentinel does not box any user element.</p>"
    "superclass" : "dart.collection.DoubleLinkedQueueEntry"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_DoubleLinkedQueueEntrySentinel" : 
        "name" : "_DoubleLinkedQueueEntrySentinel"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel._DoubleLinkedQueueEntrySentinel"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection._DoubleLinkedQueueEntrySentinel.E"
        "parameters" : 
      "_asNonSentinelEntry" : 
        "name" : "_asNonSentinelEntry"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel._asNonSentinelEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry"
        "parameters" : 
      "element=" : 
        "name" : "element="
        "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel.element="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel.element=#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection._DoubleLinkedQueueEntrySentinel.E"
            "value" : "null"
      "element" : 
        "name" : "element"
        "qualifiedname" : "dart.collection._DoubleLinkedQueueEntrySentinel.element"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection._DoubleLinkedQueueEntrySentinel.E"
        "parameters" : 
  "DoubleLinkedQueueEntry" : 
    "name" : "DoubleLinkedQueueEntry"
    "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry"
    "comment" : "<p>An entry in a doubly linked list. It contains a pointer to the next entry, the previous entry, and the boxed element.</p> <p>WARNING: This class is temporary located in dart:core. It'll be removed at some point in the near future.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_previous" : 
        "name" : "_previous"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._previous"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection.DoubleLinkedQueueEntry"
      "_next" : 
        "name" : "_next"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._next"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection.DoubleLinkedQueueEntry"
      "_element" : 
        "name" : "_element"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._element"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.collection.DoubleLinkedQueueEntry.E"
    "methods" : 
      "DoubleLinkedQueueEntry" : 
        "name" : "DoubleLinkedQueueEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.DoubleLinkedQueueEntry"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.DoubleLinkedQueueEntry#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueueEntry.E"
            "value" : "null"
      "_link" : 
        "name" : "_link"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._link"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "p" : 
            "name" : "p"
            "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._link#p"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueueEntry"
            "value" : "null"
          "n" : 
            "name" : "n"
            "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._link#n"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueueEntry"
            "value" : "null"
      "append" : 
        "name" : "append"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.append"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.append#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueueEntry.E"
            "value" : "null"
      "prepend" : 
        "name" : "prepend"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.prepend"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.prepend#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueueEntry.E"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry.E"
        "parameters" : 
      "_asNonSentinelEntry" : 
        "name" : "_asNonSentinelEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry._asNonSentinelEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry"
        "parameters" : 
      "previousEntry" : 
        "name" : "previousEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.previousEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry"
        "parameters" : 
      "nextEntry" : 
        "name" : "nextEntry"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.nextEntry"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry"
        "parameters" : 
      "element" : 
        "name" : "element"
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.element"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.DoubleLinkedQueueEntry.E"
        "parameters" : 
      "element=" : 
        "name" : "element="
        "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.element="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.collection.DoubleLinkedQueueEntry.element=#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.DoubleLinkedQueueEntry.E"
            "value" : "null"
  "Queue" : 
    "name" : "Queue"
    "qualifiedname" : "dart.collection.Queue"
    "comment" : "<p>A <code>Queue</code> is a collection that can be manipulated at both ends. One can iterate over the elements of a queue through <code>forEach</code> or with an <code>Iterator</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterable"
    "variables" : 
    "methods" : 
      "Queue" : 
        "name" : "Queue"
        "qualifiedname" : "dart.collection.Queue.Queue"
        "comment" : "<p>Creates a queue.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.Queue"
        "parameters" : 
      "Queue.from" : 
        "name" : "Queue.from"
        "qualifiedname" : "dart.collection.Queue.Queue.from"
        "comment" : "<p>Creates a queue with the elements of <code>other</code>. The order in the queue will be the order provided by the iterator of <code>other</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.collection.Queue"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.collection.Queue.Queue.from#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "removeFirst" : 
        "name" : "removeFirst"
        "qualifiedname" : "dart.collection.Queue.removeFirst"
        "comment" : "<p>Removes and returns the first element of this queue. Throws an <code>StateError</code> exception if this queue is empty.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.Queue.E"
        "parameters" : 
      "removeLast" : 
        "name" : "removeLast"
        "qualifiedname" : "dart.collection.Queue.removeLast"
        "comment" : "<p>Removes and returns the last element of the queue. Throws an <code>StateError</code> exception if this queue is empty.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.Queue.E"
        "parameters" : 
      "addFirst" : 
        "name" : "addFirst"
        "qualifiedname" : "dart.collection.Queue.addFirst"
        "comment" : "<p>Adds <code>value</code> at the beginning of the queue.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.Queue.addFirst#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.Queue.E"
            "value" : "null"
      "addLast" : 
        "name" : "addLast"
        "qualifiedname" : "dart.collection.Queue.addLast"
        "comment" : "<p>Adds <code>value</code> at the end of the queue.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.Queue.addLast#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.Queue.E"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.collection.Queue.add"
        "comment" : "<p>Adds <code>value</code> at the end of the queue.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.Queue.add#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.collection.Queue.E"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.collection.Queue.remove"
        "comment" : "<p>Remove a single instance of <code>value</code> from the queue.</p> <p>Returns <code>true</code> if a value was removed, or <code>false</code> if the queue contained no element equal to <code>value</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.collection.Queue.remove#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.collection.Queue.addAll"
        "comment" : "<p>Adds all elements of <code>iterable</code> at the end of the queue. The length of the queue is extended by the length of <code>iterable</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.Queue.addAll#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.Queue.clear"
        "comment" : "<p>Removes all elements in the queue. The size of the queue becomes zero.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "Maps" : 
    "name" : "Maps"
    "qualifiedname" : "dart.collection.Maps"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "containsValue" : 
        "name" : "containsValue"
        "qualifiedname" : "dart.collection.Maps.containsValue"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.containsValue#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.Maps.containsValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "containsKey" : 
        "name" : "containsKey"
        "qualifiedname" : "dart.collection.Maps.containsKey"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.containsKey#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.Maps.containsKey#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "putIfAbsent" : 
        "name" : "putIfAbsent"
        "qualifiedname" : "dart.collection.Maps.putIfAbsent"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.putIfAbsent#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.Maps.putIfAbsent#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "ifAbsent" : 
            "name" : "ifAbsent"
            "qualifiedname" : "dart.collection.Maps.putIfAbsent#ifAbsent"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.collection.Maps.clear"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.clear#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.Maps.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.forEach#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.Maps.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "getValues" : 
        "name" : "getValues"
        "qualifiedname" : "dart.collection.Maps.getValues"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.getValues#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.Maps.length"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.length#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.Maps.isEmpty"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.isEmpty#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.Maps.isNotEmpty"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps.isNotEmpty#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "mapToString" : 
        "name" : "mapToString"
        "qualifiedname" : "dart.collection.Maps.mapToString"
        "comment" : "<p>Returns a string representing the specified map. The returned string looks like this: <code>:'{key0: value0, key1: value1, ... keyN: valueN}':</code>. The value returned by its <code>toString</code> method is used to represent each key or value.</p> <p>If the map collection contains a reference to itself, either directly as a key or value, or indirectly through other collections or maps, the contained reference is rendered as <code>:'{...}':</code>. This prevents the infinite regress that would otherwise occur. So, for example, calling this method on a map whose sole entry maps the string key 'me' to a reference to the map would return <code>:'{me: {...}}':</code>.</p> <p>A typical implementation of a map's <code>toString</code> method will simply return the results of this method applied to the collection.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "m" : 
            "name" : "m"
            "qualifiedname" : "dart.collection.Maps.mapToString#m"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "_id" : 
        "name" : "_id"
        "qualifiedname" : "dart.collection.Maps._id"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "x" : 
            "name" : "x"
            "qualifiedname" : "dart.collection.Maps._id#x"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_fillMapWithMappedIterable" : 
        "name" : "_fillMapWithMappedIterable"
        "qualifiedname" : "dart.collection.Maps._fillMapWithMappedIterable"
        "comment" : "<p>Fills a map with key/value pairs computed from <code>iterable</code>.</p> <p>This method is used by Map classes in the named constructor fromIterable.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps._fillMapWithMappedIterable#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "iterable" : 
            "name" : "iterable"
            "qualifiedname" : "dart.collection.Maps._fillMapWithMappedIterable#iterable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.collection.Maps._fillMapWithMappedIterable#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.collection.Maps._fillMapWithMappedIterable#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_fillMapWithIterables" : 
        "name" : "_fillMapWithIterables"
        "qualifiedname" : "dart.collection.Maps._fillMapWithIterables"
        "comment" : "<p>Fills a map by associating the <code>keys</code> to <code>values</code>.</p> <p>This method is used by Map classes in the named constructor fromIterables.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "map" : 
            "name" : "map"
            "qualifiedname" : "dart.collection.Maps._fillMapWithIterables#map"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "keys" : 
            "name" : "keys"
            "qualifiedname" : "dart.collection.Maps._fillMapWithIterables#keys"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "values" : 
            "name" : "values"
            "qualifiedname" : "dart.collection.Maps._fillMapWithIterables#values"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
  "HasNextIterator" : 
    "name" : "HasNextIterator"
    "qualifiedname" : "dart.collection.HasNextIterator"
    "comment" : "<p>The <code>HasNextIterator</code> class wraps an <code>Iterator</code> and provides methods to iterate over an object using <code>hasNext</code> and <code>next</code>.</p> <p>An <code>HasNextIterator</code> does not implement the <code>Iterator</code> interface.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_HAS_NEXT_AND_NEXT_IN_CURRENT" : 
        "name" : "_HAS_NEXT_AND_NEXT_IN_CURRENT"
        "qualifiedname" : "dart.collection.HasNextIterator._HAS_NEXT_AND_NEXT_IN_CURRENT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_NO_NEXT" : 
        "name" : "_NO_NEXT"
        "qualifiedname" : "dart.collection.HasNextIterator._NO_NEXT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_NOT_MOVED_YET" : 
        "name" : "_NOT_MOVED_YET"
        "qualifiedname" : "dart.collection.HasNextIterator._NOT_MOVED_YET"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_iterator" : 
        "name" : "_iterator"
        "qualifiedname" : "dart.collection.HasNextIterator._iterator"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Iterator"
      "_state" : 
        "name" : "_state"
        "qualifiedname" : "dart.collection.HasNextIterator._state"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "HasNextIterator" : 
        "name" : "HasNextIterator"
        "qualifiedname" : "dart.collection.HasNextIterator.HasNextIterator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_iterator" : 
            "name" : "_iterator"
            "qualifiedname" : "dart.collection.HasNextIterator.HasNextIterator#_iterator"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterator"
            "value" : "null"
      "hasNext" : 
        "name" : "hasNext"
        "qualifiedname" : "dart.collection.HasNextIterator.hasNext"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "next" : 
        "name" : "next"
        "qualifiedname" : "dart.collection.HasNextIterator.next"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.HasNextIterator.E"
        "parameters" : 
      "_move" : 
        "name" : "_move"
        "qualifiedname" : "dart.collection.HasNextIterator._move"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "IterableBase" : 
    "name" : "IterableBase"
    "qualifiedname" : "dart.collection.IterableBase"
    "comment" : "<p>Base class for implementing <code>Iterable</code>.</p> <p>This class implements all methods of <code>Iterable</code> except <code>Iterable.iterator</code> in terms of <code>iterator</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterable"
    "variables" : 
    "methods" : 
      "IterableBase" : 
        "name" : "IterableBase"
        "qualifiedname" : "dart.collection.IterableBase.IterableBase"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "map" : 
        "name" : "map"
        "qualifiedname" : "dart.collection.IterableBase.map"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableBase.map#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "where" : 
        "name" : "where"
        "qualifiedname" : "dart.collection.IterableBase.where"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableBase.where#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "expand" : 
        "name" : "expand"
        "qualifiedname" : "dart.collection.IterableBase.expand"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableBase.expand#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "contains" : 
        "name" : "contains"
        "qualifiedname" : "dart.collection.IterableBase.contains"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.IterableBase.contains#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.IterableBase.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableBase.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "reduce" : 
        "name" : "reduce"
        "qualifiedname" : "dart.collection.IterableBase.reduce"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.IterableBase.E"
        "parameters" : 
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.IterableBase.reduce#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "fold" : 
        "name" : "fold"
        "qualifiedname" : "dart.collection.IterableBase.fold"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "initialValue" : 
            "name" : "initialValue"
            "qualifiedname" : "dart.collection.IterableBase.fold#initialValue"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.IterableBase.fold#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "every" : 
        "name" : "every"
        "qualifiedname" : "dart.collection.IterableBase.every"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableBase.every#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "join" : 
        "name" : "join"
        "qualifiedname" : "dart.collection.IterableBase.join"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.collection.IterableBase.join#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "any" : 
        "name" : "any"
        "qualifiedname" : "dart.collection.IterableBase.any"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableBase.any#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "toList" : 
        "name" : "toList"
        "qualifiedname" : "dart.collection.IterableBase.toList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "growable" : 
            "name" : "growable"
            "qualifiedname" : "dart.collection.IterableBase.toList#growable"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "toSet" : 
        "name" : "toSet"
        "qualifiedname" : "dart.collection.IterableBase.toSet"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.IterableBase.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.IterableBase.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.IterableBase.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "take" : 
        "name" : "take"
        "qualifiedname" : "dart.collection.IterableBase.take"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "n" : 
            "name" : "n"
            "qualifiedname" : "dart.collection.IterableBase.take#n"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "takeWhile" : 
        "name" : "takeWhile"
        "qualifiedname" : "dart.collection.IterableBase.takeWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableBase.takeWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "skip" : 
        "name" : "skip"
        "qualifiedname" : "dart.collection.IterableBase.skip"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "n" : 
            "name" : "n"
            "qualifiedname" : "dart.collection.IterableBase.skip#n"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "skipWhile" : 
        "name" : "skipWhile"
        "qualifiedname" : "dart.collection.IterableBase.skipWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableBase.skipWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.IterableBase.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.IterableBase.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.IterableBase.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.IterableBase.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.IterableBase.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.IterableBase.E"
        "parameters" : 
      "firstWhere" : 
        "name" : "firstWhere"
        "qualifiedname" : "dart.collection.IterableBase.firstWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableBase.firstWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.IterableBase.firstWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "lastWhere" : 
        "name" : "lastWhere"
        "qualifiedname" : "dart.collection.IterableBase.lastWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableBase.lastWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.IterableBase.lastWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "singleWhere" : 
        "name" : "singleWhere"
        "qualifiedname" : "dart.collection.IterableBase.singleWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.IterableBase.E"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableBase.singleWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "elementAt" : 
        "name" : "elementAt"
        "qualifiedname" : "dart.collection.IterableBase.elementAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.IterableBase.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.IterableBase.elementAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "IterableMixin" : 
    "name" : "IterableMixin"
    "qualifiedname" : "dart.collection.IterableMixin"
    "comment" : "<p>This <code>Iterable</code> mixin implements all <code>Iterable</code> members except <code>iterator</code>.</p> <p>All other methods are implemented in terms of <code>iterator</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Iterable"
    "variables" : 
    "methods" : 
      "map" : 
        "name" : "map"
        "qualifiedname" : "dart.collection.IterableMixin.map"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableMixin.map#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "where" : 
        "name" : "where"
        "qualifiedname" : "dart.collection.IterableMixin.where"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableMixin.where#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "expand" : 
        "name" : "expand"
        "qualifiedname" : "dart.collection.IterableMixin.expand"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableMixin.expand#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "contains" : 
        "name" : "contains"
        "qualifiedname" : "dart.collection.IterableMixin.contains"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "element" : 
            "name" : "element"
            "qualifiedname" : "dart.collection.IterableMixin.contains#element"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.collection.IterableMixin.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableMixin.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "reduce" : 
        "name" : "reduce"
        "qualifiedname" : "dart.collection.IterableMixin.reduce"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.IterableMixin.E"
        "parameters" : 
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.IterableMixin.reduce#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "fold" : 
        "name" : "fold"
        "qualifiedname" : "dart.collection.IterableMixin.fold"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "initialValue" : 
            "name" : "initialValue"
            "qualifiedname" : "dart.collection.IterableMixin.fold#initialValue"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "combine" : 
            "name" : "combine"
            "qualifiedname" : "dart.collection.IterableMixin.fold#combine"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "every" : 
        "name" : "every"
        "qualifiedname" : "dart.collection.IterableMixin.every"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableMixin.every#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "join" : 
        "name" : "join"
        "qualifiedname" : "dart.collection.IterableMixin.join"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.collection.IterableMixin.join#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "any" : 
        "name" : "any"
        "qualifiedname" : "dart.collection.IterableMixin.any"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.collection.IterableMixin.any#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "toList" : 
        "name" : "toList"
        "qualifiedname" : "dart.collection.IterableMixin.toList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "growable" : 
            "name" : "growable"
            "qualifiedname" : "dart.collection.IterableMixin.toList#growable"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "toSet" : 
        "name" : "toSet"
        "qualifiedname" : "dart.collection.IterableMixin.toSet"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Set"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.IterableMixin.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.collection.IterableMixin.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.collection.IterableMixin.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "take" : 
        "name" : "take"
        "qualifiedname" : "dart.collection.IterableMixin.take"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "n" : 
            "name" : "n"
            "qualifiedname" : "dart.collection.IterableMixin.take#n"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "takeWhile" : 
        "name" : "takeWhile"
        "qualifiedname" : "dart.collection.IterableMixin.takeWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableMixin.takeWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "skip" : 
        "name" : "skip"
        "qualifiedname" : "dart.collection.IterableMixin.skip"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "n" : 
            "name" : "n"
            "qualifiedname" : "dart.collection.IterableMixin.skip#n"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "skipWhile" : 
        "name" : "skipWhile"
        "qualifiedname" : "dart.collection.IterableMixin.skipWhile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableMixin.skipWhile#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "first" : 
        "name" : "first"
        "qualifiedname" : "dart.collection.IterableMixin.first"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.IterableMixin.E"
        "parameters" : 
      "last" : 
        "name" : "last"
        "qualifiedname" : "dart.collection.IterableMixin.last"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.IterableMixin.E"
        "parameters" : 
      "single" : 
        "name" : "single"
        "qualifiedname" : "dart.collection.IterableMixin.single"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.collection.IterableMixin.E"
        "parameters" : 
      "firstWhere" : 
        "name" : "firstWhere"
        "qualifiedname" : "dart.collection.IterableMixin.firstWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableMixin.firstWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.IterableMixin.firstWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "lastWhere" : 
        "name" : "lastWhere"
        "qualifiedname" : "dart.collection.IterableMixin.lastWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableMixin.lastWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "orElse" : 
            "name" : "orElse"
            "qualifiedname" : "dart.collection.IterableMixin.lastWhere#orElse"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "singleWhere" : 
        "name" : "singleWhere"
        "qualifiedname" : "dart.collection.IterableMixin.singleWhere"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.IterableMixin.E"
        "parameters" : 
          "test" : 
            "name" : "test"
            "qualifiedname" : "dart.collection.IterableMixin.singleWhere#test"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "elementAt" : 
        "name" : "elementAt"
        "qualifiedname" : "dart.collection.IterableMixin.elementAt"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.collection.IterableMixin.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.IterableMixin.elementAt#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "UnmodifiableListView" : 
    "name" : "UnmodifiableListView"
    "qualifiedname" : "dart.collection.UnmodifiableListView"
    "comment" : "<p>An unmodifiable <code>List</code> view of another List.</p> <p>The source of the elements may be a <code>List</code> or any <code>Iterable</code> with efficient <code>Iterable.length</code> and <code>Iterable.elementAt</code>.</p>"
    "superclass" : "dart._collection.dev.UnmodifiableListBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_source" : 
        "name" : "_source"
        "qualifiedname" : "dart.collection.UnmodifiableListView._source"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Iterable"
    "methods" : 
      "UnmodifiableListView" : 
        "name" : "UnmodifiableListView"
        "qualifiedname" : "dart.collection.UnmodifiableListView.UnmodifiableListView"
        "comment" : "<p>Create an unmodifiable list backed by <code>source</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.collection.UnmodifiableListView.UnmodifiableListView#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.collection.UnmodifiableListView.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.collection.UnmodifiableListView.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dart.collection.UnmodifiableListView.E"
        "parameters" : 
          "index" : 
            "name" : "index"
            "qualifiedname" : "dart.collection.UnmodifiableListView.[]#index"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
