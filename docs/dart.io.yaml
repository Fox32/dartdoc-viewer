"name" : "dart.io"
"comment" : "<p>The IO library is used for Dart server applications, which run on a stand-alone Dart VM from the command line. <em>This library does not work in browser based applications.</em></p> <p>This library allows you to work with files, directories, sockets, processes, HTTP servers and clients, and more.</p>"
"variables" : 
  "_webSocketGUID" : 
    "name" : "_webSocketGUID"
    "qualifiedname" : "dart.io._webSocketGUID"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.String"
  "ASCII" : 
    "name" : "ASCII"
    "qualifiedname" : "dart.io.ASCII"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "ISO_8859_1" : 
    "name" : "ISO_8859_1"
    "qualifiedname" : "dart.io.ISO_8859_1"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "UTF_8" : 
    "name" : "UTF_8"
    "qualifiedname" : "dart.io.UTF_8"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "_stderr" : 
    "name" : "_stderr"
    "qualifiedname" : "dart.io._stderr"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.io.IOSink"
  "_stdout" : 
    "name" : "_stdout"
    "qualifiedname" : "dart.io._stdout"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.io.IOSink"
  "_stdin" : 
    "name" : "_stdin"
    "qualifiedname" : "dart.io._stdin"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.async.Stream"
  "_STDIO_HANDLE_TYPE_OTHER" : 
    "name" : "_STDIO_HANDLE_TYPE_OTHER"
    "qualifiedname" : "dart.io._STDIO_HANDLE_TYPE_OTHER"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_STDIO_HANDLE_TYPE_SOCKET" : 
    "name" : "_STDIO_HANDLE_TYPE_SOCKET"
    "qualifiedname" : "dart.io._STDIO_HANDLE_TYPE_SOCKET"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_STDIO_HANDLE_TYPE_FILE" : 
    "name" : "_STDIO_HANDLE_TYPE_FILE"
    "qualifiedname" : "dart.io._STDIO_HANDLE_TYPE_FILE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_STDIO_HANDLE_TYPE_PIPE" : 
    "name" : "_STDIO_HANDLE_TYPE_PIPE"
    "qualifiedname" : "dart.io._STDIO_HANDLE_TYPE_PIPE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_STDIO_HANDLE_TYPE_TERMINAL" : 
    "name" : "_STDIO_HANDLE_TYPE_TERMINAL"
    "qualifiedname" : "dart.io._STDIO_HANDLE_TYPE_TERMINAL"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_DART_SESSION_ID" : 
    "name" : "_DART_SESSION_ID"
    "qualifiedname" : "dart.io._DART_SESSION_ID"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.String"
  "_STAT_REQUEST" : 
    "name" : "_STAT_REQUEST"
    "qualifiedname" : "dart.io._STAT_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_IDENTICAL_REQUEST" : 
    "name" : "_IDENTICAL_REQUEST"
    "qualifiedname" : "dart.io._IDENTICAL_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_TYPE_REQUEST" : 
    "name" : "_TYPE_REQUEST"
    "qualifiedname" : "dart.io._TYPE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_LINK_TARGET_REQUEST" : 
    "name" : "_LINK_TARGET_REQUEST"
    "qualifiedname" : "dart.io._LINK_TARGET_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_RENAME_LINK_REQUEST" : 
    "name" : "_RENAME_LINK_REQUEST"
    "qualifiedname" : "dart.io._RENAME_LINK_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_DELETE_LINK_REQUEST" : 
    "name" : "_DELETE_LINK_REQUEST"
    "qualifiedname" : "dart.io._DELETE_LINK_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_CREATE_LINK_REQUEST" : 
    "name" : "_CREATE_LINK_REQUEST"
    "qualifiedname" : "dart.io._CREATE_LINK_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_WRITE_LIST_REQUEST" : 
    "name" : "_WRITE_LIST_REQUEST"
    "qualifiedname" : "dart.io._WRITE_LIST_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_READ_LIST_REQUEST" : 
    "name" : "_READ_LIST_REQUEST"
    "qualifiedname" : "dart.io._READ_LIST_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_READ_REQUEST" : 
    "name" : "_READ_REQUEST"
    "qualifiedname" : "dart.io._READ_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_WRITE_BYTE_REQUEST" : 
    "name" : "_WRITE_BYTE_REQUEST"
    "qualifiedname" : "dart.io._WRITE_BYTE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_READ_BYTE_REQUEST" : 
    "name" : "_READ_BYTE_REQUEST"
    "qualifiedname" : "dart.io._READ_BYTE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_FLUSH_REQUEST" : 
    "name" : "_FLUSH_REQUEST"
    "qualifiedname" : "dart.io._FLUSH_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_LAST_MODIFIED_REQUEST" : 
    "name" : "_LAST_MODIFIED_REQUEST"
    "qualifiedname" : "dart.io._LAST_MODIFIED_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_LENGTH_FROM_PATH_REQUEST" : 
    "name" : "_LENGTH_FROM_PATH_REQUEST"
    "qualifiedname" : "dart.io._LENGTH_FROM_PATH_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_LENGTH_REQUEST" : 
    "name" : "_LENGTH_REQUEST"
    "qualifiedname" : "dart.io._LENGTH_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_TRUNCATE_REQUEST" : 
    "name" : "_TRUNCATE_REQUEST"
    "qualifiedname" : "dart.io._TRUNCATE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_SET_POSITION_REQUEST" : 
    "name" : "_SET_POSITION_REQUEST"
    "qualifiedname" : "dart.io._SET_POSITION_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_POSITION_REQUEST" : 
    "name" : "_POSITION_REQUEST"
    "qualifiedname" : "dart.io._POSITION_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_CLOSE_REQUEST" : 
    "name" : "_CLOSE_REQUEST"
    "qualifiedname" : "dart.io._CLOSE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_FULL_PATH_REQUEST" : 
    "name" : "_FULL_PATH_REQUEST"
    "qualifiedname" : "dart.io._FULL_PATH_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_OPEN_REQUEST" : 
    "name" : "_OPEN_REQUEST"
    "qualifiedname" : "dart.io._OPEN_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_RENAME_REQUEST" : 
    "name" : "_RENAME_REQUEST"
    "qualifiedname" : "dart.io._RENAME_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_DELETE_REQUEST" : 
    "name" : "_DELETE_REQUEST"
    "qualifiedname" : "dart.io._DELETE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_CREATE_REQUEST" : 
    "name" : "_CREATE_REQUEST"
    "qualifiedname" : "dart.io._CREATE_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_EXISTS_REQUEST" : 
    "name" : "_EXISTS_REQUEST"
    "qualifiedname" : "dart.io._EXISTS_REQUEST"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_BLOCK_SIZE" : 
    "name" : "_BLOCK_SIZE"
    "qualifiedname" : "dart.io._BLOCK_SIZE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "APPEND" : 
    "name" : "APPEND"
    "qualifiedname" : "dart.io.APPEND"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "WRITE" : 
    "name" : "WRITE"
    "qualifiedname" : "dart.io.WRITE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "READ" : 
    "name" : "READ"
    "qualifiedname" : "dart.io.READ"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "_BYTES_PER_WORD" : 
    "name" : "_BYTES_PER_WORD"
    "qualifiedname" : "dart.io._BYTES_PER_WORD"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "_BITS_PER_BYTE" : 
    "name" : "_BITS_PER_BYTE"
    "qualifiedname" : "dart.io._BITS_PER_BYTE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "_MASK_32" : 
    "name" : "_MASK_32"
    "qualifiedname" : "dart.io._MASK_32"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "_MASK_8" : 
    "name" : "_MASK_8"
    "qualifiedname" : "dart.io._MASK_8"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dynamic"
  "_OSERROR_RESPONSE_MESSAGE" : 
    "name" : "_OSERROR_RESPONSE_MESSAGE"
    "qualifiedname" : "dart.io._OSERROR_RESPONSE_MESSAGE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_OSERROR_RESPONSE_ERROR_CODE" : 
    "name" : "_OSERROR_RESPONSE_ERROR_CODE"
    "qualifiedname" : "dart.io._OSERROR_RESPONSE_ERROR_CODE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_ERROR_RESPONSE_ERROR_TYPE" : 
    "name" : "_ERROR_RESPONSE_ERROR_TYPE"
    "qualifiedname" : "dart.io._ERROR_RESPONSE_ERROR_TYPE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_FILE_CLOSED_RESPONSE" : 
    "name" : "_FILE_CLOSED_RESPONSE"
    "qualifiedname" : "dart.io._FILE_CLOSED_RESPONSE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_OSERROR_RESPONSE" : 
    "name" : "_OSERROR_RESPONSE"
    "qualifiedname" : "dart.io._OSERROR_RESPONSE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_ILLEGAL_ARGUMENT_RESPONSE" : 
    "name" : "_ILLEGAL_ARGUMENT_RESPONSE"
    "qualifiedname" : "dart.io._ILLEGAL_ARGUMENT_RESPONSE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
  "_SUCCESS_RESPONSE" : 
    "name" : "_SUCCESS_RESPONSE"
    "qualifiedname" : "dart.io._SUCCESS_RESPONSE"
    "comment" : ""
    "final" : "false"
    "static" : "false"
    "type" : "dart.core.int"
"functions" : 
  "_getTimerFactoryClosure" : 
    "name" : "_getTimerFactoryClosure"
    "qualifiedname" : "dart.io._getTimerFactoryClosure"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dynamic"
    "parameters" : 
  "_encodeString" : 
    "name" : "_encodeString"
    "qualifiedname" : "dart.io._encodeString"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.List"
    "parameters" : 
      "string" : 
        "name" : "string"
        "qualifiedname" : "dart.io._encodeString#string"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.String"
        "value" : "null"
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io._encodeString#encoding"
        "optional" : "true"
        "named" : "false"
        "default" : "true"
        "type" : "dart.io.Encoding"
        "value" : "Encoding.UTF_8"
  "_decodeUtf8Strict" : 
    "name" : "_decodeUtf8Strict"
    "qualifiedname" : "dart.io._decodeUtf8Strict"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.String"
    "parameters" : 
      "bytes" : 
        "name" : "bytes"
        "qualifiedname" : "dart.io._decodeUtf8Strict#bytes"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.List"
        "value" : "null"
  "_decodeString" : 
    "name" : "_decodeString"
    "qualifiedname" : "dart.io._decodeString"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.String"
    "parameters" : 
      "bytes" : 
        "name" : "bytes"
        "qualifiedname" : "dart.io._decodeString#bytes"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.List"
        "value" : "null"
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io._decodeString#encoding"
        "optional" : "true"
        "named" : "false"
        "default" : "true"
        "type" : "dart.io.Encoding"
        "value" : "Encoding.UTF_8"
  "stdioType" : 
    "name" : "stdioType"
    "qualifiedname" : "dart.io.stdioType"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.io.StdioType"
    "parameters" : 
      "object" : 
        "name" : "object"
        "qualifiedname" : "dart.io.stdioType#object"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dynamic"
        "value" : "null"
  "stderr" : 
    "name" : "stderr"
    "qualifiedname" : "dart.io.stderr"
    "comment" : ""
    "type" : "getter"
    "static" : "false"
    "return" : "dart.io.IOSink"
    "parameters" : 
  "stdout" : 
    "name" : "stdout"
    "qualifiedname" : "dart.io.stdout"
    "comment" : ""
    "type" : "getter"
    "static" : "false"
    "return" : "dart.io.IOSink"
    "parameters" : 
  "stdin" : 
    "name" : "stdin"
    "qualifiedname" : "dart.io.stdin"
    "comment" : ""
    "type" : "getter"
    "static" : "false"
    "return" : "dart.async.Stream"
    "parameters" : 
  "pid" : 
    "name" : "pid"
    "qualifiedname" : "dart.io.pid"
    "comment" : "<p>Returns the PID if the current process.</p>"
    "type" : "getter"
    "static" : "false"
    "return" : "dart.core.int"
    "parameters" : 
  "sleep" : 
    "name" : "sleep"
    "qualifiedname" : "dart.io.sleep"
    "comment" : "<p>Sleep for the duration specified in <code>duration</code>.</p> <p>Use this with care, as no asynchronous operations can be processed in a isolate while it is blocked in a <code>sleep</code> call.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "void"
    "parameters" : 
      "duration" : 
        "name" : "duration"
        "qualifiedname" : "dart.io.sleep#duration"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.Duration"
        "value" : "null"
  "exitCode=" : 
    "name" : "exitCode="
    "qualifiedname" : "dart.io.exitCode="
    "comment" : "<p>Global exit code for the Dart VM.</p> <p>The exit code is global for the Dart VM and the last assignment to exitCode from any isolate determines the exit code of the Dart VM on normal termination.</p>"
    "type" : "setter"
    "static" : "false"
    "return" : "dynamic"
    "parameters" : 
      "status" : 
        "name" : "status"
        "qualifiedname" : "dart.io.exitCode=#status"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.int"
        "value" : "null"
  "exit" : 
    "name" : "exit"
    "qualifiedname" : "dart.io.exit"
    "comment" : "<p>Exit the Dart VM process immediately with the given <code>status</code> code.</p> <p>This does not wait for any asynchronous operations to terminate. Using <code>exit</code> is therefore very likely to lose data.</p>"
    "type" : "method"
    "static" : "false"
    "return" : "void"
    "parameters" : 
      "status" : 
        "name" : "status"
        "qualifiedname" : "dart.io.exit#status"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.int"
        "value" : "null"
  "_getHttpVersion" : 
    "name" : "_getHttpVersion"
    "qualifiedname" : "dart.io._getHttpVersion"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.String"
    "parameters" : 
  "_ensureFastAndSerializableByteData" : 
    "name" : "_ensureFastAndSerializableByteData"
    "qualifiedname" : "dart.io._ensureFastAndSerializableByteData"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.io._BufferAndStart"
    "parameters" : 
      "buffer" : 
        "name" : "buffer"
        "qualifiedname" : "dart.io._ensureFastAndSerializableByteData#buffer"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.List"
        "value" : "null"
      "start" : 
        "name" : "start"
        "qualifiedname" : "dart.io._ensureFastAndSerializableByteData#start"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.int"
        "value" : "null"
      "end" : 
        "name" : "end"
        "qualifiedname" : "dart.io._ensureFastAndSerializableByteData#end"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.int"
        "value" : "null"
  "_ensureFastAndSerializableData" : 
    "name" : "_ensureFastAndSerializableData"
    "qualifiedname" : "dart.io._ensureFastAndSerializableData"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.io._BufferAndStart"
    "parameters" : 
      "buffer" : 
        "name" : "buffer"
        "qualifiedname" : "dart.io._ensureFastAndSerializableData#buffer"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.List"
        "value" : "null"
      "start" : 
        "name" : "start"
        "qualifiedname" : "dart.io._ensureFastAndSerializableData#start"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.int"
        "value" : "null"
      "end" : 
        "name" : "end"
        "qualifiedname" : "dart.io._ensureFastAndSerializableData#end"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.int"
        "value" : "null"
  "_exceptionFromResponse" : 
    "name" : "_exceptionFromResponse"
    "qualifiedname" : "dart.io._exceptionFromResponse"
    "comment" : "<p>Returns an Exception or an Error</p>"
    "type" : "method"
    "static" : "false"
    "return" : "dynamic"
    "parameters" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io._exceptionFromResponse#response"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dynamic"
        "value" : "null"
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io._exceptionFromResponse#message"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.String"
        "value" : "null"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._exceptionFromResponse#path"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dart.core.String"
        "value" : "null"
  "_isErrorResponse" : 
    "name" : "_isErrorResponse"
    "qualifiedname" : "dart.io._isErrorResponse"
    "comment" : ""
    "type" : "method"
    "static" : "false"
    "return" : "dart.core.bool"
    "parameters" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io._isErrorResponse#response"
        "optional" : "false"
        "named" : "false"
        "default" : "false"
        "type" : "dynamic"
        "value" : "null"
"classes" : 
  "_WebSocketImpl" : 
    "name" : "_WebSocketImpl"
    "qualifiedname" : "dart.io._WebSocketImpl"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.WebSocket"
    "variables" : 
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._WebSocketImpl._controller"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_sink" : 
        "name" : "_sink"
        "qualifiedname" : "dart.io._WebSocketImpl._sink"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSink"
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io._WebSocketImpl._socket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.Socket"
      "_serverSide" : 
        "name" : "_serverSide"
        "qualifiedname" : "dart.io._WebSocketImpl._serverSide"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "_readyState" : 
        "name" : "_readyState"
        "qualifiedname" : "dart.io._WebSocketImpl._readyState"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_writeClosed" : 
        "name" : "_writeClosed"
        "qualifiedname" : "dart.io._WebSocketImpl._writeClosed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_closeCode" : 
        "name" : "_closeCode"
        "qualifiedname" : "dart.io._WebSocketImpl._closeCode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_closeReason" : 
        "name" : "_closeReason"
        "qualifiedname" : "dart.io._WebSocketImpl._closeReason"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_outCloseCode" : 
        "name" : "_outCloseCode"
        "qualifiedname" : "dart.io._WebSocketImpl._outCloseCode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_outCloseReason" : 
        "name" : "_outCloseReason"
        "qualifiedname" : "dart.io._WebSocketImpl._outCloseReason"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_httpClient" : 
        "name" : "_httpClient"
        "qualifiedname" : "dart.io._WebSocketImpl._httpClient"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.io.HttpClient"
    "methods" : 
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io._WebSocketImpl.connect"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._WebSocketImpl.connect#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "protocols" : 
            "name" : "protocols"
            "qualifiedname" : "dart.io._WebSocketImpl.connect#protocols"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_WebSocketImpl._fromSocket" : 
        "name" : "_WebSocketImpl._fromSocket"
        "qualifiedname" : "dart.io._WebSocketImpl._WebSocketImpl._fromSocket"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_socket" : 
            "name" : "_socket"
            "qualifiedname" : "dart.io._WebSocketImpl._WebSocketImpl._fromSocket#_socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
          "_serverSide" : 
            "name" : "_serverSide"
            "qualifiedname" : "dart.io._WebSocketImpl._WebSocketImpl._fromSocket#_serverSide"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._WebSocketImpl.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._WebSocketImpl.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._WebSocketImpl.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._WebSocketImpl.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._WebSocketImpl.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "readyState" : 
        "name" : "readyState"
        "qualifiedname" : "dart.io._WebSocketImpl.readyState"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "extensions" : 
        "name" : "extensions"
        "qualifiedname" : "dart.io._WebSocketImpl.extensions"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "protocol" : 
        "name" : "protocol"
        "qualifiedname" : "dart.io._WebSocketImpl.protocol"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "closeCode" : 
        "name" : "closeCode"
        "qualifiedname" : "dart.io._WebSocketImpl.closeCode"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "closeReason" : 
        "name" : "closeReason"
        "qualifiedname" : "dart.io._WebSocketImpl.closeReason"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._WebSocketImpl.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._WebSocketImpl.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addError" : 
        "name" : "addError"
        "qualifiedname" : "dart.io._WebSocketImpl.addError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._WebSocketImpl.addError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._WebSocketImpl.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._WebSocketImpl.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._WebSocketImpl.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._WebSocketImpl.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "code" : 
            "name" : "code"
            "qualifiedname" : "dart.io._WebSocketImpl.close#code"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "reason" : 
            "name" : "reason"
            "qualifiedname" : "dart.io._WebSocketImpl.close#reason"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_isReservedStatusCode" : 
        "name" : "_isReservedStatusCode"
        "qualifiedname" : "dart.io._WebSocketImpl._isReservedStatusCode"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "code" : 
            "name" : "code"
            "qualifiedname" : "dart.io._WebSocketImpl._isReservedStatusCode#code"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_WebSocketConsumer" : 
    "name" : "_WebSocketConsumer"
    "qualifiedname" : "dart.io._WebSocketConsumer"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamConsumer"
    "variables" : 
      "webSocket" : 
        "name" : "webSocket"
        "qualifiedname" : "dart.io._WebSocketConsumer.webSocket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._WebSocketImpl"
      "socket" : 
        "name" : "socket"
        "qualifiedname" : "dart.io._WebSocketConsumer.socket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.Socket"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._WebSocketConsumer._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io._WebSocketConsumer._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_closeCompleter" : 
        "name" : "_closeCompleter"
        "qualifiedname" : "dart.io._WebSocketConsumer._closeCompleter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_completer" : 
        "name" : "_completer"
        "qualifiedname" : "dart.io._WebSocketConsumer._completer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
    "methods" : 
      "_WebSocketConsumer" : 
        "name" : "_WebSocketConsumer"
        "qualifiedname" : "dart.io._WebSocketConsumer._WebSocketConsumer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "webSocket" : 
            "name" : "webSocket"
            "qualifiedname" : "dart.io._WebSocketConsumer._WebSocketConsumer#webSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._WebSocketImpl"
            "value" : "null"
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io._WebSocketConsumer._WebSocketConsumer#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
      "_onListen" : 
        "name" : "_onListen"
        "qualifiedname" : "dart.io._WebSocketConsumer._onListen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_ensureController" : 
        "name" : "_ensureController"
        "qualifiedname" : "dart.io._WebSocketConsumer._ensureController"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_done" : 
        "name" : "_done"
        "qualifiedname" : "dart.io._WebSocketConsumer._done"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._WebSocketConsumer._done#error"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._WebSocketConsumer.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._WebSocketConsumer.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._WebSocketConsumer.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._WebSocketConsumer.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._WebSocketConsumer.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "_WebSocketOutgoingTransformer" : 
    "name" : "_WebSocketOutgoingTransformer"
    "qualifiedname" : "dart.io._WebSocketOutgoingTransformer"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "webSocket" : 
        "name" : "webSocket"
        "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.webSocket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._WebSocketImpl"
    "methods" : 
      "_WebSocketOutgoingTransformer" : 
        "name" : "_WebSocketOutgoingTransformer"
        "qualifiedname" : "dart.io._WebSocketOutgoingTransformer._WebSocketOutgoingTransformer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "webSocket" : 
            "name" : "webSocket"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer._WebSocketOutgoingTransformer#webSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._WebSocketImpl"
            "value" : "null"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.handleData#message"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "handleDone" : 
        "name" : "handleDone"
        "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.handleDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.handleDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "addFrame" : 
        "name" : "addFrame"
        "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.addFrame"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "opcode" : 
            "name" : "opcode"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.addFrame#opcode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.addFrame#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.addFrame#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "createFrame" : 
        "name" : "createFrame"
        "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.createFrame"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.Iterable"
        "parameters" : 
          "opcode" : 
            "name" : "opcode"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.createFrame#opcode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.createFrame#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "serverSide" : 
            "name" : "serverSide"
            "qualifiedname" : "dart.io._WebSocketOutgoingTransformer.createFrame#serverSide"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "_WebSocketTransformerImpl" : 
    "name" : "_WebSocketTransformerImpl"
    "qualifiedname" : "dart.io._WebSocketTransformerImpl"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.WebSocketTransformer"
    "variables" : 
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._WebSocketTransformerImpl._controller"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.StreamController"
    "methods" : 
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io._WebSocketTransformerImpl.bind"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._WebSocketTransformerImpl.bind#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "_upgrade" : 
        "name" : "_upgrade"
        "qualifiedname" : "dart.io._WebSocketTransformerImpl._upgrade"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._WebSocketTransformerImpl._upgrade#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
      "_isUpgradeRequest" : 
        "name" : "_isUpgradeRequest"
        "qualifiedname" : "dart.io._WebSocketTransformerImpl._isUpgradeRequest"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._WebSocketTransformerImpl._isUpgradeRequest#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
  "_WebSocketPong" : 
    "name" : "_WebSocketPong"
    "qualifiedname" : "dart.io._WebSocketPong"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "payload" : 
        "name" : "payload"
        "qualifiedname" : "dart.io._WebSocketPong.payload"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_WebSocketPong" : 
        "name" : "_WebSocketPong"
        "qualifiedname" : "dart.io._WebSocketPong._WebSocketPong"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "payload" : 
            "name" : "payload"
            "qualifiedname" : "dart.io._WebSocketPong._WebSocketPong#payload"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.List"
            "value" : "null"
  "_WebSocketPing" : 
    "name" : "_WebSocketPing"
    "qualifiedname" : "dart.io._WebSocketPing"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "payload" : 
        "name" : "payload"
        "qualifiedname" : "dart.io._WebSocketPing.payload"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_WebSocketPing" : 
        "name" : "_WebSocketPing"
        "qualifiedname" : "dart.io._WebSocketPing._WebSocketPing"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "payload" : 
            "name" : "payload"
            "qualifiedname" : "dart.io._WebSocketPing._WebSocketPing#payload"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.List"
            "value" : "null"
  "_WebSocketProtocolTransformer" : 
    "name" : "_WebSocketProtocolTransformer"
    "qualifiedname" : "dart.io._WebSocketProtocolTransformer"
    "comment" : "<p>The web socket protocol transformer handles the protocol byte stream which is supplied through the <code>:handleData:</code>. As the protocol is processed, it'll output frame data as either a List&lt;int> or String.</p> <p>Important infomation about usage: Be sure you use cancelOnError, so the socket will be closed when the processer encounter an error. Not using it will lead to undefined behaviour.</p>"
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "START" : 
        "name" : "START"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LEN_FIRST" : 
        "name" : "LEN_FIRST"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.LEN_FIRST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LEN_REST" : 
        "name" : "LEN_REST"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.LEN_REST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "MASK" : 
        "name" : "MASK"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.MASK"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PAYLOAD" : 
        "name" : "PAYLOAD"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.PAYLOAD"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CLOSED" : 
        "name" : "CLOSED"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.CLOSED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "FAILURE" : 
        "name" : "FAILURE"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.FAILURE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_serverSide" : 
        "name" : "_serverSide"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._serverSide"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_state" : 
        "name" : "_state"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._state"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_fin" : 
        "name" : "_fin"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._fin"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_opcode" : 
        "name" : "_opcode"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._opcode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_len" : 
        "name" : "_len"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._len"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_masked" : 
        "name" : "_masked"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._masked"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_maskingKey" : 
        "name" : "_maskingKey"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._maskingKey"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_remainingLenBytes" : 
        "name" : "_remainingLenBytes"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._remainingLenBytes"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_remainingMaskingKeyBytes" : 
        "name" : "_remainingMaskingKeyBytes"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._remainingMaskingKeyBytes"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_remainingPayloadBytes" : 
        "name" : "_remainingPayloadBytes"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._remainingPayloadBytes"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_unmaskingIndex" : 
        "name" : "_unmaskingIndex"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._unmaskingIndex"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_currentMessageType" : 
        "name" : "_currentMessageType"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._currentMessageType"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_controlPayload" : 
        "name" : "_controlPayload"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._controlPayload"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "closeCode" : 
        "name" : "closeCode"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.closeCode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "closeReason" : 
        "name" : "closeReason"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.closeReason"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "_WebSocketProtocolTransformer" : 
        "name" : "_WebSocketProtocolTransformer"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._WebSocketProtocolTransformer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_serverSide" : 
            "name" : "_serverSide"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer._WebSocketProtocolTransformer#_serverSide"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer.handleData"
        "comment" : "<p>Process data received from the underlying communication channel.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer.handleData#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.typed_data.Uint8List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_lengthDone" : 
        "name" : "_lengthDone"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._lengthDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer._lengthDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_maskDone" : 
        "name" : "_maskDone"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._maskDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer._maskDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_startPayload" : 
        "name" : "_startPayload"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._startPayload"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer._startPayload#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_messageFrameEnd" : 
        "name" : "_messageFrameEnd"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._messageFrameEnd"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer._messageFrameEnd#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_controlFrameEnd" : 
        "name" : "_controlFrameEnd"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._controlFrameEnd"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WebSocketProtocolTransformer._controlFrameEnd#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_isControlFrame" : 
        "name" : "_isControlFrame"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._isControlFrame"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_prepareForNextFrame" : 
        "name" : "_prepareForNextFrame"
        "qualifiedname" : "dart.io._WebSocketProtocolTransformer._prepareForNextFrame"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_WebSocketOpcode" : 
    "name" : "_WebSocketOpcode"
    "qualifiedname" : "dart.io._WebSocketOpcode"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "CONTINUATION" : 
        "name" : "CONTINUATION"
        "qualifiedname" : "dart.io._WebSocketOpcode.CONTINUATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "TEXT" : 
        "name" : "TEXT"
        "qualifiedname" : "dart.io._WebSocketOpcode.TEXT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "BINARY" : 
        "name" : "BINARY"
        "qualifiedname" : "dart.io._WebSocketOpcode.BINARY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_3" : 
        "name" : "RESERVED_3"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_3"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_4" : 
        "name" : "RESERVED_4"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_4"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_5" : 
        "name" : "RESERVED_5"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_5"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_6" : 
        "name" : "RESERVED_6"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_6"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_7" : 
        "name" : "RESERVED_7"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_7"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CLOSE" : 
        "name" : "CLOSE"
        "qualifiedname" : "dart.io._WebSocketOpcode.CLOSE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PING" : 
        "name" : "PING"
        "qualifiedname" : "dart.io._WebSocketOpcode.PING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PONG" : 
        "name" : "PONG"
        "qualifiedname" : "dart.io._WebSocketOpcode.PONG"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_B" : 
        "name" : "RESERVED_B"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_B"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_C" : 
        "name" : "RESERVED_C"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_C"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_D" : 
        "name" : "RESERVED_D"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_D"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_E" : 
        "name" : "RESERVED_E"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_E"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_F" : 
        "name" : "RESERVED_F"
        "qualifiedname" : "dart.io._WebSocketOpcode.RESERVED_F"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "_WebSocketMessageType" : 
    "name" : "_WebSocketMessageType"
    "qualifiedname" : "dart.io._WebSocketMessageType"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "NONE" : 
        "name" : "NONE"
        "qualifiedname" : "dart.io._WebSocketMessageType.NONE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "BINARY" : 
        "name" : "BINARY"
        "qualifiedname" : "dart.io._WebSocketMessageType.BINARY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "TEXT" : 
        "name" : "TEXT"
        "qualifiedname" : "dart.io._WebSocketMessageType.TEXT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "WebSocketException" : 
    "name" : "WebSocketException"
    "qualifiedname" : "dart.io.WebSocketException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.WebSocketException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "WebSocketException" : 
        "name" : "WebSocketException"
        "qualifiedname" : "dart.io.WebSocketException.WebSocketException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.WebSocketException.WebSocketException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.WebSocketException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "WebSocket" : 
    "name" : "WebSocket"
    "qualifiedname" : "dart.io.WebSocket"
    "comment" : "<p>A client or server web socket connection. The stream exposes the messages received. A text message will be of type <code>:String:</code> and a binary message will be of type [:List<int>:].</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamSink"
      - "dart.async.Stream"
    "variables" : 
      "CONNECTING" : 
        "name" : "CONNECTING"
        "qualifiedname" : "dart.io.WebSocket.CONNECTING"
        "comment" : "<p>Possible states of the connection.</p>"
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "OPEN" : 
        "name" : "OPEN"
        "qualifiedname" : "dart.io.WebSocket.OPEN"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CLOSING" : 
        "name" : "CLOSING"
        "qualifiedname" : "dart.io.WebSocket.CLOSING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CLOSED" : 
        "name" : "CLOSED"
        "qualifiedname" : "dart.io.WebSocket.CLOSED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io.WebSocket.connect"
        "comment" : "<p>Create a new web socket connection. The URL supplied in <code>url</code> must use the scheme <code>:ws:</code> or <code>:wss:</code>. The <code>protocols</code> argument is either a <code>:String:</code> or [:List<String>:] specifying the subprotocols the client is willing to speak.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.WebSocket.connect#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "protocols" : 
            "name" : "protocols"
            "qualifiedname" : "dart.io.WebSocket.connect#protocols"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "readyState" : 
        "name" : "readyState"
        "qualifiedname" : "dart.io.WebSocket.readyState"
        "comment" : "<p>Returns the current state of the connection.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "extensions" : 
        "name" : "extensions"
        "qualifiedname" : "dart.io.WebSocket.extensions"
        "comment" : "<p>The extensions property is initially the empty string. After the web socket connection is established this string reflects the extensions used by the server.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "protocol" : 
        "name" : "protocol"
        "qualifiedname" : "dart.io.WebSocket.protocol"
        "comment" : "<p>The protocol property is initially the empty string. After the web socket connection is established the value is the subprotocol selected by the server. If no subprotocol is negotiated the value will remain <code>:null:</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "closeCode" : 
        "name" : "closeCode"
        "qualifiedname" : "dart.io.WebSocket.closeCode"
        "comment" : "<p>The close code set when the web socket connection is closed. If there is no close code available this property will be <code>:null:</code></p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "closeReason" : 
        "name" : "closeReason"
        "qualifiedname" : "dart.io.WebSocket.closeReason"
        "comment" : "<p>The close reason set when the web socket connection is closed. If there is no close reason available this property will be <code>:null:</code></p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.WebSocket.close"
        "comment" : "<p>Closes the web socket connection. Set the optional <code>code</code> and <code>reason</code> arguments to send close information to the remote peer. If they are omitted, the peer will see [WebSocketStatus.NO_STATUS_RECEIVED] code with no reason.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "code" : 
            "name" : "code"
            "qualifiedname" : "dart.io.WebSocket.close#code"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "reason" : 
            "name" : "reason"
            "qualifiedname" : "dart.io.WebSocket.close#reason"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io.WebSocket.add"
        "comment" : "<p>Sends data on the web socket connection. The data in <code>data</code> must be either a <code>:String:</code>, or a [:List<int>:] holding bytes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io.WebSocket.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io.WebSocket.addStream"
        "comment" : "<p>Sends data from a stream on web socket connection. Each data event from <code>stream</code> will be send as a single WebSocket frame. The data from <code>stream</code> must be either <code>:String:</code>s, or [:List<int>:]s holding bytes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.WebSocket.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
  "WebSocketTransformer" : 
    "name" : "WebSocketTransformer"
    "qualifiedname" : "dart.io.WebSocketTransformer"
    "comment" : "<p>The <code>WebSocketTransformer</code> provides the ability to upgrade a <code>HttpRequest</code> to a <code>WebSocket</code> connection. It supports both upgrading a single <code>HttpRequest</code> and upgrading a stream of <code>HttpRequest</code>s.</p> <p>To upgrade a single <code>HttpRequest</code> use the static <code>upgrade</code> method.</p> <pre><code>HttpServer server; server.listen((request) {   if (...) {     WebSocketTransformer.upgrade(request).then((websocket) {       ...     });   } else {     // Do normal HTTP request processing.   } }); </code></pre> <p>To transform a stream of <code>HttpRequest</code> events as it implements a stream transformer that transforms a stream of HttpRequest into a stream of WebSockets by upgrading each HttpRequest from the HTTP or HTTPS server, to the WebSocket protocol.</p> <pre><code>server.transform(new WebSocketTransformer()).listen((webSocket) =&gt; ...); </code></pre> <p>This transformer strives to implement web sockets as specified by RFC6455.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamTransformer"
    "variables" : 
    "methods" : 
      "WebSocketTransformer" : 
        "name" : "WebSocketTransformer"
        "qualifiedname" : "dart.io.WebSocketTransformer.WebSocketTransformer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.WebSocketTransformer"
        "parameters" : 
      "upgrade" : 
        "name" : "upgrade"
        "qualifiedname" : "dart.io.WebSocketTransformer.upgrade"
        "comment" : "<p>Upgrades a <code>HttpRequest</code> to a <code>WebSocket</code> connection. If the request is not a valid web socket upgrade request a HTTP response with status code 500 will be returned. Otherwise the returned future will complete with the <code>WebSocket</code> when the upgrade pocess is complete.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io.WebSocketTransformer.upgrade#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
      "isUpgradeRequest" : 
        "name" : "isUpgradeRequest"
        "qualifiedname" : "dart.io.WebSocketTransformer.isUpgradeRequest"
        "comment" : "<p>Checks whether the request is a valid WebSocket upgrade request.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io.WebSocketTransformer.isUpgradeRequest#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
  "WebSocketStatus" : 
    "name" : "WebSocketStatus"
    "qualifiedname" : "dart.io.WebSocketStatus"
    "comment" : "<p>Web socket status codes used when closing a web socket connection.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "NORMAL_CLOSURE" : 
        "name" : "NORMAL_CLOSURE"
        "qualifiedname" : "dart.io.WebSocketStatus.NORMAL_CLOSURE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "GOING_AWAY" : 
        "name" : "GOING_AWAY"
        "qualifiedname" : "dart.io.WebSocketStatus.GOING_AWAY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PROTOCOL_ERROR" : 
        "name" : "PROTOCOL_ERROR"
        "qualifiedname" : "dart.io.WebSocketStatus.PROTOCOL_ERROR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "UNSUPPORTED_DATA" : 
        "name" : "UNSUPPORTED_DATA"
        "qualifiedname" : "dart.io.WebSocketStatus.UNSUPPORTED_DATA"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_1004" : 
        "name" : "RESERVED_1004"
        "qualifiedname" : "dart.io.WebSocketStatus.RESERVED_1004"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NO_STATUS_RECEIVED" : 
        "name" : "NO_STATUS_RECEIVED"
        "qualifiedname" : "dart.io.WebSocketStatus.NO_STATUS_RECEIVED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "ABNORMAL_CLOSURE" : 
        "name" : "ABNORMAL_CLOSURE"
        "qualifiedname" : "dart.io.WebSocketStatus.ABNORMAL_CLOSURE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "INVALID_FRAME_PAYLOAD_DATA" : 
        "name" : "INVALID_FRAME_PAYLOAD_DATA"
        "qualifiedname" : "dart.io.WebSocketStatus.INVALID_FRAME_PAYLOAD_DATA"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "POLICY_VIOLATION" : 
        "name" : "POLICY_VIOLATION"
        "qualifiedname" : "dart.io.WebSocketStatus.POLICY_VIOLATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "MESSAGE_TOO_BIG" : 
        "name" : "MESSAGE_TOO_BIG"
        "qualifiedname" : "dart.io.WebSocketStatus.MESSAGE_TOO_BIG"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "MISSING_MANDATORY_EXTENSION" : 
        "name" : "MISSING_MANDATORY_EXTENSION"
        "qualifiedname" : "dart.io.WebSocketStatus.MISSING_MANDATORY_EXTENSION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "INTERNAL_SERVER_ERROR" : 
        "name" : "INTERNAL_SERVER_ERROR"
        "qualifiedname" : "dart.io.WebSocketStatus.INTERNAL_SERVER_ERROR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESERVED_1015" : 
        "name" : "RESERVED_1015"
        "qualifiedname" : "dart.io.WebSocketStatus.RESERVED_1015"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "RawSecureServerSocket" : 
    "name" : "RawSecureServerSocket"
    "qualifiedname" : "dart.io.RawSecureServerSocket"
    "comment" : "<p>The RawSecureServerSocket is a server socket, providing a stream of low-level <code>RawSecureSocket</code>s.</p> <p>See <code>RawSecureSocket</code> for more info.</p>"
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io.RawSecureServerSocket._socket"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.RawServerSocket"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io.RawSecureServerSocket._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io.RawSecureServerSocket._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "certificateName" : 
        "name" : "certificateName"
        "qualifiedname" : "dart.io.RawSecureServerSocket.certificateName"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "requestClientCertificate" : 
        "name" : "requestClientCertificate"
        "qualifiedname" : "dart.io.RawSecureServerSocket.requestClientCertificate"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "requireClientCertificate" : 
        "name" : "requireClientCertificate"
        "qualifiedname" : "dart.io.RawSecureServerSocket.requireClientCertificate"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "_closed" : 
        "name" : "_closed"
        "qualifiedname" : "dart.io.RawSecureServerSocket._closed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "RawSecureServerSocket._" : 
        "name" : "RawSecureServerSocket._"
        "qualifiedname" : "dart.io.RawSecureServerSocket.RawSecureServerSocket._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "serverSocket" : 
            "name" : "serverSocket"
            "qualifiedname" : "dart.io.RawSecureServerSocket.RawSecureServerSocket._#serverSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawServerSocket"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.RawSecureServerSocket.RawSecureServerSocket._#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io.RawSecureServerSocket.RawSecureServerSocket._#requestClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io.RawSecureServerSocket.RawSecureServerSocket._#requireClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.RawSecureServerSocket.bind"
        "comment" : "<p>Returns a future for a <code>RawSecureServerSocket</code>. When the future completes the server socket is bound to the given <code>address</code> and <code>port</code> and has started listening on it.</p> <p>The <code>address</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>address</code> is a <code>String</code>, <code>bind</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value [InternetAddress.LOOPBACK_IP_V4] or [InternetAddress.LOOPBACK_IP_V6]. To allow for incoming connection from the network use either one of the values [InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to bind to all interfaces or the IP address of a specific interface.</p> <p>If <code>port</code> has the value <code>:0:</code> an ephemeral port will be chosen by the system. The actual port used can be retrieved using the <code>port</code> getter.</p> <p>The optional argument <code>backlog</code> can be used to specify the listen backlog for the underlying OS listen setup. If <code>backlog</code> has the value of <code>:0:</code> (the default) a reasonable value will be chosen by the system.</p> <p>Incoming client connections are promoted to secure connections, using the server certificate given by <code>certificateName</code>.</p> <p><code>address</code> must be given as a numeric address, not a host name.</p> <p><code>certificateName</code> is the nickname or the distinguished name (DN) of the certificate in the certificate database. It is looked up in the NSS certificate database set by SecureSocket.setCertificateDatabase. If <code>certificateName</code> contains \"CN=\", it is assumed to be a distinguished name.  Otherwise, it is looked up as a nickname.</p> <p>To request or require that clients authenticate by providing an SSL (TLS) client certificate, set the optional parameters requestClientCertificate or requireClientCertificate to true.  Require implies request, so one doesn't need to specify both.  To check whether a client certificate was received, check SecureSocket.peerCertificate after connecting.  If no certificate was received, the result will be null.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#backlog"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
          "v6Only" : 
            "name" : "v6Only"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#v6Only"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#requestClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io.RawSecureServerSocket.bind#requireClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io.RawSecureServerSocket.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io.RawSecureServerSocket.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io.RawSecureServerSocket.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io.RawSecureServerSocket.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io.RawSecureServerSocket.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.RawSecureServerSocket.port"
        "comment" : "<p>Returns the port used by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.RawSecureServerSocket.close"
        "comment" : "<p>Closes the socket.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onData" : 
        "name" : "_onData"
        "qualifiedname" : "dart.io.RawSecureServerSocket._onData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "connection" : 
            "name" : "connection"
            "qualifiedname" : "dart.io.RawSecureServerSocket._onData#connection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSocket"
            "value" : "null"
      "_onError" : 
        "name" : "_onError"
        "qualifiedname" : "dart.io.RawSecureServerSocket._onError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.io.RawSecureServerSocket._onError#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_onDone" : 
        "name" : "_onDone"
        "qualifiedname" : "dart.io.RawSecureServerSocket._onDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onPauseStateChange" : 
        "name" : "_onPauseStateChange"
        "qualifiedname" : "dart.io.RawSecureServerSocket._onPauseStateChange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onSubscriptionStateChange" : 
        "name" : "_onSubscriptionStateChange"
        "qualifiedname" : "dart.io.RawSecureServerSocket._onSubscriptionStateChange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "SecureServerSocket" : 
    "name" : "SecureServerSocket"
    "qualifiedname" : "dart.io.SecureServerSocket"
    "comment" : "<p>The <code>SecureServerSocket</code> is a server socket, providing a stream of high-level <code>Socket</code>s.</p> <p>See <code>SecureSocket</code> for more info.</p>"
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.ServerSocket"
    "variables" : 
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io.SecureServerSocket._socket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.RawSecureServerSocket"
    "methods" : 
      "SecureServerSocket._" : 
        "name" : "SecureServerSocket._"
        "qualifiedname" : "dart.io.SecureServerSocket.SecureServerSocket._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_socket" : 
            "name" : "_socket"
            "qualifiedname" : "dart.io.SecureServerSocket.SecureServerSocket._#_socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSecureServerSocket"
            "value" : "null"
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.SecureServerSocket.bind"
        "comment" : "<p>Returns a future for a <code>SecureServerSocket</code>. When the future completes the server socket is bound to the given <code>address</code> and <code>port</code> and has started listening on it.</p> <p>The <code>address</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>address</code> is a <code>String</code>, <code>bind</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value [InternetAddress.LOOPBACK_IP_V4] or [InternetAddress.LOOPBACK_IP_V6]. To allow for incoming connection from the network use either one of the values [InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to bind to all interfaces or the IP address of a specific interface.</p> <p>If <code>port</code> has the value <code>:0:</code> an ephemeral port will be chosen by the system. The actual port used can be retrieved using the <code>port</code> getter.</p> <p>The optional argument <code>backlog</code> can be used to specify the listen backlog for the underlying OS listen setup. If <code>backlog</code> has the value of <code>:0:</code> (the default) a reasonable value will be chosen by the system.</p> <p>Incoming client connections are promoted to secure connections, using the server certificate given by <code>certificateName</code>.</p> <p><code>address</code> must be given as a numeric address, not a host name.</p> <p><code>certificateName</code> is the nickname or the distinguished name (DN) of the certificate in the certificate database. It is looked up in the NSS certificate database set by SecureSocket.setCertificateDatabase. If <code>certificateName</code> contains \"CN=\", it is assumed to be a distinguished name.  Otherwise, it is looked up as a nickname.</p> <p>To request or require that clients authenticate by providing an SSL (TLS) client certificate, set the optional parameter <code>requestClientCertificate</code> or <code>requireClientCertificate</code> to true.  Requiring a certificate implies requesting a certificate, so one doesn't need to set both to true. To check whether a client certificate was received, check SecureSocket.peerCertificate after connecting.  If no certificate was received, the result will be null.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#backlog"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
          "v6Only" : 
            "name" : "v6Only"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#v6Only"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#requestClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io.SecureServerSocket.bind#requireClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io.SecureServerSocket.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io.SecureServerSocket.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io.SecureServerSocket.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io.SecureServerSocket.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io.SecureServerSocket.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.SecureServerSocket.port"
        "comment" : "<p>Returns the port used by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.SecureServerSocket.close"
        "comment" : "<p>Closes the socket.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "CertificateException" : 
    "name" : "CertificateException"
    "qualifiedname" : "dart.io.CertificateException"
    "comment" : "<p>An exception that happens in the handshake phase of establishing a secure network connection, when looking up or verifying a certificate.</p>"
    "superclass" : "dart.io.TlsException"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "CertificateException" : 
        "name" : "CertificateException"
        "qualifiedname" : "dart.io.CertificateException.CertificateException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.CertificateException.CertificateException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.CertificateException.CertificateException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.OSError"
            "value" : "null"
  "HandshakeException" : 
    "name" : "HandshakeException"
    "qualifiedname" : "dart.io.HandshakeException"
    "comment" : "<p>An exception that happens in the handshake phase of establishing a secure network connection.</p>"
    "superclass" : "dart.io.TlsException"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "HandshakeException" : 
        "name" : "HandshakeException"
        "qualifiedname" : "dart.io.HandshakeException.HandshakeException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.HandshakeException.HandshakeException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.HandshakeException.HandshakeException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.OSError"
            "value" : "null"
  "TlsException" : 
    "name" : "TlsException"
    "qualifiedname" : "dart.io.TlsException"
    "comment" : "<p>A secure networking exception caused by a failure in the  TLS/SSL protocol.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "type" : 
        "name" : "type"
        "qualifiedname" : "dart.io.TlsException.type"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.TlsException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "osError" : 
        "name" : "osError"
        "qualifiedname" : "dart.io.TlsException.osError"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.OSError"
    "methods" : 
      "TlsException" : 
        "name" : "TlsException"
        "qualifiedname" : "dart.io.TlsException.TlsException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.TlsException.TlsException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.TlsException.TlsException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.OSError"
            "value" : "null"
      "TlsException._" : 
        "name" : "TlsException._"
        "qualifiedname" : "dart.io.TlsException.TlsException._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "type" : 
            "name" : "type"
            "qualifiedname" : "dart.io.TlsException.TlsException._#type"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.TlsException.TlsException._#message"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.TlsException.TlsException._#osError"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.OSError"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.TlsException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_SecureFilter" : 
    "name" : "_SecureFilter"
    "qualifiedname" : "dart.io._SecureFilter"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_SecureFilter" : 
        "name" : "_SecureFilter"
        "qualifiedname" : "dart.io._SecureFilter._SecureFilter"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io._SecureFilter"
        "parameters" : 
      "_newServicePort" : 
        "name" : "_newServicePort"
        "qualifiedname" : "dart.io._SecureFilter._newServicePort"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.isolate.SendPort"
        "parameters" : 
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io._SecureFilter.connect"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "hostName" : 
            "name" : "hostName"
            "qualifiedname" : "dart.io._SecureFilter.connect#hostName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "addr" : 
            "name" : "addr"
            "qualifiedname" : "dart.io._SecureFilter.connect#addr"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.typed_data.Uint8List"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._SecureFilter.connect#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "is_server" : 
            "name" : "is_server"
            "qualifiedname" : "dart.io._SecureFilter.connect#is_server"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io._SecureFilter.connect#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io._SecureFilter.connect#requestClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io._SecureFilter.connect#requireClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io._SecureFilter.connect#sendClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io._SecureFilter.destroy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "handshake" : 
        "name" : "handshake"
        "qualifiedname" : "dart.io._SecureFilter.handshake"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "init" : 
        "name" : "init"
        "qualifiedname" : "dart.io._SecureFilter.init"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "peerCertificate" : 
        "name" : "peerCertificate"
        "qualifiedname" : "dart.io._SecureFilter.peerCertificate"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
      "processBuffer" : 
        "name" : "processBuffer"
        "qualifiedname" : "dart.io._SecureFilter.processBuffer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "bufferIndex" : 
            "name" : "bufferIndex"
            "qualifiedname" : "dart.io._SecureFilter.processBuffer#bufferIndex"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "registerBadCertificateCallback" : 
        "name" : "registerBadCertificateCallback"
        "qualifiedname" : "dart.io._SecureFilter.registerBadCertificateCallback"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "callback" : 
            "name" : "callback"
            "qualifiedname" : "dart.io._SecureFilter.registerBadCertificateCallback#callback"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "registerHandshakeCompleteCallback" : 
        "name" : "registerHandshakeCompleteCallback"
        "qualifiedname" : "dart.io._SecureFilter.registerHandshakeCompleteCallback"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "handshakeCompleteHandler" : 
            "name" : "handshakeCompleteHandler"
            "qualifiedname" : "dart.io._SecureFilter.registerHandshakeCompleteCallback#handshakeCompleteHandler"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_pointer" : 
        "name" : "_pointer"
        "qualifiedname" : "dart.io._SecureFilter._pointer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "buffers" : 
        "name" : "buffers"
        "qualifiedname" : "dart.io._SecureFilter.buffers"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
  "_ExternalBuffer" : 
    "name" : "_ExternalBuffer"
    "qualifiedname" : "dart.io._ExternalBuffer"
    "comment" : "<p>A circular buffer backed by an external byte array.  Accessed from both C++ and Dart code in an unsynchronized way, with one reading and one writing.  All updates to start and end are done by Dart code.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "data" : 
        "name" : "data"
        "qualifiedname" : "dart.io._ExternalBuffer.data"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "start" : 
        "name" : "start"
        "qualifiedname" : "dart.io._ExternalBuffer.start"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "end" : 
        "name" : "end"
        "qualifiedname" : "dart.io._ExternalBuffer.end"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "size" : 
        "name" : "size"
        "qualifiedname" : "dart.io._ExternalBuffer.size"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "_ExternalBuffer" : 
        "name" : "_ExternalBuffer"
        "qualifiedname" : "dart.io._ExternalBuffer._ExternalBuffer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "size" : 
            "name" : "size"
            "qualifiedname" : "dart.io._ExternalBuffer._ExternalBuffer#size"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "advanceStart" : 
        "name" : "advanceStart"
        "qualifiedname" : "dart.io._ExternalBuffer.advanceStart"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._ExternalBuffer.advanceStart#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "advanceEnd" : 
        "name" : "advanceEnd"
        "qualifiedname" : "dart.io._ExternalBuffer.advanceEnd"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._ExternalBuffer.advanceEnd#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.io._ExternalBuffer.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io._ExternalBuffer.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "linearLength" : 
        "name" : "linearLength"
        "qualifiedname" : "dart.io._ExternalBuffer.linearLength"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "free" : 
        "name" : "free"
        "qualifiedname" : "dart.io._ExternalBuffer.free"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "linearFree" : 
        "name" : "linearFree"
        "qualifiedname" : "dart.io._ExternalBuffer.linearFree"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "read" : 
        "name" : "read"
        "qualifiedname" : "dart.io._ExternalBuffer.read"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._ExternalBuffer.read#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._ExternalBuffer.write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "inputData" : 
            "name" : "inputData"
            "qualifiedname" : "dart.io._ExternalBuffer.write#inputData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "offset" : 
            "name" : "offset"
            "qualifiedname" : "dart.io._ExternalBuffer.write#offset"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._ExternalBuffer.write#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeFromSource" : 
        "name" : "writeFromSource"
        "qualifiedname" : "dart.io._ExternalBuffer.writeFromSource"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "getData" : 
            "name" : "getData"
            "qualifiedname" : "dart.io._ExternalBuffer.writeFromSource#getData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "readToSocket" : 
        "name" : "readToSocket"
        "qualifiedname" : "dart.io._ExternalBuffer.readToSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io._ExternalBuffer.readToSocket#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSocket"
            "value" : "null"
  "_RawSecureSocket" : 
    "name" : "_RawSecureSocket"
    "qualifiedname" : "dart.io._RawSecureSocket"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.RawSecureSocket"
    "variables" : 
      "HANDSHAKE" : 
        "name" : "HANDSHAKE"
        "qualifiedname" : "dart.io._RawSecureSocket.HANDSHAKE"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "CONNECTED" : 
        "name" : "CONNECTED"
        "qualifiedname" : "dart.io._RawSecureSocket.CONNECTED"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "CLOSED" : 
        "name" : "CLOSED"
        "qualifiedname" : "dart.io._RawSecureSocket.CLOSED"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "READ_PLAINTEXT" : 
        "name" : "READ_PLAINTEXT"
        "qualifiedname" : "dart.io._RawSecureSocket.READ_PLAINTEXT"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "WRITE_PLAINTEXT" : 
        "name" : "WRITE_PLAINTEXT"
        "qualifiedname" : "dart.io._RawSecureSocket.WRITE_PLAINTEXT"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "READ_ENCRYPTED" : 
        "name" : "READ_ENCRYPTED"
        "qualifiedname" : "dart.io._RawSecureSocket.READ_ENCRYPTED"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "WRITE_ENCRYPTED" : 
        "name" : "WRITE_ENCRYPTED"
        "qualifiedname" : "dart.io._RawSecureSocket.WRITE_ENCRYPTED"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "NUM_BUFFERS" : 
        "name" : "NUM_BUFFERS"
        "qualifiedname" : "dart.io._RawSecureSocket.NUM_BUFFERS"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dart.core.int"
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io._RawSecureSocket._socket"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.RawSocket"
      "_handshakeComplete" : 
        "name" : "_handshakeComplete"
        "qualifiedname" : "dart.io._RawSecureSocket._handshakeComplete"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._RawSecureSocket._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_stream" : 
        "name" : "_stream"
        "qualifiedname" : "dart.io._RawSecureSocket._stream"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Stream"
      "_socketSubscription" : 
        "name" : "_socketSubscription"
        "qualifiedname" : "dart.io._RawSecureSocket._socketSubscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_bufferedData" : 
        "name" : "_bufferedData"
        "qualifiedname" : "dart.io._RawSecureSocket._bufferedData"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_bufferedDataIndex" : 
        "name" : "_bufferedDataIndex"
        "qualifiedname" : "dart.io._RawSecureSocket._bufferedDataIndex"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "address" : 
        "name" : "address"
        "qualifiedname" : "dart.io._RawSecureSocket.address"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.InternetAddress"
      "is_server" : 
        "name" : "is_server"
        "qualifiedname" : "dart.io._RawSecureSocket.is_server"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "certificateName" : 
        "name" : "certificateName"
        "qualifiedname" : "dart.io._RawSecureSocket.certificateName"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "requestClientCertificate" : 
        "name" : "requestClientCertificate"
        "qualifiedname" : "dart.io._RawSecureSocket.requestClientCertificate"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "requireClientCertificate" : 
        "name" : "requireClientCertificate"
        "qualifiedname" : "dart.io._RawSecureSocket.requireClientCertificate"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "sendClientCertificate" : 
        "name" : "sendClientCertificate"
        "qualifiedname" : "dart.io._RawSecureSocket.sendClientCertificate"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "onBadCertificate" : 
        "name" : "onBadCertificate"
        "qualifiedname" : "dart.io._RawSecureSocket.onBadCertificate"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Function"
      "_status" : 
        "name" : "_status"
        "qualifiedname" : "dart.io._RawSecureSocket._status"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dynamic"
      "_writeEventsEnabled" : 
        "name" : "_writeEventsEnabled"
        "qualifiedname" : "dart.io._RawSecureSocket._writeEventsEnabled"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_readEventsEnabled" : 
        "name" : "_readEventsEnabled"
        "qualifiedname" : "dart.io._RawSecureSocket._readEventsEnabled"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_pauseCount" : 
        "name" : "_pauseCount"
        "qualifiedname" : "dart.io._RawSecureSocket._pauseCount"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_pendingReadEvent" : 
        "name" : "_pendingReadEvent"
        "qualifiedname" : "dart.io._RawSecureSocket._pendingReadEvent"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_socketClosedRead" : 
        "name" : "_socketClosedRead"
        "qualifiedname" : "dart.io._RawSecureSocket._socketClosedRead"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_socketClosedWrite" : 
        "name" : "_socketClosedWrite"
        "qualifiedname" : "dart.io._RawSecureSocket._socketClosedWrite"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_closedRead" : 
        "name" : "_closedRead"
        "qualifiedname" : "dart.io._RawSecureSocket._closedRead"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_closedWrite" : 
        "name" : "_closedWrite"
        "qualifiedname" : "dart.io._RawSecureSocket._closedWrite"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_filterStatus" : 
        "name" : "_filterStatus"
        "qualifiedname" : "dart.io._RawSecureSocket._filterStatus"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._FilterStatus"
      "_connectPending" : 
        "name" : "_connectPending"
        "qualifiedname" : "dart.io._RawSecureSocket._connectPending"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_filterPending" : 
        "name" : "_filterPending"
        "qualifiedname" : "dart.io._RawSecureSocket._filterPending"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_filterActive" : 
        "name" : "_filterActive"
        "qualifiedname" : "dart.io._RawSecureSocket._filterActive"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_secureFilter" : 
        "name" : "_secureFilter"
        "qualifiedname" : "dart.io._RawSecureSocket._secureFilter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._SecureFilter"
      "_filterPointer" : 
        "name" : "_filterPointer"
        "qualifiedname" : "dart.io._RawSecureSocket._filterPointer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_filterService" : 
        "name" : "_filterService"
        "qualifiedname" : "dart.io._RawSecureSocket._filterService"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.isolate.SendPort"
    "methods" : 
      "_isBufferEncrypted" : 
        "name" : "_isBufferEncrypted"
        "qualifiedname" : "dart.io._RawSecureSocket._isBufferEncrypted"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "identifier" : 
            "name" : "identifier"
            "qualifiedname" : "dart.io._RawSecureSocket._isBufferEncrypted#identifier"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io._RawSecureSocket.connect"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "requestedPort" : 
            "name" : "requestedPort"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#requestedPort"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "is_server" : 
            "name" : "is_server"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#is_server"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#socket"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.io.RawSocket"
            "value" : "null"
          "subscription" : 
            "name" : "subscription"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#subscription"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.async.StreamSubscription"
            "value" : "null"
          "bufferedData" : 
            "name" : "bufferedData"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#bufferedData"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#requestClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#requireClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#sendClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket.connect#onBadCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_RawSecureSocket" : 
        "name" : "_RawSecureSocket"
        "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.InternetAddress"
            "value" : "null"
          "requestedPort" : 
            "name" : "requestedPort"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#requestedPort"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "is_server" : 
            "name" : "is_server"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#is_server"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSocket"
            "value" : "null"
          "_socketSubscription" : 
            "name" : "_socketSubscription"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#_socketSubscription"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.StreamSubscription"
            "value" : "null"
          "_bufferedData" : 
            "name" : "_bufferedData"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#_bufferedData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#requestClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#requireClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#sendClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._RawSecureSocket#onBadCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._RawSecureSocket.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._RawSecureSocket.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._RawSecureSocket.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._RawSecureSocket.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._RawSecureSocket.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_verifyFields" : 
        "name" : "_verifyFields"
        "qualifiedname" : "dart.io._RawSecureSocket._verifyFields"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "requestedPort" : 
            "name" : "requestedPort"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#requestedPort"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "is_server" : 
            "name" : "is_server"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#is_server"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#requestClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#requireClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#sendClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io._RawSecureSocket._verifyFields#onBadCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io._RawSecureSocket.port"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "remoteHost" : 
        "name" : "remoteHost"
        "qualifiedname" : "dart.io._RawSecureSocket.remoteHost"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "remotePort" : 
        "name" : "remotePort"
        "qualifiedname" : "dart.io._RawSecureSocket.remotePort"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "available" : 
        "name" : "available"
        "qualifiedname" : "dart.io._RawSecureSocket.available"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._RawSecureSocket.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_close" : 
        "name" : "_close"
        "qualifiedname" : "dart.io._RawSecureSocket._close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "shutdown" : 
        "name" : "shutdown"
        "qualifiedname" : "dart.io._RawSecureSocket.shutdown"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "direction" : 
            "name" : "direction"
            "qualifiedname" : "dart.io._RawSecureSocket.shutdown#direction"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.SocketDirection"
            "value" : "null"
      "writeEventsEnabled" : 
        "name" : "writeEventsEnabled"
        "qualifiedname" : "dart.io._RawSecureSocket.writeEventsEnabled"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "writeEventsEnabled=" : 
        "name" : "writeEventsEnabled="
        "qualifiedname" : "dart.io._RawSecureSocket.writeEventsEnabled="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._RawSecureSocket.writeEventsEnabled=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "readEventsEnabled" : 
        "name" : "readEventsEnabled"
        "qualifiedname" : "dart.io._RawSecureSocket.readEventsEnabled"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "readEventsEnabled=" : 
        "name" : "readEventsEnabled="
        "qualifiedname" : "dart.io._RawSecureSocket.readEventsEnabled="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._RawSecureSocket.readEventsEnabled=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "read" : 
        "name" : "read"
        "qualifiedname" : "dart.io._RawSecureSocket.read"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io._RawSecureSocket.read#length"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._RawSecureSocket.write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._RawSecureSocket.write#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "offset" : 
            "name" : "offset"
            "qualifiedname" : "dart.io._RawSecureSocket.write#offset"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._RawSecureSocket.write#bytes"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "peerCertificate" : 
        "name" : "peerCertificate"
        "qualifiedname" : "dart.io._RawSecureSocket.peerCertificate"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
      "setOption" : 
        "name" : "setOption"
        "qualifiedname" : "dart.io._RawSecureSocket.setOption"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "option" : 
            "name" : "option"
            "qualifiedname" : "dart.io._RawSecureSocket.setOption#option"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.SocketOption"
            "value" : "null"
          "enabled" : 
            "name" : "enabled"
            "qualifiedname" : "dart.io._RawSecureSocket.setOption#enabled"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_eventDispatcher" : 
        "name" : "_eventDispatcher"
        "qualifiedname" : "dart.io._RawSecureSocket._eventDispatcher"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "event" : 
            "name" : "event"
            "qualifiedname" : "dart.io._RawSecureSocket._eventDispatcher#event"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSocketEvent"
            "value" : "null"
      "_readHandler" : 
        "name" : "_readHandler"
        "qualifiedname" : "dart.io._RawSecureSocket._readHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_writeHandler" : 
        "name" : "_writeHandler"
        "qualifiedname" : "dart.io._RawSecureSocket._writeHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_doneHandler" : 
        "name" : "_doneHandler"
        "qualifiedname" : "dart.io._RawSecureSocket._doneHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_reportError" : 
        "name" : "_reportError"
        "qualifiedname" : "dart.io._RawSecureSocket._reportError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.io._RawSecureSocket._reportError#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_closeHandler" : 
        "name" : "_closeHandler"
        "qualifiedname" : "dart.io._RawSecureSocket._closeHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_secureHandshake" : 
        "name" : "_secureHandshake"
        "qualifiedname" : "dart.io._RawSecureSocket._secureHandshake"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_secureHandshakeCompleteHandler" : 
        "name" : "_secureHandshakeCompleteHandler"
        "qualifiedname" : "dart.io._RawSecureSocket._secureHandshakeCompleteHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onPauseStateChange" : 
        "name" : "_onPauseStateChange"
        "qualifiedname" : "dart.io._RawSecureSocket._onPauseStateChange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onSubscriptionStateChange" : 
        "name" : "_onSubscriptionStateChange"
        "qualifiedname" : "dart.io._RawSecureSocket._onSubscriptionStateChange"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_scheduleFilter" : 
        "name" : "_scheduleFilter"
        "qualifiedname" : "dart.io._RawSecureSocket._scheduleFilter"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_tryFilter" : 
        "name" : "_tryFilter"
        "qualifiedname" : "dart.io._RawSecureSocket._tryFilter"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_readSocketOrBufferedData" : 
        "name" : "_readSocketOrBufferedData"
        "qualifiedname" : "dart.io._RawSecureSocket._readSocketOrBufferedData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._RawSecureSocket._readSocketOrBufferedData#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_readSocket" : 
        "name" : "_readSocket"
        "qualifiedname" : "dart.io._RawSecureSocket._readSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_writeSocket" : 
        "name" : "_writeSocket"
        "qualifiedname" : "dart.io._RawSecureSocket._writeSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_scheduleReadEvent" : 
        "name" : "_scheduleReadEvent"
        "qualifiedname" : "dart.io._RawSecureSocket._scheduleReadEvent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_sendReadEvent" : 
        "name" : "_sendReadEvent"
        "qualifiedname" : "dart.io._RawSecureSocket._sendReadEvent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_sendWriteEvent" : 
        "name" : "_sendWriteEvent"
        "qualifiedname" : "dart.io._RawSecureSocket._sendWriteEvent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_pushAllFilterStages" : 
        "name" : "_pushAllFilterStages"
        "qualifiedname" : "dart.io._RawSecureSocket._pushAllFilterStages"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_FilterStatus" : 
    "name" : "_FilterStatus"
    "qualifiedname" : "dart.io._FilterStatus"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "progress" : 
        "name" : "progress"
        "qualifiedname" : "dart.io._FilterStatus.progress"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "readEmpty" : 
        "name" : "readEmpty"
        "qualifiedname" : "dart.io._FilterStatus.readEmpty"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "writeEmpty" : 
        "name" : "writeEmpty"
        "qualifiedname" : "dart.io._FilterStatus.writeEmpty"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "readPlaintextNoLongerEmpty" : 
        "name" : "readPlaintextNoLongerEmpty"
        "qualifiedname" : "dart.io._FilterStatus.readPlaintextNoLongerEmpty"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "writePlaintextNoLongerFull" : 
        "name" : "writePlaintextNoLongerFull"
        "qualifiedname" : "dart.io._FilterStatus.writePlaintextNoLongerFull"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "readEncryptedNoLongerFull" : 
        "name" : "readEncryptedNoLongerFull"
        "qualifiedname" : "dart.io._FilterStatus.readEncryptedNoLongerFull"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "writeEncryptedNoLongerEmpty" : 
        "name" : "writeEncryptedNoLongerEmpty"
        "qualifiedname" : "dart.io._FilterStatus.writeEncryptedNoLongerEmpty"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_FilterStatus" : 
        "name" : "_FilterStatus"
        "qualifiedname" : "dart.io._FilterStatus._FilterStatus"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
  "X509Certificate" : 
    "name" : "X509Certificate"
    "qualifiedname" : "dart.io.X509Certificate"
    "comment" : "<p>X509Certificate represents an SSL certificate, with accessors to get the fields of the certificate.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "subject" : 
        "name" : "subject"
        "qualifiedname" : "dart.io.X509Certificate.subject"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "issuer" : 
        "name" : "issuer"
        "qualifiedname" : "dart.io.X509Certificate.issuer"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "startValidity" : 
        "name" : "startValidity"
        "qualifiedname" : "dart.io.X509Certificate.startValidity"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "endValidity" : 
        "name" : "endValidity"
        "qualifiedname" : "dart.io.X509Certificate.endValidity"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.DateTime"
    "methods" : 
      "X509Certificate" : 
        "name" : "X509Certificate"
        "qualifiedname" : "dart.io.X509Certificate.X509Certificate"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "subject" : 
            "name" : "subject"
            "qualifiedname" : "dart.io.X509Certificate.X509Certificate#subject"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "issuer" : 
            "name" : "issuer"
            "qualifiedname" : "dart.io.X509Certificate.X509Certificate#issuer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "startValidity" : 
            "name" : "startValidity"
            "qualifiedname" : "dart.io.X509Certificate.X509Certificate#startValidity"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
          "endValidity" : 
            "name" : "endValidity"
            "qualifiedname" : "dart.io.X509Certificate.X509Certificate#endValidity"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
  "RawSecureSocket" : 
    "name" : "RawSecureSocket"
    "qualifiedname" : "dart.io.RawSecureSocket"
    "comment" : "<p>RawSecureSocket provides a secure (SSL or TLS) network connection. Client connections to a server are provided by calling RawSecureSocket.connect.  A secure server, created with RawSecureServerSocket, also returns RawSecureSocket objects representing the server end of a secure connection. The certificate provided by the server is checked using the certificate database provided in SecureSocket.initialize, and/or the default built-in root certificates.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.RawSocket"
    "variables" : 
    "methods" : 
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io.RawSecureSocket.connect"
        "comment" : "<p>Constructs a new secure client socket and connect it to the given host on the given port. The returned Future is completed with the RawSecureSocket when it is connected and ready for subscription.</p> <p>The certificate provided by the server is checked using the certificate database provided in <code>SecureSocket.initialize</code>, and/or the default built-in root certificates. If <code>sendClientCertificate</code> is set to true, the socket will send a client certificate if one is requested by the server. If <code>certificateName</code> is the nickname of a certificate in the certificate database, that certificate will be sent. If <code>certificateName</code> is null, which is the usual use case, an appropriate certificate will be searched for in the database and sent automatically, based on what the server says it will accept.</p> <p><code>onBadCertificate</code> is an optional handler for unverifiable certificates. The handler receives the <code>X509Certificate</code>, and can inspect it and decide (or let the user decide) whether to accept the connection or not.  The handler should return true to continue the <code>RawSecureSocket</code> connection.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.RawSecureSocket.connect#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.RawSecureSocket.connect#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io.RawSecureSocket.connect#sendClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.RawSecureSocket.connect#certificateName"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io.RawSecureSocket.connect#onBadCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "secure" : 
        "name" : "secure"
        "qualifiedname" : "dart.io.RawSecureSocket.secure"
        "comment" : "<p>Takes an already connected <code>socket</code> and starts client side TLS handshake to make the communication secure. When the returned future completes the <code>RawSecureSocket</code> has completed the TLS handshake. Using this function requires that the other end of the connection is prepared for TLS handshake.</p> <p>If the <code>socket</code> already has a subscription, pass the existing subscription in the <code>subscription</code> parameter. The secure socket will take over the subscription and process any subsequent events. In most cases calling <code>pause</code> on this subscription before starting TLS handshake is the right thing to do.</p> <p>If the <code>host</code> argument is passed it will be used as the host name for the TLS handshake. If <code>host</code> is not passed the host name from the <code>socket</code> will be used. The <code>host</code> can be either a <code>String</code> or an <code>InternetAddress</code>.</p> <p>Calling this function will <em>not</em> cause a DNS host lookup. If the <code>host</code> passed is a <code>String</code> the <code>InternetAddress</code> for the resulting <code>SecureSocket</code> will have this passed in <code>host</code> as its host value and the internet address of the already connected socket as its address value.</p> <p>See <code>connect</code> for more information on the arguments.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io.RawSecureSocket.secure#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSocket"
            "value" : "null"
          "subscription" : 
            "name" : "subscription"
            "qualifiedname" : "dart.io.RawSecureSocket.secure#subscription"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.async.StreamSubscription"
            "value" : "null"
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.RawSecureSocket.secure#host"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io.RawSecureSocket.secure#sendClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.RawSecureSocket.secure#certificateName"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io.RawSecureSocket.secure#onBadCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "secureServer" : 
        "name" : "secureServer"
        "qualifiedname" : "dart.io.RawSecureSocket.secureServer"
        "comment" : "<p>Takes an already connected <code>socket</code> and starts server side TLS handshake to make the communication secure. When the returned future completes the <code>RawSecureSocket</code> has completed the TLS handshake. Using this function requires that the other end of the connection is going to start the TLS handshake.</p> <p>If the <code>socket</code> already has a subscription, pass the existing subscription in the <code>subscription</code> parameter. The secure socket will take over the subscription and process any subsequent events.</p> <p>If some of the data of the TLS handshake has already been read from the socket this data can be passed in the <code>bufferedData</code> parameter. This data will be processed before any other data available on the socket.</p> <p>See <code>RawSecureServerSocket.bind</code> for more information on the arguments.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io.RawSecureSocket.secureServer#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSocket"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.RawSecureSocket.secureServer#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "subscription" : 
            "name" : "subscription"
            "qualifiedname" : "dart.io.RawSecureSocket.secureServer#subscription"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.async.StreamSubscription"
            "value" : "null"
          "bufferedData" : 
            "name" : "bufferedData"
            "qualifiedname" : "dart.io.RawSecureSocket.secureServer#bufferedData"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io.RawSecureSocket.secureServer#requestClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io.RawSecureSocket.secureServer#requireClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "peerCertificate" : 
        "name" : "peerCertificate"
        "qualifiedname" : "dart.io.RawSecureSocket.peerCertificate"
        "comment" : "<p>Get the peer certificate for a connected RawSecureSocket.  If this RawSecureSocket is the server end of a secure socket connection, <code>peerCertificate</code> will return the client certificate, or null, if no client certificate was received.  If it is the client end, <code>peerCertificate</code> will return the server's certificate.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
  "SecureSocket" : 
    "name" : "SecureSocket"
    "qualifiedname" : "dart.io.SecureSocket"
    "comment" : "<p>A high-level class for communicating securely over a TCP socket, using TLS and SSL. The <code>SecureSocket</code> exposes both a <code>Stream</code> and an <code>IOSink</code> interface, making it ideal for using together with other <code>Stream</code>s.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Socket"
    "variables" : 
    "methods" : 
      "SecureSocket._" : 
        "name" : "SecureSocket._"
        "qualifiedname" : "dart.io.SecureSocket.SecureSocket._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.SecureSocket"
        "parameters" : 
          "rawSocket" : 
            "name" : "rawSocket"
            "qualifiedname" : "dart.io.SecureSocket.SecureSocket._#rawSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.RawSecureSocket"
            "value" : "null"
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io.SecureSocket.connect"
        "comment" : "<p>Constructs a new secure client socket and connect it to the given <code>host</code> on port <code>port</code>. The returned Future will complete with a <code>SecureSocket</code> that is connected and ready for subscription.</p> <p>If <code>sendClientCertificate</code> is set to true, the socket will send a client certificate if one is requested by the server.</p> <p>If <code>certificateName</code> is the nickname of a certificate in the certificate database, that certificate will be sent.</p> <p>If <code>certificateName</code> is null, which is the usual use case, an appropriate certificate will be searched for in the database and sent automatically, based on what the server says it will accept.</p> <p><code>onBadCertificate</code> is an optional handler for unverifiable certificates. The handler receives the <code>X509Certificate</code>, and can inspect it and decide (or let the user decide) whether to accept the connection or not.  The handler should return true to continue the <code>SecureSocket</code> connection.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.SecureSocket.connect#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.SecureSocket.connect#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io.SecureSocket.connect#sendClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.SecureSocket.connect#certificateName"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io.SecureSocket.connect#onBadCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "secure" : 
        "name" : "secure"
        "qualifiedname" : "dart.io.SecureSocket.secure"
        "comment" : "<p>Takes an already connected <code>socket</code> and starts client side TLS handshake to make the communication secure. When the returned future completes the <code>SecureSocket</code> has completed the TLS handshake. Using this function requires that the other end of the connection is prepared for TLS handshake.</p> <p>If the <code>socket</code> already has a subscription, this subscription will no longer receive and events. In most cases calling <code>pause</code> on this subscription before starting TLS handshake is the right thing to do.</p> <p>If the <code>host</code> argument is passed it will be used as the host name for the TLS handshake. If <code>host</code> is not passed the host name from the <code>socket</code> will be used. The <code>host</code> can be either a <code>String</code> or an <code>InternetAddress</code>.</p> <p>Calling this function will <em>not</em> cause a DNS host lookup. If the <code>host</code> passed is a <code>String</code> the <code>InternetAddress</code> for the resulting <code>SecureSocket</code> will have the passed in <code>host</code> as its host value and the internet address of the already connected socket as its address value.</p> <p>See <code>connect</code> for more information on the arguments.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io.SecureSocket.secure#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.SecureSocket.secure#host"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "sendClientCertificate" : 
            "name" : "sendClientCertificate"
            "qualifiedname" : "dart.io.SecureSocket.secure#sendClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.SecureSocket.secure#certificateName"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "onBadCertificate" : 
            "name" : "onBadCertificate"
            "qualifiedname" : "dart.io.SecureSocket.secure#onBadCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "secureServer" : 
        "name" : "secureServer"
        "qualifiedname" : "dart.io.SecureSocket.secureServer"
        "comment" : "<p>Takes an already connected <code>socket</code> and starts server side TLS handshake to make the communication secure. When the returned future completes the <code>SecureSocket</code> has completed the TLS handshake. Using this function requires that the other end of the connection is going to start the TLS handshake.</p> <p>If the <code>socket</code> already has a subscription, this subscription will no longer receive and events. In most cases calling <code>:pause:</code> on this subscription before starting TLS handshake is the right thing to do.</p> <p>If some of the data of the TLS handshake has already been read from the socket this data can be passed in the <code>bufferedData</code> parameter. This data will be processed before any other data available on the socket.</p> <p>See <code>SecureServerSocket.bind</code> for more information on the arguments.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io.SecureSocket.secureServer#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.SecureSocket.secureServer#certificateName"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "bufferedData" : 
            "name" : "bufferedData"
            "qualifiedname" : "dart.io.SecureSocket.secureServer#bufferedData"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io.SecureSocket.secureServer#requestClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "requireClientCertificate" : 
            "name" : "requireClientCertificate"
            "qualifiedname" : "dart.io.SecureSocket.secureServer#requireClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "peerCertificate" : 
        "name" : "peerCertificate"
        "qualifiedname" : "dart.io.SecureSocket.peerCertificate"
        "comment" : "<p>Get the peer certificate for a connected SecureSocket.  If this SecureSocket is the server end of a secure socket connection, <code>peerCertificate</code> will return the client certificate, or null, if no client certificate was received.  If it is the client end, <code>peerCertificate</code> will return the server's certificate.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
      "initialize" : 
        "name" : "initialize"
        "qualifiedname" : "dart.io.SecureSocket.initialize"
        "comment" : "<p>Initializes the NSS library. If <code>initialize</code> is not called, the library is automatically initialized as if <code>initialize</code> were called with no arguments. If <code>initialize</code> is called more than once, or called after automatic initialization has happened (when a secure connection is made), then a TlsException is thrown.</p> <p>The optional argument <code>database</code> is the path to a certificate database directory containing root certificates for verifying certificate paths on client connections, and server certificates to provide on server connections. The argument <code>password</code> should be used when creating secure server sockets, to allow the private key of the server certificate to be fetched. If <code>useBuiltinRoots</code> is true (the default), then a built-in set of root certificates for trusted certificate authorities is merged with the certificates in the database. The list of built-in root certificates, and documentation about this default database, is available at http://www.mozilla.org/projects/security/certs/included/ .</p> <p>If the <code>database</code> argument is omitted, then only the builtin root certificates are used. If <code>useBuiltinRoots</code> is also false, then no certificates are available.</p> <p>Examples:   1) Use only the builtin root certificates:</p> <pre><code>SecureSocket.initialize(); or </code></pre> <p>  2) Use a specified database directory and the builtin roots:</p> <pre><code>SecureSocket.initialize(database: 'path/to/my/database',                         password: 'my_password'); </code></pre> <p>  3) Use a specified database directory, without builtin roots:</p> <pre><code>SecureSocket.initialize(database: 'path/to/my/database',                         password: 'my_password'.                         useBuiltinRoots: false); </code></pre> <p>The database should be an NSS certificate database directory containing a cert9.db file, not a cert8.db file.  This version of the database can be created using the NSS certutil tool with \"sql:\" in front of the absolute path of the database directory, or setting the environment variable <code>[NSS_DEFAULT_DB_TYPE]</code> to \"sql\".</p>"
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "database" : 
            "name" : "database"
            "qualifiedname" : "dart.io.SecureSocket.initialize#database"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "password" : 
            "name" : "password"
            "qualifiedname" : "dart.io.SecureSocket.initialize#password"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "useBuiltinRoots" : 
            "name" : "useBuiltinRoots"
            "qualifiedname" : "dart.io.SecureSocket.initialize#useBuiltinRoots"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
  "_Timer" : 
    "name" : "_Timer"
    "qualifiedname" : "dart.io._Timer"
    "comment" : ""
    "superclass" : "dart.collection.LinkedListEntry"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Timer"
    "variables" : 
      "_NO_TIMER" : 
        "name" : "_NO_TIMER"
        "qualifiedname" : "dart.io._Timer._NO_TIMER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_timers" : 
        "name" : "_timers"
        "qualifiedname" : "dart.io._Timer._timers"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.collection.LinkedList"
      "_receivePort" : 
        "name" : "_receivePort"
        "qualifiedname" : "dart.io._Timer._receivePort"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.isolate.ReceivePort"
      "_handling_callbacks" : 
        "name" : "_handling_callbacks"
        "qualifiedname" : "dart.io._Timer._handling_callbacks"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.bool"
      "_callback" : 
        "name" : "_callback"
        "qualifiedname" : "dart.io._Timer._callback"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Function"
      "_milliSeconds" : 
        "name" : "_milliSeconds"
        "qualifiedname" : "dart.io._Timer._milliSeconds"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_wakeupTime" : 
        "name" : "_wakeupTime"
        "qualifiedname" : "dart.io._Timer._wakeupTime"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_createTimer" : 
        "name" : "_createTimer"
        "qualifiedname" : "dart.io._Timer._createTimer"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Timer"
        "parameters" : 
          "callback" : 
            "name" : "callback"
            "qualifiedname" : "dart.io._Timer._createTimer#callback"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "milliSeconds" : 
            "name" : "milliSeconds"
            "qualifiedname" : "dart.io._Timer._createTimer#milliSeconds"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "repeating" : 
            "name" : "repeating"
            "qualifiedname" : "dart.io._Timer._createTimer#repeating"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_Timer" : 
        "name" : "_Timer"
        "qualifiedname" : "dart.io._Timer._Timer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io._Timer"
        "parameters" : 
          "milliSeconds" : 
            "name" : "milliSeconds"
            "qualifiedname" : "dart.io._Timer._Timer#milliSeconds"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "callback" : 
            "name" : "callback"
            "qualifiedname" : "dart.io._Timer._Timer#callback"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_Timer.periodic" : 
        "name" : "_Timer.periodic"
        "qualifiedname" : "dart.io._Timer._Timer.periodic"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io._Timer"
        "parameters" : 
          "milliSeconds" : 
            "name" : "milliSeconds"
            "qualifiedname" : "dart.io._Timer._Timer.periodic#milliSeconds"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "callback" : 
            "name" : "callback"
            "qualifiedname" : "dart.io._Timer._Timer.periodic#callback"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_Timer._internal" : 
        "name" : "_Timer._internal"
        "qualifiedname" : "dart.io._Timer._Timer._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_clear" : 
        "name" : "_clear"
        "qualifiedname" : "dart.io._Timer._clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_repeating" : 
        "name" : "_repeating"
        "qualifiedname" : "dart.io._Timer._repeating"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "cancel" : 
        "name" : "cancel"
        "qualifiedname" : "dart.io._Timer.cancel"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_advanceWakeupTime" : 
        "name" : "_advanceWakeupTime"
        "qualifiedname" : "dart.io._Timer._advanceWakeupTime"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_addTimerToList" : 
        "name" : "_addTimerToList"
        "qualifiedname" : "dart.io._Timer._addTimerToList"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_notifyEventHandler" : 
        "name" : "_notifyEventHandler"
        "qualifiedname" : "dart.io._Timer._notifyEventHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_createTimerHandler" : 
        "name" : "_createTimerHandler"
        "qualifiedname" : "dart.io._Timer._createTimerHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_shutdownTimerHandler" : 
        "name" : "_shutdownTimerHandler"
        "qualifiedname" : "dart.io._Timer._shutdownTimerHandler"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_WindowsCodePageDecoder" : 
    "name" : "_WindowsCodePageDecoder"
    "qualifiedname" : "dart.io._WindowsCodePageDecoder"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._WindowsCodePageDecoder.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._WindowsCodePageDecoder.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._WindowsCodePageDecoder.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_decodeBytes" : 
        "name" : "_decodeBytes"
        "qualifiedname" : "dart.io._WindowsCodePageDecoder._decodeBytes"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._WindowsCodePageDecoder._decodeBytes#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
  "_WindowsCodePageEncoder" : 
    "name" : "_WindowsCodePageEncoder"
    "qualifiedname" : "dart.io._WindowsCodePageEncoder"
    "comment" : ""
    "superclass" : "dart.io._SingleByteEncoder"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_encode" : 
        "name" : "_encode"
        "qualifiedname" : "dart.io._WindowsCodePageEncoder._encode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._WindowsCodePageEncoder._encode#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_encodeString" : 
        "name" : "_encodeString"
        "qualifiedname" : "dart.io._WindowsCodePageEncoder._encodeString"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._WindowsCodePageEncoder._encodeString#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_Latin1Encoder" : 
    "name" : "_Latin1Encoder"
    "qualifiedname" : "dart.io._Latin1Encoder"
    "comment" : ""
    "superclass" : "dart.io._SingleByteEncoder"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_encode" : 
        "name" : "_encode"
        "qualifiedname" : "dart.io._Latin1Encoder._encode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._Latin1Encoder._encode#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_AsciiEncoder" : 
    "name" : "_AsciiEncoder"
    "qualifiedname" : "dart.io._AsciiEncoder"
    "comment" : ""
    "superclass" : "dart.io._SingleByteEncoder"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_encode" : 
        "name" : "_encode"
        "qualifiedname" : "dart.io._AsciiEncoder._encode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._AsciiEncoder._encode#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_SingleByteEncoder" : 
    "name" : "_SingleByteEncoder"
    "qualifiedname" : "dart.io._SingleByteEncoder"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._SingleByteEncoder.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._SingleByteEncoder.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._SingleByteEncoder.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_encode" : 
        "name" : "_encode"
        "qualifiedname" : "dart.io._SingleByteEncoder._encode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._SingleByteEncoder._encode#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_Latin1Decoder" : 
    "name" : "_Latin1Decoder"
    "qualifiedname" : "dart.io._Latin1Decoder"
    "comment" : ""
    "superclass" : "dart.io._SingleByteDecoder"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_Latin1Decoder" : 
        "name" : "_Latin1Decoder"
        "qualifiedname" : "dart.io._Latin1Decoder._Latin1Decoder"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "replacementChar" : 
            "name" : "replacementChar"
            "qualifiedname" : "dart.io._Latin1Decoder._Latin1Decoder#replacementChar"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_decodeByte" : 
        "name" : "_decodeByte"
        "qualifiedname" : "dart.io._Latin1Decoder._decodeByte"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io._Latin1Decoder._decodeByte#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_AsciiDecoder" : 
    "name" : "_AsciiDecoder"
    "qualifiedname" : "dart.io._AsciiDecoder"
    "comment" : ""
    "superclass" : "dart.io._SingleByteDecoder"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_AsciiDecoder" : 
        "name" : "_AsciiDecoder"
        "qualifiedname" : "dart.io._AsciiDecoder._AsciiDecoder"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "replacementChar" : 
            "name" : "replacementChar"
            "qualifiedname" : "dart.io._AsciiDecoder._AsciiDecoder#replacementChar"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_decodeByte" : 
        "name" : "_decodeByte"
        "qualifiedname" : "dart.io._AsciiDecoder._decodeByte"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io._AsciiDecoder._decodeByte#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_SingleByteDecoder" : 
    "name" : "_SingleByteDecoder"
    "qualifiedname" : "dart.io._SingleByteDecoder"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_replacementChar" : 
        "name" : "_replacementChar"
        "qualifiedname" : "dart.io._SingleByteDecoder._replacementChar"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_SingleByteDecoder" : 
        "name" : "_SingleByteDecoder"
        "qualifiedname" : "dart.io._SingleByteDecoder._SingleByteDecoder"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_replacementChar" : 
            "name" : "_replacementChar"
            "qualifiedname" : "dart.io._SingleByteDecoder._SingleByteDecoder#_replacementChar"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._SingleByteDecoder.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._SingleByteDecoder.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._SingleByteDecoder.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_decodeByte" : 
        "name" : "_decodeByte"
        "qualifiedname" : "dart.io._SingleByteDecoder._decodeByte"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io._SingleByteDecoder._decodeByte#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "LineTransformer" : 
    "name" : "LineTransformer"
    "qualifiedname" : "dart.io.LineTransformer"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_LF" : 
        "name" : "_LF"
        "qualifiedname" : "dart.io.LineTransformer._LF"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_CR" : 
        "name" : "_CR"
        "qualifiedname" : "dart.io.LineTransformer._CR"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_buffer" : 
        "name" : "_buffer"
        "qualifiedname" : "dart.io.LineTransformer._buffer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.StringBuffer"
      "_carry" : 
        "name" : "_carry"
        "qualifiedname" : "dart.io.LineTransformer._carry"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "_handle" : 
        "name" : "_handle"
        "qualifiedname" : "dart.io.LineTransformer._handle"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io.LineTransformer._handle#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io.LineTransformer._handle#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
          "isClosing" : 
            "name" : "isClosing"
            "qualifiedname" : "dart.io.LineTransformer._handle#isClosing"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io.LineTransformer.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io.LineTransformer.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io.LineTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "handleDone" : 
        "name" : "handleDone"
        "qualifiedname" : "dart.io.LineTransformer.handleDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io.LineTransformer.handleDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
  "StringEncoder" : 
    "name" : "StringEncoder"
    "qualifiedname" : "dart.io.StringEncoder"
    "comment" : "<p>Stream transformer that can encode a stream of strings info a stream of bytes using <code>encoding</code>.</p> <p>Strings that cannot be represented in the given encoding will result in an error and a close event on the stream.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamTransformer"
    "variables" : 
      "_encoder" : 
        "name" : "_encoder"
        "qualifiedname" : "dart.io.StringEncoder._encoder"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "StringEncoder" : 
        "name" : "StringEncoder"
        "qualifiedname" : "dart.io.StringEncoder.StringEncoder"
        "comment" : "<p>Create a new <code>StringDecoder</code> with an optional <code>encoding</code> and <code>replacementChar</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.StringEncoder.StringEncoder#encoding"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.StringEncoder.bind"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.StringEncoder.bind#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
  "StringDecoder" : 
    "name" : "StringDecoder"
    "qualifiedname" : "dart.io.StringDecoder"
    "comment" : "<p>Stream transformer that can decode a stream of bytes into a stream of strings using <code>encoding</code>.</p> <p>Invalid or forbidden byte-sequences will not produce errors, but will instead insert <code>replacementChar</code> in the decoded strings.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamTransformer"
    "variables" : 
      "_decoder" : 
        "name" : "_decoder"
        "qualifiedname" : "dart.io.StringDecoder._decoder"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "decode" : 
        "name" : "decode"
        "qualifiedname" : "dart.io.StringDecoder.decode"
        "comment" : "<p>Decodes a stream of bytes into a <code>String</code> with an optional <code>encoding</code> and <code>replacementChar</code>.</p> <p>The default value for <code>encoding</code> is <code>Encoding.UTF_8</code>.</p> <p>The default value for <code>replacementChar</code> is code point U+FFFD.</p> <p>Completes with the decoded <code>String</code> when the stream is done.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.StringDecoder.decode#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.StringDecoder.decode#encoding"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
          "replacementChar" : 
            "name" : "replacementChar"
            "qualifiedname" : "dart.io.StringDecoder.decode#replacementChar"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "UNICODE_REPLACEMENT_CHARACTER_CODEPOINT"
      "StringDecoder" : 
        "name" : "StringDecoder"
        "qualifiedname" : "dart.io.StringDecoder.StringDecoder"
        "comment" : "<p>Create a new <code>StringDecoder</code> with an optional <code>encoding</code> and <code>replacementChar</code>.</p> <p>The default value for <code>encoding</code> is <code>Encoding.UTF_8</code>.</p> <p>The default value for <code>replacementChar</code> is code point U+FFFD.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.StringDecoder.StringDecoder#encoding"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
          "replacementChar" : 
            "name" : "replacementChar"
            "qualifiedname" : "dart.io.StringDecoder.StringDecoder#replacementChar"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.StringDecoder.bind"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.StringDecoder.bind#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
  "Encoding" : 
    "name" : "Encoding"
    "qualifiedname" : "dart.io.Encoding"
    "comment" : "<p>String encodings.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "UTF_8" : 
        "name" : "UTF_8"
        "qualifiedname" : "dart.io.Encoding.UTF_8"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.Encoding"
      "ISO_8859_1" : 
        "name" : "ISO_8859_1"
        "qualifiedname" : "dart.io.Encoding.ISO_8859_1"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.Encoding"
      "ASCII" : 
        "name" : "ASCII"
        "qualifiedname" : "dart.io.Encoding.ASCII"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.Encoding"
      "SYSTEM" : 
        "name" : "SYSTEM"
        "qualifiedname" : "dart.io.Encoding.SYSTEM"
        "comment" : "<p>SYSTEM encoding is the current code page on Windows and UTF-8 on Linux and Mac.</p>"
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.Encoding"
      "_nameToEncoding" : 
        "name" : "_nameToEncoding"
        "qualifiedname" : "dart.io.Encoding._nameToEncoding"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.Map"
      "name" : 
        "name" : "name"
        "qualifiedname" : "dart.io.Encoding.name"
        "comment" : "<p>Name of the encoding. This will be the lower-case version of one of the IANA official names for the character set (see http://www.iana.org/assignments/character-sets/character-sets.xml)</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "fromName" : 
        "name" : "fromName"
        "qualifiedname" : "dart.io.Encoding.fromName"
        "comment" : "<p>Gets an <code>Encoding</code> object from the name of the character set name. The names used are the IANA official names for the character set (see http://www.iana.org/assignments/character-sets/character-sets.xml).</p> <p>The <code>name</code> passed is case insensitive.</p> <p>If character set is not supported <code>:null:</code> is returned.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.Encoding"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.Encoding.fromName#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "Encoding._internal" : 
        "name" : "Encoding._internal"
        "qualifiedname" : "dart.io.Encoding.Encoding._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.Encoding.Encoding._internal#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_StdIOUtils" : 
    "name" : "_StdIOUtils"
    "qualifiedname" : "dart.io._StdIOUtils"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_getStdioOutputStream" : 
        "name" : "_getStdioOutputStream"
        "qualifiedname" : "dart.io._StdIOUtils._getStdioOutputStream"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.IOSink"
        "parameters" : 
          "fd" : 
            "name" : "fd"
            "qualifiedname" : "dart.io._StdIOUtils._getStdioOutputStream#fd"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_getStdioInputStream" : 
        "name" : "_getStdioInputStream"
        "qualifiedname" : "dart.io._StdIOUtils._getStdioInputStream"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Stream"
        "parameters" : 
      "_socketType" : 
        "name" : "_socketType"
        "qualifiedname" : "dart.io._StdIOUtils._socketType"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "nativeSocket" : 
            "name" : "nativeSocket"
            "qualifiedname" : "dart.io._StdIOUtils._socketType#nativeSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "StdioType" : 
    "name" : "StdioType"
    "qualifiedname" : "dart.io.StdioType"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "TERMINAL" : 
        "name" : "TERMINAL"
        "qualifiedname" : "dart.io.StdioType.TERMINAL"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.StdioType"
      "PIPE" : 
        "name" : "PIPE"
        "qualifiedname" : "dart.io.StdioType.PIPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.StdioType"
      "FILE" : 
        "name" : "FILE"
        "qualifiedname" : "dart.io.StdioType.FILE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.StdioType"
      "OTHER" : 
        "name" : "OTHER"
        "qualifiedname" : "dart.io.StdioType.OTHER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.StdioType"
      "name" : 
        "name" : "name"
        "qualifiedname" : "dart.io.StdioType.name"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "StdioType._" : 
        "name" : "StdioType._"
        "qualifiedname" : "dart.io.StdioType.StdioType._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.StdioType.StdioType._#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.StdioType.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_StdSink" : 
    "name" : "_StdSink"
    "qualifiedname" : "dart.io._StdSink"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOSink"
    "variables" : 
      "_sink" : 
        "name" : "_sink"
        "qualifiedname" : "dart.io._StdSink._sink"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.IOSink"
    "methods" : 
      "_StdSink" : 
        "name" : "_StdSink"
        "qualifiedname" : "dart.io._StdSink._StdSink"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_sink" : 
            "name" : "_sink"
            "qualifiedname" : "dart.io._StdSink._StdSink#_sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.IOSink"
            "value" : "null"
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io._StdSink.encoding"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Encoding"
        "parameters" : 
      "encoding=" : 
        "name" : "encoding="
        "qualifiedname" : "dart.io._StdSink.encoding="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._StdSink.encoding=#encoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._StdSink.write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.io._StdSink.write#object"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "writeln" : 
        "name" : "writeln"
        "qualifiedname" : "dart.io._StdSink.writeln"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "object" : 
            "name" : "object"
            "qualifiedname" : "dart.io._StdSink.writeln#object"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dynamic"
            "value" : "\"\""
      "writeAll" : 
        "name" : "writeAll"
        "qualifiedname" : "dart.io._StdSink.writeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objects" : 
            "name" : "objects"
            "qualifiedname" : "dart.io._StdSink.writeAll#objects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "sep" : 
            "name" : "sep"
            "qualifiedname" : "dart.io._StdSink.writeAll#sep"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dynamic"
            "value" : "\"\""
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._StdSink.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._StdSink.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "addError" : 
        "name" : "addError"
        "qualifiedname" : "dart.io._StdSink.addError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._StdSink.addError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "writeCharCode" : 
        "name" : "writeCharCode"
        "qualifiedname" : "dart.io._StdSink.writeCharCode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "charCode" : 
            "name" : "charCode"
            "qualifiedname" : "dart.io._StdSink.writeCharCode#charCode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._StdSink.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._StdSink.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._StdSink.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._StdSink.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_StdStream" : 
    "name" : "_StdStream"
    "qualifiedname" : "dart.io._StdStream"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_stream" : 
        "name" : "_stream"
        "qualifiedname" : "dart.io._StdStream._stream"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Stream"
    "methods" : 
      "_StdStream" : 
        "name" : "_StdStream"
        "qualifiedname" : "dart.io._StdStream._StdStream"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_stream" : 
            "name" : "_stream"
            "qualifiedname" : "dart.io._StdStream._StdStream#_stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._StdStream.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._StdStream.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._StdStream.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._StdStream.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._StdStream.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "SocketException" : 
    "name" : "SocketException"
    "qualifiedname" : "dart.io.SocketException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.SocketException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "osError" : 
        "name" : "osError"
        "qualifiedname" : "dart.io.SocketException.osError"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.OSError"
    "methods" : 
      "SocketException" : 
        "name" : "SocketException"
        "qualifiedname" : "dart.io.SocketException.SocketException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.SocketException.SocketException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.SocketException.SocketException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.OSError"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.SocketException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "Socket" : 
    "name" : "Socket"
    "qualifiedname" : "dart.io.Socket"
    "comment" : "<p>A high-level class for communicating over a TCP socket. The <code>Socket</code> exposes both a <code>Stream</code> and a <code>IOSink</code> interface, making it ideal for using together with other <code>Stream</code>s.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOSink"
      - "dart.async.Stream"
    "variables" : 
    "methods" : 
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io.Socket.connect"
        "comment" : "<p>Creats a new socket connection to the host and port and returns a <code>Future</code> that will complete with either a <code>Socket</code> once connected or an error if the host-lookup or connection failed.</p> <p><code>host</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>host</code> is a <code>String</code>, <code>connect</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.Socket.connect#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.Socket.connect#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io.Socket.destroy"
        "comment" : "<p>Destroy the socket in both directions. Calling <code>destroy</code> will make the send a close event on the stream and will no longer react on data being piped to it.</p> <p>Call <code>close</code>(inherited from <code>IOSink</code>) to only close the <code>Socket</code> for sending data.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "setOption" : 
        "name" : "setOption"
        "qualifiedname" : "dart.io.Socket.setOption"
        "comment" : "<p>Use <code>setOption</code> to customize the <code>RawSocket</code>. See <code>SocketOption</code> for available options.</p> <p>Returns <code>true</code> if the option was set successfully, false otherwise.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "option" : 
            "name" : "option"
            "qualifiedname" : "dart.io.Socket.setOption#option"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.SocketOption"
            "value" : "null"
          "enabled" : 
            "name" : "enabled"
            "qualifiedname" : "dart.io.Socket.setOption#enabled"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.Socket.port"
        "comment" : "<p>Returns the port used by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "remotePort" : 
        "name" : "remotePort"
        "qualifiedname" : "dart.io.Socket.remotePort"
        "comment" : "<p>Returns the remote port connected to by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "address" : 
        "name" : "address"
        "qualifiedname" : "dart.io.Socket.address"
        "comment" : "<p>Returns the <code>InternetAddress</code> used to connect this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "remoteHost" : 
        "name" : "remoteHost"
        "qualifiedname" : "dart.io.Socket.remoteHost"
        "comment" : "<p>Returns the remote host connected to by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "RawSocket" : 
    "name" : "RawSocket"
    "qualifiedname" : "dart.io.RawSocket"
    "comment" : "<p>The <code>RawSocket</code> is a low-level interface to a socket, exposing the raw events signaled by the system. It's a <code>Stream</code> of <code>RawSocketEvent</code>s.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
      "readEventsEnabled" : 
        "name" : "readEventsEnabled"
        "qualifiedname" : "dart.io.RawSocket.readEventsEnabled"
        "comment" : "<p>Set or get, if the <code>RawSocket</code> should listen for <code>RawSocketEvent.READ</code> events. Default is <code>true</code>.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "writeEventsEnabled" : 
        "name" : "writeEventsEnabled"
        "qualifiedname" : "dart.io.RawSocket.writeEventsEnabled"
        "comment" : "<p>Set or get, if the <code>RawSocket</code> should listen for <code>RawSocketEvent.WRITE</code> events. Default is <code>true</code>. This is a one-shot listener, and writeEventsEnabled must be set to true again to receive another write event.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "connect" : 
        "name" : "connect"
        "qualifiedname" : "dart.io.RawSocket.connect"
        "comment" : "<p>Creates a new socket connection to the host and port and returns a <code>Future</code> that will complete with either a <code>RawSocket</code> once connected or an error if the host-lookup or connection failed.</p> <p><code>host</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>host</code> is a <code>String</code>, <code>connect</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.RawSocket.connect#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.RawSocket.connect#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "available" : 
        "name" : "available"
        "qualifiedname" : "dart.io.RawSocket.available"
        "comment" : "<p>Returns the number of received and non-read bytes in the socket that can be read.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "read" : 
        "name" : "read"
        "qualifiedname" : "dart.io.RawSocket.read"
        "comment" : "<p>Read up to <code>len</code> bytes from the socket. This function is non-blocking and will only return data if data is available. The number of bytes read can be less then <code>len</code> if fewer bytes are available for immediate reading. If no data is available <code>null</code> is returned.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "len" : 
            "name" : "len"
            "qualifiedname" : "dart.io.RawSocket.read#len"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io.RawSocket.write"
        "comment" : "<p>Writes up to <code>count</code> bytes of the buffer from <code>offset</code> buffer offset to the socket. The number of successfully written bytes is returned. This function is non-blocking and will only write data if buffer space is available in the socket.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io.RawSocket.write#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "offset" : 
            "name" : "offset"
            "qualifiedname" : "dart.io.RawSocket.write#offset"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "count" : 
            "name" : "count"
            "qualifiedname" : "dart.io.RawSocket.write#count"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.RawSocket.port"
        "comment" : "<p>Returns the port used by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "remotePort" : 
        "name" : "remotePort"
        "qualifiedname" : "dart.io.RawSocket.remotePort"
        "comment" : "<p>Returns the remote port connected to by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "address" : 
        "name" : "address"
        "qualifiedname" : "dart.io.RawSocket.address"
        "comment" : "<p>Returns the <code>InternetAddress</code> used to connect this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "remoteHost" : 
        "name" : "remoteHost"
        "qualifiedname" : "dart.io.RawSocket.remoteHost"
        "comment" : "<p>Returns the remote host connected to by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.RawSocket.close"
        "comment" : "<p>Closes the socket. Calling <code>close</code> will never throw an exception and calling it several times is supported. Calling <code>close</code> can result in a <code>RawSocketEvent.READ_CLOSED</code> event.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "shutdown" : 
        "name" : "shutdown"
        "qualifiedname" : "dart.io.RawSocket.shutdown"
        "comment" : "<p>Shutdown the socket in the <code>direction</code>. Calling <code>shutdown</code> will never throw an exception and calling it several times is supported. Calling shutdown with either <code>SocketDirection.BOTH</code> or <code>SocketDirection.RECEIVE</code> can result in a <code>RawSocketEvent.READ_CLOSED</code> event.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "direction" : 
            "name" : "direction"
            "qualifiedname" : "dart.io.RawSocket.shutdown#direction"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.SocketDirection"
            "value" : "null"
      "setOption" : 
        "name" : "setOption"
        "qualifiedname" : "dart.io.RawSocket.setOption"
        "comment" : "<p>Use <code>setOption</code> to customize the <code>RawSocket</code>. See <code>SocketOption</code> for available options.</p> <p>Returns <code>true</code> if the option was set successfully, false otherwise.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "option" : 
            "name" : "option"
            "qualifiedname" : "dart.io.RawSocket.setOption#option"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.SocketOption"
            "value" : "null"
          "enabled" : 
            "name" : "enabled"
            "qualifiedname" : "dart.io.RawSocket.setOption#enabled"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "RawSocketEvent" : 
    "name" : "RawSocketEvent"
    "qualifiedname" : "dart.io.RawSocketEvent"
    "comment" : "<p>Events for the <code>RawSocket</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "READ" : 
        "name" : "READ"
        "qualifiedname" : "dart.io.RawSocketEvent.READ"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.RawSocketEvent"
      "WRITE" : 
        "name" : "WRITE"
        "qualifiedname" : "dart.io.RawSocketEvent.WRITE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.RawSocketEvent"
      "READ_CLOSED" : 
        "name" : "READ_CLOSED"
        "qualifiedname" : "dart.io.RawSocketEvent.READ_CLOSED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.RawSocketEvent"
      "_value" : 
        "name" : "_value"
        "qualifiedname" : "dart.io.RawSocketEvent._value"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "RawSocketEvent._" : 
        "name" : "RawSocketEvent._"
        "qualifiedname" : "dart.io.RawSocketEvent.RawSocketEvent._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_value" : 
            "name" : "_value"
            "qualifiedname" : "dart.io.RawSocketEvent.RawSocketEvent._#_value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.RawSocketEvent.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "SocketOption" : 
    "name" : "SocketOption"
    "qualifiedname" : "dart.io.SocketOption"
    "comment" : "<p>The <code>SocketOption</code> is used as a parameter to <code>Socket.setOption</code> and <code>RawSocket.setOption</code> to set customize the behaviour of the underlying socket.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "TCP_NODELAY" : 
        "name" : "TCP_NODELAY"
        "qualifiedname" : "dart.io.SocketOption.TCP_NODELAY"
        "comment" : "<p>Enable or disable no-delay on the socket. If TCP_NODELAY is enabled, the socket will not buffer data internally, but instead write each data chunk as an invidual TCP packet.</p> <p>TCP_NODELAY is disabled by default.</p>"
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.SocketOption"
      "_value" : 
        "name" : "_value"
        "qualifiedname" : "dart.io.SocketOption._value"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "SocketOption._" : 
        "name" : "SocketOption._"
        "qualifiedname" : "dart.io.SocketOption.SocketOption._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_value" : 
            "name" : "_value"
            "qualifiedname" : "dart.io.SocketOption.SocketOption._#_value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "SocketDirection" : 
    "name" : "SocketDirection"
    "qualifiedname" : "dart.io.SocketDirection"
    "comment" : "<p>The <code>SocketDirection</code> is used as a parameter to <code>Socket.close</code> and <code>RawSocket.close</code> to close a socket in the specified direction(s).</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "RECEIVE" : 
        "name" : "RECEIVE"
        "qualifiedname" : "dart.io.SocketDirection.RECEIVE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.SocketDirection"
      "SEND" : 
        "name" : "SEND"
        "qualifiedname" : "dart.io.SocketDirection.SEND"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.SocketDirection"
      "BOTH" : 
        "name" : "BOTH"
        "qualifiedname" : "dart.io.SocketDirection.BOTH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.SocketDirection"
      "_value" : 
        "name" : "_value"
        "qualifiedname" : "dart.io.SocketDirection._value"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "SocketDirection._" : 
        "name" : "SocketDirection._"
        "qualifiedname" : "dart.io.SocketDirection.SocketDirection._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_value" : 
            "name" : "_value"
            "qualifiedname" : "dart.io.SocketDirection.SocketDirection._#_value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "ServerSocket" : 
    "name" : "ServerSocket"
    "qualifiedname" : "dart.io.ServerSocket"
    "comment" : "<p>A <code>ServerSocket</code> represents a listening socket, and provides a stream of <code>Socket</code> objects, one for each connection made to the listening socket.</p> <p>See <code>Socket</code> for more info.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
    "methods" : 
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.ServerSocket.bind"
        "comment" : "<p>Returns a future for a <code>:ServerSocket:</code>. When the future completes the server socket is bound to the given <code>address</code> and <code>port</code> and has started listening on it.</p> <p>The <code>address</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>address</code> is a <code>String</code>, <code>bind</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value [InternetAddress.LOOPBACK_IP_V4] or [InternetAddress.LOOPBACK_IP_V6]. To allow for incoming connection from the network use either one of the values [InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to bind to all interfaces or the IP address of a specific interface.</p> <p>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use <code>v6Only</code> to set version 6 only.</p> <p>If <code>port</code> has the value <code>:0:</code> an ephemeral port will be chosen by the system. The actual port used can be retrieved using the <code>port</code> getter.</p> <p>The optional argument <code>backlog</code> can be used to specify the listen backlog for the underlying OS listen setup. If <code>backlog</code> has the value of <code>:0:</code> (the default) a reasonable value will be chosen by the system.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io.ServerSocket.bind#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.ServerSocket.bind#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io.ServerSocket.bind#backlog"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
          "v6Only" : 
            "name" : "v6Only"
            "qualifiedname" : "dart.io.ServerSocket.bind#v6Only"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.ServerSocket.port"
        "comment" : "<p>Returns the port used by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.ServerSocket.close"
        "comment" : "<p>Closes the socket.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "RawServerSocket" : 
    "name" : "RawServerSocket"
    "qualifiedname" : "dart.io.RawServerSocket"
    "comment" : "<p>A <code>RawServerSocket</code> represents a listening socket, and provides a stream of low-level <code>RawSocket</code> objects, one for each connection made to the listening socket.</p> <p>See <code>RawSocket</code> for more info.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
    "methods" : 
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.RawServerSocket.bind"
        "comment" : "<p>Returns a future for a <code>:RawServerSocket:</code>. When the future completes the server socket is bound to the given <code>address</code> and <code>port</code> and has started listening on it.</p> <p>The <code>address</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>address</code> is a <code>String</code>, <code>bind</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value [InternetAddress.LOOPBACK_IP_V4] or [InternetAddress.LOOPBACK_IP_V6]. To allow for incoming connection from the network use either one of the values [InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to bind to all interfaces or the IP address of a specific interface.</p> <p>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use <code>v6Only</code> to set version 6 only.</p> <p>If <code>port</code> has the value <code>:0:</code> an ephemeral port will be chosen by the system. The actual port used can be retrieved using the <code>:port:</code> getter.</p> <p>The optional argument <code>backlog</code> can be used to specify the listen backlog for the underlying OS listen setup. If <code>backlog</code> has the value of <code>:0:</code> (the default) a reasonable value will be chosen by the system.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io.RawServerSocket.bind#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.RawServerSocket.bind#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io.RawServerSocket.bind#backlog"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
          "v6Only" : 
            "name" : "v6Only"
            "qualifiedname" : "dart.io.RawServerSocket.bind#v6Only"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.RawServerSocket.port"
        "comment" : "<p>Returns the port used by this socket.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.RawServerSocket.close"
        "comment" : "<p>Closes the socket.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "NetworkInterface" : 
    "name" : "NetworkInterface"
    "qualifiedname" : "dart.io.NetworkInterface"
    "comment" : "<p>A <code>NetworkInterface</code> represent an active network interface on the current system. It contains a list of <code>InternetAddress</code>s, that's bound to the interface.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "name" : 
        "name" : "name"
        "qualifiedname" : "dart.io.NetworkInterface.name"
        "comment" : "<p>Get the name of the <code>NetworkInterface</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "addresses" : 
        "name" : "addresses"
        "qualifiedname" : "dart.io.NetworkInterface.addresses"
        "comment" : "<p>Get a list of <code>InternetAddress</code>s currently bound to this <code>NetworkInterface</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "list" : 
        "name" : "list"
        "qualifiedname" : "dart.io.NetworkInterface.list"
        "comment" : "<p>Query the system for <code>NetworkInterface</code>s.</p> <p>If <code>includeLoopback</code> is <code>true</code>, the returned list will include the loopback device. Default is <code>false</code>.</p> <p>If <code>includeLinkLocal</code> is <code>true</code>, the list of addresses of the returned <code>NetworkInterface</code>s, may include link local addresses. Default is <code>false</code>.</p> <p>If <code>type</code> is either <code>InternetAddressType.IP_V4</code> or <code>InternetAddressType.IP_V6</code> it will only lookup addresses of the specified type. Default is <code>InternetAddressType.ANY</code>.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "includeLoopback" : 
            "name" : "includeLoopback"
            "qualifiedname" : "dart.io.NetworkInterface.list#includeLoopback"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "includeLinkLocal" : 
            "name" : "includeLinkLocal"
            "qualifiedname" : "dart.io.NetworkInterface.list#includeLinkLocal"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "type" : 
            "name" : "type"
            "qualifiedname" : "dart.io.NetworkInterface.list#type"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.InternetAddressType"
            "value" : "InternetAddressType.ANY"
  "InternetAddress" : 
    "name" : "InternetAddress"
    "qualifiedname" : "dart.io.InternetAddress"
    "comment" : "<p>The <code>InternetAddress</code> is an object reflecting either a remote or a local address. When combined with a port number, this represents a endpoint that a socket can connect to or a listening socket can bind to.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "type" : 
        "name" : "type"
        "qualifiedname" : "dart.io.InternetAddress.type"
        "comment" : "<p>The <code>type</code> of the <code>InternetAddress</code> specified what IP protocol.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.InternetAddressType"
    "methods" : 
      "LOOPBACK_IP_V4" : 
        "name" : "LOOPBACK_IP_V4"
        "qualifiedname" : "dart.io.InternetAddress.LOOPBACK_IP_V4"
        "comment" : "<p>IP version 4 loopback address. Use this address when listening on or connecting to the loopback adapter using IP version 4 (IPv4).</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "LOOPBACK_IP_V6" : 
        "name" : "LOOPBACK_IP_V6"
        "qualifiedname" : "dart.io.InternetAddress.LOOPBACK_IP_V6"
        "comment" : "<p>IP version 6 loopback address. Use this address when listening on or connecting to the loopback adapter using IP version 6 (IPv6).</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "ANY_IP_V4" : 
        "name" : "ANY_IP_V4"
        "qualifiedname" : "dart.io.InternetAddress.ANY_IP_V4"
        "comment" : "<p>IP version 4 any address. Use this address when listening on all adapters IP addresses using IP version 4 (IPv4).</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "ANY_IP_V6" : 
        "name" : "ANY_IP_V6"
        "qualifiedname" : "dart.io.InternetAddress.ANY_IP_V6"
        "comment" : "<p>IP version 6 any address. Use this address when listening on all adapters IP addresses using IP version 6 (IPv6).</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "address" : 
        "name" : "address"
        "qualifiedname" : "dart.io.InternetAddress.address"
        "comment" : "<p>The resolved address of the host.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "host" : 
        "name" : "host"
        "qualifiedname" : "dart.io.InternetAddress.host"
        "comment" : "<p>The host used to lookup the address.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "isLoopback" : 
        "name" : "isLoopback"
        "qualifiedname" : "dart.io.InternetAddress.isLoopback"
        "comment" : "<p>Returns true if the <code>InternetAddress</code> is a loopback address.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isLinkLocal" : 
        "name" : "isLinkLocal"
        "qualifiedname" : "dart.io.InternetAddress.isLinkLocal"
        "comment" : "<p>Returns true if the <code>InternetAddress</code>s scope is a link-local.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "reverse" : 
        "name" : "reverse"
        "qualifiedname" : "dart.io.InternetAddress.reverse"
        "comment" : "<p>Perform a reverse dns lookup on the <code>address</code>, creating a new <code>InternetAddress</code> where the host field set to the result.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "lookup" : 
        "name" : "lookup"
        "qualifiedname" : "dart.io.InternetAddress.lookup"
        "comment" : "<p>Lookup a host, returning a Future of a list of <code>InternetAddress</code>s. If <code>type</code> is <code>InternetAddressType.ANY</code>, it will lookup both IP version 4 (IPv4) and IP version 6 (IPv6) addresses. If <code>type</code> is either <code>InternetAddressType.IP_V4</code> or <code>InternetAddressType.IP_V6</code> it will only lookup addresses of the specified type. The order of the list can, and most likely will, change over time.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.InternetAddress.lookup#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "type" : 
            "name" : "type"
            "qualifiedname" : "dart.io.InternetAddress.lookup#type"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.InternetAddressType"
            "value" : "InternetAddressType.ANY"
  "InternetAddressType" : 
    "name" : "InternetAddressType"
    "qualifiedname" : "dart.io.InternetAddressType"
    "comment" : "<p><code>InternetAddressType</code> is the type an <code>InternetAddress</code>. Currently, IP version 4 (IPv4) and IP version 6 (IPv6) are supported.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "IP_V4" : 
        "name" : "IP_V4"
        "qualifiedname" : "dart.io.InternetAddressType.IP_V4"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.InternetAddressType"
      "IP_V6" : 
        "name" : "IP_V6"
        "qualifiedname" : "dart.io.InternetAddressType.IP_V6"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.InternetAddressType"
      "ANY" : 
        "name" : "ANY"
        "qualifiedname" : "dart.io.InternetAddressType.ANY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.InternetAddressType"
      "_value" : 
        "name" : "_value"
        "qualifiedname" : "dart.io.InternetAddressType._value"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "InternetAddressType._" : 
        "name" : "InternetAddressType._"
        "qualifiedname" : "dart.io.InternetAddressType.InternetAddressType._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_value" : 
            "name" : "_value"
            "qualifiedname" : "dart.io.InternetAddressType.InternetAddressType._#_value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "InternetAddressType._from" : 
        "name" : "InternetAddressType._from"
        "qualifiedname" : "dart.io.InternetAddressType.InternetAddressType._from"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.InternetAddressType"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.InternetAddressType.InternetAddressType._from#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "name" : 
        "name" : "name"
        "qualifiedname" : "dart.io.InternetAddressType.name"
        "comment" : "<p>Get the name of the type, e.g. \"IP<em>V4\" or \"IP</em>V6\".</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.InternetAddressType.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "ProcessException" : 
    "name" : "ProcessException"
    "qualifiedname" : "dart.io.ProcessException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "executable" : 
        "name" : "executable"
        "qualifiedname" : "dart.io.ProcessException.executable"
        "comment" : "<p>Contains the executable provided for the process.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "arguments" : 
        "name" : "arguments"
        "qualifiedname" : "dart.io.ProcessException.arguments"
        "comment" : "<p>Contains the arguments provided for the process.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.ProcessException.message"
        "comment" : "<p>Contains the system message for the process exception if any.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "errorCode" : 
        "name" : "errorCode"
        "qualifiedname" : "dart.io.ProcessException.errorCode"
        "comment" : "<p>Contains the OS error code for the process exception if any.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "ProcessException" : 
        "name" : "ProcessException"
        "qualifiedname" : "dart.io.ProcessException.ProcessException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "executable" : 
            "name" : "executable"
            "qualifiedname" : "dart.io.ProcessException.ProcessException#executable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "arguments" : 
            "name" : "arguments"
            "qualifiedname" : "dart.io.ProcessException.ProcessException#arguments"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.ProcessException.ProcessException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "errorCode" : 
            "name" : "errorCode"
            "qualifiedname" : "dart.io.ProcessException.ProcessException#errorCode"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.ProcessException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "ProcessSignal" : 
    "name" : "ProcessSignal"
    "qualifiedname" : "dart.io.ProcessSignal"
    "comment" : "<p>On Posix systems, <code>ProcessSignal</code> is used to send a specific signal to a child process, see <code>:Process.kill:</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "SIGHUP" : 
        "name" : "SIGHUP"
        "qualifiedname" : "dart.io.ProcessSignal.SIGHUP"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGINT" : 
        "name" : "SIGINT"
        "qualifiedname" : "dart.io.ProcessSignal.SIGINT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGQUIT" : 
        "name" : "SIGQUIT"
        "qualifiedname" : "dart.io.ProcessSignal.SIGQUIT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGILL" : 
        "name" : "SIGILL"
        "qualifiedname" : "dart.io.ProcessSignal.SIGILL"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGTRAP" : 
        "name" : "SIGTRAP"
        "qualifiedname" : "dart.io.ProcessSignal.SIGTRAP"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGABRT" : 
        "name" : "SIGABRT"
        "qualifiedname" : "dart.io.ProcessSignal.SIGABRT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGBUS" : 
        "name" : "SIGBUS"
        "qualifiedname" : "dart.io.ProcessSignal.SIGBUS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGFPE" : 
        "name" : "SIGFPE"
        "qualifiedname" : "dart.io.ProcessSignal.SIGFPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGKILL" : 
        "name" : "SIGKILL"
        "qualifiedname" : "dart.io.ProcessSignal.SIGKILL"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGUSR1" : 
        "name" : "SIGUSR1"
        "qualifiedname" : "dart.io.ProcessSignal.SIGUSR1"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGSEGV" : 
        "name" : "SIGSEGV"
        "qualifiedname" : "dart.io.ProcessSignal.SIGSEGV"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGUSR2" : 
        "name" : "SIGUSR2"
        "qualifiedname" : "dart.io.ProcessSignal.SIGUSR2"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGPIPE" : 
        "name" : "SIGPIPE"
        "qualifiedname" : "dart.io.ProcessSignal.SIGPIPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGALRM" : 
        "name" : "SIGALRM"
        "qualifiedname" : "dart.io.ProcessSignal.SIGALRM"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGTERM" : 
        "name" : "SIGTERM"
        "qualifiedname" : "dart.io.ProcessSignal.SIGTERM"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGCHLD" : 
        "name" : "SIGCHLD"
        "qualifiedname" : "dart.io.ProcessSignal.SIGCHLD"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGCONT" : 
        "name" : "SIGCONT"
        "qualifiedname" : "dart.io.ProcessSignal.SIGCONT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGSTOP" : 
        "name" : "SIGSTOP"
        "qualifiedname" : "dart.io.ProcessSignal.SIGSTOP"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGTSTP" : 
        "name" : "SIGTSTP"
        "qualifiedname" : "dart.io.ProcessSignal.SIGTSTP"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGTTIN" : 
        "name" : "SIGTTIN"
        "qualifiedname" : "dart.io.ProcessSignal.SIGTTIN"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGTTOU" : 
        "name" : "SIGTTOU"
        "qualifiedname" : "dart.io.ProcessSignal.SIGTTOU"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGURG" : 
        "name" : "SIGURG"
        "qualifiedname" : "dart.io.ProcessSignal.SIGURG"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGXCPU" : 
        "name" : "SIGXCPU"
        "qualifiedname" : "dart.io.ProcessSignal.SIGXCPU"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGXFSZ" : 
        "name" : "SIGXFSZ"
        "qualifiedname" : "dart.io.ProcessSignal.SIGXFSZ"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGVTALRM" : 
        "name" : "SIGVTALRM"
        "qualifiedname" : "dart.io.ProcessSignal.SIGVTALRM"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGPROF" : 
        "name" : "SIGPROF"
        "qualifiedname" : "dart.io.ProcessSignal.SIGPROF"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGPOLL" : 
        "name" : "SIGPOLL"
        "qualifiedname" : "dart.io.ProcessSignal.SIGPOLL"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "SIGSYS" : 
        "name" : "SIGSYS"
        "qualifiedname" : "dart.io.ProcessSignal.SIGSYS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.io.ProcessSignal"
      "_signalNumber" : 
        "name" : "_signalNumber"
        "qualifiedname" : "dart.io.ProcessSignal._signalNumber"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "ProcessSignal._signal" : 
        "name" : "ProcessSignal._signal"
        "qualifiedname" : "dart.io.ProcessSignal.ProcessSignal._signal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_signalNumber" : 
            "name" : "_signalNumber"
            "qualifiedname" : "dart.io.ProcessSignal.ProcessSignal._signal#_signalNumber"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "ProcessResult" : 
    "name" : "ProcessResult"
    "qualifiedname" : "dart.io.ProcessResult"
    "comment" : "<p><code>ProcessResult</code> represents the result of running a non-interactive process started with <code>:Process.run:</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "exitCode" : 
        "name" : "exitCode"
        "qualifiedname" : "dart.io.ProcessResult.exitCode"
        "comment" : "<p>Exit code for the process.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "stdout" : 
        "name" : "stdout"
        "qualifiedname" : "dart.io.ProcessResult.stdout"
        "comment" : "<p>Standard output from the process. The value used for the <code>stdoutEncoding</code> argument to <code>Process.run</code> determins the type. If <code>null</code> was used this value is of type <code>List&lt;int&gt; otherwise it is of type </code>String`.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "stderr" : 
        "name" : "stderr"
        "qualifiedname" : "dart.io.ProcessResult.stderr"
        "comment" : "<p>Standard error from the process. The value used for the <code>stderrEncoding</code> argument to <code>Process.run</code> determins the type. If <code>null</code> was used this value is of type <code>List&lt;int&gt; otherwise it is of type </code>String`.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "pid" : 
        "name" : "pid"
        "qualifiedname" : "dart.io.ProcessResult.pid"
        "comment" : "<p>Process id from the process.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
  "Process" : 
    "name" : "Process"
    "qualifiedname" : "dart.io.Process"
    "comment" : "<p><code>Process</code> is used to start new processes using the static <code>start</code> and <code>run</code> methods.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "exitCode" : 
        "name" : "exitCode"
        "qualifiedname" : "dart.io.Process.exitCode"
        "comment" : "<p>Returns a <code>:Future:</code> which completes with the exit code of the process when the process completes.</p> <p>Throws an <code>UnsupportedError</code> if the process is non-interactive.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Future"
    "methods" : 
      "start" : 
        "name" : "start"
        "qualifiedname" : "dart.io.Process.start"
        "comment" : "<p>Starts a process running the <code>executable</code> with the specified <code>arguments</code>. Returns a [:Future<Process>:] that completes with a Process instance when the process has been successfully started. That <code>Process</code> object can be used to interact with the process. If the process cannot be started the returned <code>Future</code> completes with an exception.</p> <p>Use <code>workingDirectory</code> to set the working directory for the process. Note that the change of directory occurs before executing the process on some platforms, which may have impact when using relative paths for the executable and the arguments.</p> <p>Use <code>environment</code> to set the environment variables for the process. If not set the environment of the parent process is inherited. Currently, only US-ASCII environment variables are supported and errors are likely to occur if an environment variable with code-points outside the US-ASCII range is passed in.</p> <p>If <code>includeParentEnvironment</code> is <code>true</code>, the process's environment will include the parent process's environment, with <code>environment</code> taking precedence. Default is <code>true</code>.</p> <p>If <code>runInShell</code> is true, the process will be spawned through a system shell. On Linux and Mac OS, <code>:/bin/sh:</code> is used, while <code>:%WINDIR%\\system32\\cmd.exe:</code> is used on Windows.</p> <p>Users must read all data coming on the <code>stdout</code> and <code>stderr</code> streams of processes started with <code>:Process.start:</code>. If the user does not read all data on the streams the underlying system resources will not be freed since there is still pending data.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "executable" : 
            "name" : "executable"
            "qualifiedname" : "dart.io.Process.start#executable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "arguments" : 
            "name" : "arguments"
            "qualifiedname" : "dart.io.Process.start#arguments"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "workingDirectory" : 
            "name" : "workingDirectory"
            "qualifiedname" : "dart.io.Process.start#workingDirectory"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "environment" : 
            "name" : "environment"
            "qualifiedname" : "dart.io.Process.start#environment"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "includeParentEnvironment" : 
            "name" : "includeParentEnvironment"
            "qualifiedname" : "dart.io.Process.start#includeParentEnvironment"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
          "runInShell" : 
            "name" : "runInShell"
            "qualifiedname" : "dart.io.Process.start#runInShell"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "run" : 
        "name" : "run"
        "qualifiedname" : "dart.io.Process.run"
        "comment" : "<p>Starts a process and runs it non-interactively to completion. The process run is <code>executable</code> with the specified <code>arguments</code>.</p> <p>Use <code>workingDirectory</code> to set the working directory for the process. Note that the change of directory occurs before executing the process on some platforms, which may have impact when using relative paths for the executable and the arguments.</p> <p>Use <code>environment</code> to set the environment variables for the process. If not set the environment of the parent process is inherited. Currently, only US-ASCII environment variables are supported and errors are likely to occur if an environment variable with code-points outside the US-ASCII range is passed in.</p> <p>If <code>includeParentEnvironment</code> is <code>true</code>, the process's environment will include the parent process's environment, with <code>environment</code> taking precedence. Default is <code>true</code>.</p> <p>If <code>runInShell</code> is true, the process will be spawned through a system shell. On Linux and Mac OS, <code>/bin/sh</code> is used, while <code>%WINDIR%\\system32\\cmd.exe</code> is used on Windows.</p> <p>The encoding used for decoding <code>stdout</code> and <code>stderr</code> into text is controlled through <code>stdoutEncoding</code> and <code>stderrEncoding</code>. The default encoding is <code>Encoding.SYSTEM</code>. If <code>null</code> is used no decoding will happen and the <code>ProcessResult</code> will hold binary data.</p> <p>Returns a <code>Future&lt;ProcessResult&gt;</code> that completes with the result of running the process, i.e., exit code, standard out and standard in.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "executable" : 
            "name" : "executable"
            "qualifiedname" : "dart.io.Process.run#executable"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "arguments" : 
            "name" : "arguments"
            "qualifiedname" : "dart.io.Process.run#arguments"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "workingDirectory" : 
            "name" : "workingDirectory"
            "qualifiedname" : "dart.io.Process.run#workingDirectory"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "environment" : 
            "name" : "environment"
            "qualifiedname" : "dart.io.Process.run#environment"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "includeParentEnvironment" : 
            "name" : "includeParentEnvironment"
            "qualifiedname" : "dart.io.Process.run#includeParentEnvironment"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
          "runInShell" : 
            "name" : "runInShell"
            "qualifiedname" : "dart.io.Process.run#runInShell"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "stdoutEncoding" : 
            "name" : "stdoutEncoding"
            "qualifiedname" : "dart.io.Process.run#stdoutEncoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.SYSTEM"
          "stderrEncoding" : 
            "name" : "stderrEncoding"
            "qualifiedname" : "dart.io.Process.run#stderrEncoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.SYSTEM"
      "stdout" : 
        "name" : "stdout"
        "qualifiedname" : "dart.io.Process.stdout"
        "comment" : "<p>Returns the standard output stream of the process as a <code>:Stream:</code>.</p> <p>Throws an <code>UnsupportedError</code> if the process is non-interactive.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
      "stderr" : 
        "name" : "stderr"
        "qualifiedname" : "dart.io.Process.stderr"
        "comment" : "<p>Returns the standard error stream of the process as a <code>:Stream:</code>.</p> <p>Throws an <code>UnsupportedError</code> if the process is non-interactive.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
      "stdin" : 
        "name" : "stdin"
        "qualifiedname" : "dart.io.Process.stdin"
        "comment" : "<p>Returns the standard input stream of the process as an <code>IOSink</code>.</p> <p>Throws an <code>UnsupportedError</code> if the process is non-interactive.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.IOSink"
        "parameters" : 
      "pid" : 
        "name" : "pid"
        "qualifiedname" : "dart.io.Process.pid"
        "comment" : "<p>Returns the process id of the process.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "kill" : 
        "name" : "kill"
        "qualifiedname" : "dart.io.Process.kill"
        "comment" : "<p>On Windows, <code>kill</code> kills the process, ignoring the <code>signal</code> flag. On Posix systems, <code>kill</code> sends <code>signal</code> to the process. Depending on the signal giving, it'll have different meanings. When the process terminates as a result of calling [kill] [onExit] is called.</p> <p>Returns <code>:true:</code> if the process is successfully killed (the signal is successfully sent). Returns <code>:false:</code> if the process could not be killed (the signal could not be sent). Usually, a <code>:false:</code> return value from kill means that the process is already dead.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "signal" : 
            "name" : "signal"
            "qualifiedname" : "dart.io.Process.kill#signal"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.ProcessSignal"
            "value" : "ProcessSignal.SIGTERM"
  "_ProcessUtils" : 
    "name" : "_ProcessUtils"
    "qualifiedname" : "dart.io._ProcessUtils"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_exit" : 
        "name" : "_exit"
        "qualifiedname" : "dart.io._ProcessUtils._exit"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "status" : 
            "name" : "status"
            "qualifiedname" : "dart.io._ProcessUtils._exit#status"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_setExitCode" : 
        "name" : "_setExitCode"
        "qualifiedname" : "dart.io._ProcessUtils._setExitCode"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "status" : 
            "name" : "status"
            "qualifiedname" : "dart.io._ProcessUtils._setExitCode#status"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_sleep" : 
        "name" : "_sleep"
        "qualifiedname" : "dart.io._ProcessUtils._sleep"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "millis" : 
            "name" : "millis"
            "qualifiedname" : "dart.io._ProcessUtils._sleep#millis"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_pid" : 
        "name" : "_pid"
        "qualifiedname" : "dart.io._ProcessUtils._pid"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "process" : 
            "name" : "process"
            "qualifiedname" : "dart.io._ProcessUtils._pid#process"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Process"
            "value" : "null"
  "_CaseInsensitiveStringMap" : 
    "name" : "_CaseInsensitiveStringMap"
    "qualifiedname" : "dart.io._CaseInsensitiveStringMap"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Map"
    "variables" : 
      "_map" : 
        "name" : "_map"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap._map"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Map"
    "methods" : 
      "_CaseInsensitiveStringMap" : 
        "name" : "_CaseInsensitiveStringMap"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap._CaseInsensitiveStringMap"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_CaseInsensitiveStringMap.from" : 
        "name" : "_CaseInsensitiveStringMap.from"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap._CaseInsensitiveStringMap.from"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap._CaseInsensitiveStringMap.from#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "containsKey" : 
        "name" : "containsKey"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.containsKey"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.containsKey#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "containsValue" : 
        "name" : "containsValue"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.containsValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.containsValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dart.io._CaseInsensitiveStringMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.[]#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "[]=" : 
        "name" : "[]="
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.[]="
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.[]=#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.[]=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._CaseInsensitiveStringMap.V"
            "value" : "null"
      "putIfAbsent" : 
        "name" : "putIfAbsent"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.putIfAbsent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._CaseInsensitiveStringMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.putIfAbsent#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "ifAbsent" : 
            "name" : "ifAbsent"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.putIfAbsent#ifAbsent"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.addAll#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._CaseInsensitiveStringMap.V"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.remove#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io._CaseInsensitiveStringMap.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "keys" : 
        "name" : "keys"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.keys"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "values" : 
        "name" : "values"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.values"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.io._CaseInsensitiveStringMap.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "_Platform" : 
    "name" : "_Platform"
    "qualifiedname" : "dart.io._Platform"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_numberOfProcessors" : 
        "name" : "_numberOfProcessors"
        "qualifiedname" : "dart.io._Platform._numberOfProcessors"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
      "_pathSeparator" : 
        "name" : "_pathSeparator"
        "qualifiedname" : "dart.io._Platform._pathSeparator"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "_operatingSystem" : 
        "name" : "_operatingSystem"
        "qualifiedname" : "dart.io._Platform._operatingSystem"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "_localHostname" : 
        "name" : "_localHostname"
        "qualifiedname" : "dart.io._Platform._localHostname"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
      "_environment" : 
        "name" : "_environment"
        "qualifiedname" : "dart.io._Platform._environment"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
      "_version" : 
        "name" : "_version"
        "qualifiedname" : "dart.io._Platform._version"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "numberOfProcessors" : 
        "name" : "numberOfProcessors"
        "qualifiedname" : "dart.io._Platform.numberOfProcessors"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
      "pathSeparator" : 
        "name" : "pathSeparator"
        "qualifiedname" : "dart.io._Platform.pathSeparator"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "operatingSystem" : 
        "name" : "operatingSystem"
        "qualifiedname" : "dart.io._Platform.operatingSystem"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "localHostname" : 
        "name" : "localHostname"
        "qualifiedname" : "dart.io._Platform.localHostname"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "environment" : 
        "name" : "environment"
        "qualifiedname" : "dart.io._Platform.environment"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.Map"
        "parameters" : 
      "version" : 
        "name" : "version"
        "qualifiedname" : "dart.io._Platform.version"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
  "Platform" : 
    "name" : "Platform"
    "qualifiedname" : "dart.io.Platform"
    "comment" : "<p>The <code>Platform</code> class exposes details of the machine and operating system.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_numberOfProcessors" : 
        "name" : "_numberOfProcessors"
        "qualifiedname" : "dart.io.Platform._numberOfProcessors"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dynamic"
      "_pathSeparator" : 
        "name" : "_pathSeparator"
        "qualifiedname" : "dart.io.Platform._pathSeparator"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dynamic"
      "_operatingSystem" : 
        "name" : "_operatingSystem"
        "qualifiedname" : "dart.io.Platform._operatingSystem"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dynamic"
      "_localHostname" : 
        "name" : "_localHostname"
        "qualifiedname" : "dart.io.Platform._localHostname"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dynamic"
      "_version" : 
        "name" : "_version"
        "qualifiedname" : "dart.io.Platform._version"
        "comment" : ""
        "final" : "true"
        "static" : "true"
        "type" : "dynamic"
      "_nativeExecutable" : 
        "name" : "_nativeExecutable"
        "qualifiedname" : "dart.io.Platform._nativeExecutable"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.String"
      "_nativeScript" : 
        "name" : "_nativeScript"
        "qualifiedname" : "dart.io.Platform._nativeScript"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.String"
    "methods" : 
      "numberOfProcessors" : 
        "name" : "numberOfProcessors"
        "qualifiedname" : "dart.io.Platform.numberOfProcessors"
        "comment" : "<p>Get the number of processors of the machine.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
      "pathSeparator" : 
        "name" : "pathSeparator"
        "qualifiedname" : "dart.io.Platform.pathSeparator"
        "comment" : "<p>Get the path separator used by the operating system to separate components in file paths.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "operatingSystem" : 
        "name" : "operatingSystem"
        "qualifiedname" : "dart.io.Platform.operatingSystem"
        "comment" : "<p>Get a string (<code>linux</code>, <code>macos</code>, <code>windows</code> or <code>android</code>) representing the operating system.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "localHostname" : 
        "name" : "localHostname"
        "qualifiedname" : "dart.io.Platform.localHostname"
        "comment" : "<p>Get the local hostname for the system.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "isLinux" : 
        "name" : "isLinux"
        "qualifiedname" : "dart.io.Platform.isLinux"
        "comment" : "<p>Returns true if the operating system is Linux.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
      "isMacOS" : 
        "name" : "isMacOS"
        "qualifiedname" : "dart.io.Platform.isMacOS"
        "comment" : "<p>Returns true if the operating system is Mac OS.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
      "isWindows" : 
        "name" : "isWindows"
        "qualifiedname" : "dart.io.Platform.isWindows"
        "comment" : "<p>Returns true if the operating system is Windows.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
      "isAndroid" : 
        "name" : "isAndroid"
        "qualifiedname" : "dart.io.Platform.isAndroid"
        "comment" : "<p>Returns true if the operating system is Android.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
      "environment" : 
        "name" : "environment"
        "qualifiedname" : "dart.io.Platform.environment"
        "comment" : "<p>Get the environment for this process.</p> <p>Environment variables on Windows are case-insensitive. The map returned on Windows is therefore case-insensitive and will convert all keys to upper case. On other platforms the returned map is a standard case-sensitive map.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.Map"
        "parameters" : 
      "executable" : 
        "name" : "executable"
        "qualifiedname" : "dart.io.Platform.executable"
        "comment" : "<p>Returns the path of the executable used to run the script in this isolate.</p> <p>If the execution environment does not support <code>executable</code> an empty string is returned.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "script" : 
        "name" : "script"
        "qualifiedname" : "dart.io.Platform.script"
        "comment" : "<p>Returns the path of the script being run in this isolate.</p> <p>If the executable environment does not support <code>script</code> an empty string is returned.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "version" : 
        "name" : "version"
        "qualifiedname" : "dart.io.Platform.version"
        "comment" : "<p>Returns the version of the current Dart runtime.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
  "_Path" : 
    "name" : "_Path"
    "qualifiedname" : "dart.io._Path"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Path"
    "variables" : 
      "_path" : 
        "name" : "_path"
        "qualifiedname" : "dart.io._Path._path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "isWindowsShare" : 
        "name" : "isWindowsShare"
        "qualifiedname" : "dart.io._Path.isWindowsShare"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_Path" : 
        "name" : "_Path"
        "qualifiedname" : "dart.io._Path._Path"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io._Path._Path#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_Path.raw" : 
        "name" : "_Path.raw"
        "qualifiedname" : "dart.io._Path._Path.raw"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io._Path._Path.raw#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_Path._internal" : 
        "name" : "_Path._internal"
        "qualifiedname" : "dart.io._Path._Path._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_path" : 
            "name" : "_path"
            "qualifiedname" : "dart.io._Path._Path._internal#_path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "isWindowsShare" : 
            "name" : "isWindowsShare"
            "qualifiedname" : "dart.io._Path._Path._internal#isWindowsShare"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_clean" : 
        "name" : "_clean"
        "qualifiedname" : "dart.io._Path._clean"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io._Path._clean#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_cleanWindows" : 
        "name" : "_cleanWindows"
        "qualifiedname" : "dart.io._Path._cleanWindows"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io._Path._cleanWindows#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_isWindowsShare" : 
        "name" : "_isWindowsShare"
        "qualifiedname" : "dart.io._Path._isWindowsShare"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io._Path._isWindowsShare#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "hashCode" : 
        "name" : "hashCode"
        "qualifiedname" : "dart.io._Path.hashCode"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.io._Path.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isAbsolute" : 
        "name" : "isAbsolute"
        "qualifiedname" : "dart.io._Path.isAbsolute"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "hasTrailingSeparator" : 
        "name" : "hasTrailingSeparator"
        "qualifiedname" : "dart.io._Path.hasTrailingSeparator"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._Path.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "relativeTo" : 
        "name" : "relativeTo"
        "qualifiedname" : "dart.io._Path.relativeTo"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "base" : 
            "name" : "base"
            "qualifiedname" : "dart.io._Path.relativeTo#base"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "join" : 
        "name" : "join"
        "qualifiedname" : "dart.io._Path.join"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "further" : 
            "name" : "further"
            "qualifiedname" : "dart.io._Path.join#further"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "canonicalize" : 
        "name" : "canonicalize"
        "qualifiedname" : "dart.io._Path.canonicalize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
      "isCanonical" : 
        "name" : "isCanonical"
        "qualifiedname" : "dart.io._Path.isCanonical"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "makeCanonical" : 
        "name" : "makeCanonical"
        "qualifiedname" : "dart.io._Path.makeCanonical"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
      "toNativePath" : 
        "name" : "toNativePath"
        "qualifiedname" : "dart.io._Path.toNativePath"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "segments" : 
        "name" : "segments"
        "qualifiedname" : "dart.io._Path.segments"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "append" : 
        "name" : "append"
        "qualifiedname" : "dart.io._Path.append"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "finalSegment" : 
            "name" : "finalSegment"
            "qualifiedname" : "dart.io._Path.append#finalSegment"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "filenameWithoutExtension" : 
        "name" : "filenameWithoutExtension"
        "qualifiedname" : "dart.io._Path.filenameWithoutExtension"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "extension" : 
        "name" : "extension"
        "qualifiedname" : "dart.io._Path.extension"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "directoryPath" : 
        "name" : "directoryPath"
        "qualifiedname" : "dart.io._Path.directoryPath"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
      "filename" : 
        "name" : "filename"
        "qualifiedname" : "dart.io._Path.filename"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "Path" : 
    "name" : "Path"
    "qualifiedname" : "dart.io.Path"
    "comment" : "<p>A Path is an immutable wrapper of a String, with additional member functions for useful path manipulations and queries. On the Windows platform, Path also converts from native paths to paths using '/' as a path separator, and vice versa.</p> <p>Joining of paths and path normalization handle '.' and '..' in the usual way.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "Path" : 
        "name" : "Path"
        "qualifiedname" : "dart.io.Path.Path"
        "comment" : "<p>Creates a Path from a String that uses the native filesystem's conventions.</p> <p>On Windows, this converts '\\' to '/' and has special handling for drive letters and shares.</p> <p>If the path starts with a drive letter, like 'C:',  a '/' is added before the drive letter.</p> <pre><code>new Path(r'c:\\a\\b').toString() == '/c:/a/b' </code></pre> <p>A path starting with a drive letter is treated specially.  Backwards links ('..') cannot cancel the drive letter.</p> <p>If the path is a share path this is recorded in the Path object and maintained in operations on the Path object.</p> <pre><code>var share = new Path(r'\\\\share\\a\\b\\c'); share.isWindowsShare == true share.toString() == '/share/a/b/c' share.toNativePath() == r'\\\\share\\a\\b\\c' share.append('final').isWindowsShare == true </code></pre>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io.Path.Path#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "Path.raw" : 
        "name" : "Path.raw"
        "qualifiedname" : "dart.io.Path.Path.raw"
        "comment" : "<p>Creates a Path from the String <code>source</code>.  <code>source</code> is used as-is, so if the string does not consist of segments separated by forward slashes, the behavior may not be as expected.  Paths are immutable.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "source" : 
            "name" : "source"
            "qualifiedname" : "dart.io.Path.Path.raw#source"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.io.Path.isEmpty"
        "comment" : "<p>Is this path the empty string?</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isAbsolute" : 
        "name" : "isAbsolute"
        "qualifiedname" : "dart.io.Path.isAbsolute"
        "comment" : "<p>Is this path an absolute path, beginning with a '/'?  Note that Windows paths beginning with '\\' or with a drive letter are absolute, and a leading '/' is added when they are converted to a Path.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isWindowsShare" : 
        "name" : "isWindowsShare"
        "qualifiedname" : "dart.io.Path.isWindowsShare"
        "comment" : "<p>Is this path a Windows share path?</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "hasTrailingSeparator" : 
        "name" : "hasTrailingSeparator"
        "qualifiedname" : "dart.io.Path.hasTrailingSeparator"
        "comment" : "<p>Does this path end with a '/'?</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isCanonical" : 
        "name" : "isCanonical"
        "qualifiedname" : "dart.io.Path.isCanonical"
        "comment" : "<p>Does this path contain no consecutive '/'s, no segments that are '.' unless the path is exactly '.', and segments that are '..' only as the leading segments on a relative path?</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "canonicalize" : 
        "name" : "canonicalize"
        "qualifiedname" : "dart.io.Path.canonicalize"
        "comment" : "<p>Make a path canonical by dropping segments that are '.', cancelling segments that are '..' with preceding segments, if possible, and combining consecutive '/'s.  Leading '..' segments are kept on relative paths, and dropped from absolute paths.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
      "join" : 
        "name" : "join"
        "qualifiedname" : "dart.io.Path.join"
        "comment" : "<p>Joins the relative path <code>further</code> to this path.  Canonicalizes the resulting joined path using <code>canonicalize</code>, interpreting '.' and '..' as directory traversal commands, and removing consecutive '/'s.</p> <p>If <code>further</code> is an absolute path, an IllegalArgument exception is thrown.</p> <p>Examples:   <code>new Path('/a/b/c').join(new Path('d/e'))</code> returns the Path object   containing <code>'a/b/c/d/e'</code>.</p> <p>  <code>new Path('a/b/../c/').join(new Path('d/./e//')</code> returns the Path   containing <code>'a/c/d/e/'</code>.</p> <p>  <code>new Path('a/b/c').join(new Path('d/../../e')</code> returns the Path   containing <code>'a/b/e'</code>.</p> <p>Note that the join operation does not drop the last segment of the base path, the way URL joining does.  To join basepath to further using URL semantics, use    <code>:basepath.directoryPath.join(further):</code>.</p> <p>If you want to avoid joins that traverse parent directories in the base, you can check whether <code>further.canonicalize()</code> starts with '../' or equals '..'.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "further" : 
            "name" : "further"
            "qualifiedname" : "dart.io.Path.join#further"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "relativeTo" : 
        "name" : "relativeTo"
        "qualifiedname" : "dart.io.Path.relativeTo"
        "comment" : "<p>Returns a path <code>:relative:</code> such that    <code>:base.join(relative) == this.canonicalize():</code>. Throws an exception if such a path is impossible. For example, if <code>base</code> is '../../a/b' and <code>this</code> is '.'. The computation is independent of the file system and current directory.</p> <p>To compute a relative path using URL semantics, where the final path component of the base is dropped unless it ends with a slash, call <code>: a.relativeTo(b.directoryPath) :</code> instead of <code>: a.relativeTo(b) :</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "base" : 
            "name" : "base"
            "qualifiedname" : "dart.io.Path.relativeTo#base"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "toNativePath" : 
        "name" : "toNativePath"
        "qualifiedname" : "dart.io.Path.toNativePath"
        "comment" : "<p>Converts a path to a string using the native filesystem's conventions.</p> <p>Always returns '.' if the path is empty. On Windows, converts '/'s to backwards slashes, and removes the leading '/' if the path starts with a drive specification. For most valid Windows paths, this should be the inverse of the conversion that the constructor new Path() performs.  If the path is a Windows share, restores the '\\\\' at the start of the path.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.Path.toString"
        "comment" : "<p>Returns the path as a string.  If this path is constructed using new Path.raw(), or new Path() on a non-Windows system, the returned value is the original string argument to the constructor.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "segments" : 
        "name" : "segments"
        "qualifiedname" : "dart.io.Path.segments"
        "comment" : "<p>Gets the segments of a Path. The segments are just the result of splitting the path on any '/' characters, except that a '/' at the beginning does not create an empty segment before it, and a '/' at the end does not create an empty segment after it.</p> <pre><code>new Path('/a/b/c/d').segments() == ['a', 'b', 'c', d']; new Path(' foo bar //../') == [' foo bar ', '', '..']; </code></pre>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "append" : 
        "name" : "append"
        "qualifiedname" : "dart.io.Path.append"
        "comment" : "<p>Appends <code>finalSegment</code> to a path as a new segment.  Adds a '/' between the path and <code>finalSegment</code> if the path does not already end in a '/'.  The path is not canonicalized, and <code>finalSegment</code> may contain '/'s.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
          "finalSegment" : 
            "name" : "finalSegment"
            "qualifiedname" : "dart.io.Path.append#finalSegment"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "directoryPath" : 
        "name" : "directoryPath"
        "qualifiedname" : "dart.io.Path.directoryPath"
        "comment" : "<p>Drops the final '/' and whatever follows it from this Path, and returns the resulting Path object.  If the only '/' in this Path is the first character, returns '/' instead of the empty string. If there is no '/' in the Path, returns the empty string.</p> <pre><code>new Path('../images/dot.gif').directoryPath == '../images' new Path('/usr/geoffrey/www/').directoryPath == '/usr/geoffrey/www' new Path('lost_file_old').directoryPath == '' new Path('/src').directoryPath == '/' Note: new Path('/D:/src').directoryPath == '/D:' </code></pre>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Path"
        "parameters" : 
      "filename" : 
        "name" : "filename"
        "qualifiedname" : "dart.io.Path.filename"
        "comment" : "<p>The part of the path after the last '/', or the entire path if it contains no '/'.</p> <pre><code>new Path('images/DSC_0027.jpg).filename == 'DSC_0027.jpg' new Path('users/fred/').filename == '' </code></pre>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "filenameWithoutExtension" : 
        "name" : "filenameWithoutExtension"
        "qualifiedname" : "dart.io.Path.filenameWithoutExtension"
        "comment" : "<p>The part of <code>filename</code> before the last '.', or the entire filename if it contains no '.'.  If <code>filename</code> is '.' or '..' it is unchanged.</p> <pre><code>new Path('/c:/My Documents/Heidi.txt').filenameWithoutExtension would return 'Heidi'. new Path('not what I would call a path').filenameWithoutExtension would return 'not what I would call a path'. </code></pre>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "extension" : 
        "name" : "extension"
        "qualifiedname" : "dart.io.Path.extension"
        "comment" : "<p>The part of <code>filename</code> after the last '.', or '' if <code>filename</code> contains no '.'.  If <code>filename</code> is '.' or '..', returns ''.</p> <pre><code>new Path('tiger.svg').extension == 'svg' new Path('/src/dart/dart_secrets').extension == '' </code></pre>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_OptionsImpl" : 
    "name" : "_OptionsImpl"
    "qualifiedname" : "dart.io._OptionsImpl"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Options"
    "variables" : 
      "_arguments" : 
        "name" : "_arguments"
        "qualifiedname" : "dart.io._OptionsImpl._arguments"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_nativeArguments" : 
        "name" : "_nativeArguments"
        "qualifiedname" : "dart.io._OptionsImpl._nativeArguments"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.List"
    "methods" : 
      "arguments" : 
        "name" : "arguments"
        "qualifiedname" : "dart.io._OptionsImpl.arguments"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "executable" : 
        "name" : "executable"
        "qualifiedname" : "dart.io._OptionsImpl.executable"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "script" : 
        "name" : "script"
        "qualifiedname" : "dart.io._OptionsImpl.script"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "version" : 
        "name" : "version"
        "qualifiedname" : "dart.io._OptionsImpl.version"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "Options" : 
    "name" : "Options"
    "qualifiedname" : "dart.io.Options"
    "comment" : "<p>The Options object allows accessing the arguments which have been passed to the current isolate.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "Options" : 
        "name" : "Options"
        "qualifiedname" : "dart.io.Options.Options"
        "comment" : "<p>A newly constructed Options object contains the arguments exactly as they have been passed to the isolate.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Options"
        "parameters" : 
      "arguments" : 
        "name" : "arguments"
        "qualifiedname" : "dart.io.Options.arguments"
        "comment" : "<p>Returns a list of arguments that have been passed to this isolate. Any modifications to the list will be contained to the options object owning this list.</p> <p>If the execution environment does not support <code>arguments</code> an empty list is returned.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "executable" : 
        "name" : "executable"
        "qualifiedname" : "dart.io.Options.executable"
        "comment" : "<p>Returns the path of the executable used to run the script in this isolate.</p> <p>If the execution environment does not support <code>executable</code> an empty string is returned.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "script" : 
        "name" : "script"
        "qualifiedname" : "dart.io.Options.script"
        "comment" : "<p>Returns the path of the script being run in this isolate.</p> <p>If the executable environment does not support <code>script</code> an empty string is returned.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "version" : 
        "name" : "version"
        "qualifiedname" : "dart.io.Options.version"
        "comment" : "<p>Returns the version of the current Dart runtime.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "MimeMultipartException" : 
    "name" : "MimeMultipartException"
    "qualifiedname" : "dart.io.MimeMultipartException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.MimeMultipartException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "MimeMultipartException" : 
        "name" : "MimeMultipartException"
        "qualifiedname" : "dart.io.MimeMultipartException.MimeMultipartException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.MimeMultipartException.MimeMultipartException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.MimeMultipartException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "MimeMultipartTransformer" : 
    "name" : "MimeMultipartTransformer"
    "qualifiedname" : "dart.io.MimeMultipartTransformer"
    "comment" : "<p>Parser for MIME multipart types of data as described in RFC 2046 section 5.1.1. The data is transformed into <code>MimeMultipart</code> objects, each of them streaming the multipart data.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamTransformer"
    "variables" : 
      "_START" : 
        "name" : "_START"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_FIRST_BOUNDARY_ENDING" : 
        "name" : "_FIRST_BOUNDARY_ENDING"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._FIRST_BOUNDARY_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_FIRST_BOUNDARY_END" : 
        "name" : "_FIRST_BOUNDARY_END"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._FIRST_BOUNDARY_END"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_BOUNDARY_ENDING" : 
        "name" : "_BOUNDARY_ENDING"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._BOUNDARY_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_BOUNDARY_END" : 
        "name" : "_BOUNDARY_END"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._BOUNDARY_END"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_START" : 
        "name" : "_HEADER_START"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_FIELD" : 
        "name" : "_HEADER_FIELD"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_FIELD"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_VALUE_START" : 
        "name" : "_HEADER_VALUE_START"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_VALUE_START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_VALUE" : 
        "name" : "_HEADER_VALUE"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_VALUE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_VALUE_FOLDING_OR_ENDING" : 
        "name" : "_HEADER_VALUE_FOLDING_OR_ENDING"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_VALUE_FOLDING_OR_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_VALUE_FOLD_OR_END" : 
        "name" : "_HEADER_VALUE_FOLD_OR_END"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_VALUE_FOLD_OR_END"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_HEADER_ENDING" : 
        "name" : "_HEADER_ENDING"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._HEADER_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_CONTENT" : 
        "name" : "_CONTENT"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._CONTENT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_LAST_BOUNDARY_DASH2" : 
        "name" : "_LAST_BOUNDARY_DASH2"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._LAST_BOUNDARY_DASH2"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_LAST_BOUNDARY_ENDING" : 
        "name" : "_LAST_BOUNDARY_ENDING"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._LAST_BOUNDARY_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_LAST_BOUNDARY_END" : 
        "name" : "_LAST_BOUNDARY_END"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._LAST_BOUNDARY_END"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_DONE" : 
        "name" : "_DONE"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._DONE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_FAILURE" : 
        "name" : "_FAILURE"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._FAILURE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_multipartController" : 
        "name" : "_multipartController"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._multipartController"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_headers" : 
        "name" : "_headers"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._headers"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Map"
      "_boundary" : 
        "name" : "_boundary"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._boundary"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_state" : 
        "name" : "_state"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._state"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_boundaryIndex" : 
        "name" : "_boundaryIndex"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._boundaryIndex"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_index" : 
        "name" : "_index"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._index"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_buffer" : 
        "name" : "_buffer"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._buffer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_headerField" : 
        "name" : "_headerField"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._headerField"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.StringBuffer"
      "_headerValue" : 
        "name" : "_headerValue"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._headerValue"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.StringBuffer"
    "methods" : 
      "MimeMultipartTransformer" : 
        "name" : "MimeMultipartTransformer"
        "qualifiedname" : "dart.io.MimeMultipartTransformer.MimeMultipartTransformer"
        "comment" : "<p>Construct a new MIME multipart parser with the boundary <code>boundary</code>. The boundary should be as specified in the content type parameter, that is without the -- prefix.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "boundary" : 
            "name" : "boundary"
            "qualifiedname" : "dart.io.MimeMultipartTransformer.MimeMultipartTransformer#boundary"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_resumeStream" : 
        "name" : "_resumeStream"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._resumeStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_pauseStream" : 
        "name" : "_pauseStream"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._pauseStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.MimeMultipartTransformer.bind"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.MimeMultipartTransformer.bind#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "_parse" : 
        "name" : "_parse"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._parse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_isTokenChar" : 
        "name" : "_isTokenChar"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._isTokenChar"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io.MimeMultipartTransformer._isTokenChar#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_toLowerCase" : 
        "name" : "_toLowerCase"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._toLowerCase"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io.MimeMultipartTransformer._toLowerCase#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_expect" : 
        "name" : "_expect"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._expect"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "val1" : 
            "name" : "val1"
            "qualifiedname" : "dart.io.MimeMultipartTransformer._expect#val1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "val2" : 
            "name" : "val2"
            "qualifiedname" : "dart.io.MimeMultipartTransformer._expect#val2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_expectWS" : 
        "name" : "_expectWS"
        "qualifiedname" : "dart.io.MimeMultipartTransformer._expectWS"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io.MimeMultipartTransformer._expectWS#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_MimeMultipart" : 
    "name" : "_MimeMultipart"
    "qualifiedname" : "dart.io._MimeMultipart"
    "comment" : ""
    "superclass" : "dart.io.MimeMultipart"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io._MimeMultipart.headers"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Map"
      "_stream" : 
        "name" : "_stream"
        "qualifiedname" : "dart.io._MimeMultipart._stream"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Stream"
    "methods" : 
      "_MimeMultipart" : 
        "name" : "_MimeMultipart"
        "qualifiedname" : "dart.io._MimeMultipart._MimeMultipart"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "headers" : 
            "name" : "headers"
            "qualifiedname" : "dart.io._MimeMultipart._MimeMultipart#headers"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
          "_stream" : 
            "name" : "_stream"
            "qualifiedname" : "dart.io._MimeMultipart._MimeMultipart#_stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._MimeMultipart.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._MimeMultipart.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._MimeMultipart.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._MimeMultipart.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._MimeMultipart.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "MimeMultipart" : 
    "name" : "MimeMultipart"
    "qualifiedname" : "dart.io.MimeMultipart"
    "comment" : "<p>A Mime Multipart class representing each part parsed by <code>MimeMultipartTransformer</code>. The data is streamed in as it become available.</p>"
    "superclass" : "dart.async.Stream"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.MimeMultipart.headers"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Map"
        "parameters" : 
  "LinkException" : 
    "name" : "LinkException"
    "qualifiedname" : "dart.io.LinkException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.LinkException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.LinkException.path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "osError" : 
        "name" : "osError"
        "qualifiedname" : "dart.io.LinkException.osError"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.OSError"
    "methods" : 
      "LinkException" : 
        "name" : "LinkException"
        "qualifiedname" : "dart.io.LinkException.LinkException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.LinkException.LinkException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.LinkException.LinkException#path"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.LinkException.LinkException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.OSError"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.LinkException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_Link" : 
    "name" : "_Link"
    "qualifiedname" : "dart.io._Link"
    "comment" : ""
    "superclass" : "dart.io.FileSystemEntity"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Link"
    "variables" : 
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._Link.path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "_fileService" : 
        "name" : "_fileService"
        "qualifiedname" : "dart.io._Link._fileService"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.isolate.SendPort"
    "methods" : 
      "_Link" : 
        "name" : "_Link"
        "qualifiedname" : "dart.io._Link._Link"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Link._Link#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_Link.fromPath" : 
        "name" : "_Link.fromPath"
        "qualifiedname" : "dart.io._Link._Link.fromPath"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "inputPath" : 
            "name" : "inputPath"
            "qualifiedname" : "dart.io._Link._Link.fromPath#inputPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._Link.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "exists" : 
        "name" : "exists"
        "qualifiedname" : "dart.io._Link.exists"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "existsSync" : 
        "name" : "existsSync"
        "qualifiedname" : "dart.io._Link.existsSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "stat" : 
        "name" : "stat"
        "qualifiedname" : "dart.io._Link.stat"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "statSync" : 
        "name" : "statSync"
        "qualifiedname" : "dart.io._Link.statSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.FileStat"
        "parameters" : 
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io._Link.create"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io._Link.create#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "createSync" : 
        "name" : "createSync"
        "qualifiedname" : "dart.io._Link.createSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io._Link.createSync#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_makeWindowsLinkTarget" : 
        "name" : "_makeWindowsLinkTarget"
        "qualifiedname" : "dart.io._Link._makeWindowsLinkTarget"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io._Link._makeWindowsLinkTarget#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "updateSync" : 
        "name" : "updateSync"
        "qualifiedname" : "dart.io._Link.updateSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io._Link.updateSync#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "linkRelative" : 
            "name" : "linkRelative"
            "qualifiedname" : "dart.io._Link.updateSync#linkRelative"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "delete" : 
        "name" : "delete"
        "qualifiedname" : "dart.io._Link.delete"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "deleteSync" : 
        "name" : "deleteSync"
        "qualifiedname" : "dart.io._Link.deleteSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io._Link.rename"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._Link.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io._Link.renameSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Link"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._Link.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "target" : 
        "name" : "target"
        "qualifiedname" : "dart.io._Link.target"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "targetSync" : 
        "name" : "targetSync"
        "qualifiedname" : "dart.io._Link.targetSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "throwIfError" : 
        "name" : "throwIfError"
        "qualifiedname" : "dart.io._Link.throwIfError"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "result" : 
            "name" : "result"
            "qualifiedname" : "dart.io._Link.throwIfError#result"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "msg" : 
            "name" : "msg"
            "qualifiedname" : "dart.io._Link.throwIfError#msg"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Link.throwIfError#path"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "_isErrorResponse" : 
        "name" : "_isErrorResponse"
        "qualifiedname" : "dart.io._Link._isErrorResponse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._Link._isErrorResponse#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_ensureFileService" : 
        "name" : "_ensureFileService"
        "qualifiedname" : "dart.io._Link._ensureFileService"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_exceptionFromResponse" : 
        "name" : "_exceptionFromResponse"
        "qualifiedname" : "dart.io._Link._exceptionFromResponse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._Link._exceptionFromResponse#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io._Link._exceptionFromResponse#message"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Link._exceptionFromResponse#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "Link" : 
    "name" : "Link"
    "qualifiedname" : "dart.io.Link"
    "comment" : "<p><code>Link</code> objects are references to filesystem links.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.FileSystemEntity"
    "variables" : 
    "methods" : 
      "Link" : 
        "name" : "Link"
        "qualifiedname" : "dart.io.Link.Link"
        "comment" : "<p>Creates a Link object.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Link"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.Link.Link#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "Link.fromPath" : 
        "name" : "Link.fromPath"
        "qualifiedname" : "dart.io.Link.Link.fromPath"
        "comment" : "<p>Creates a Link object from a Path object.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Link"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.Link.Link.fromPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io.Link.create"
        "comment" : "<p>Creates a symbolic link. Returns a [:Future<Link>:] that completes with the link when it has been created. If the link exists, the future will complete with an error.</p> <p>On the Windows platform, this will only work with directories, and the target directory must exist. The link will be created as a Junction. Only absolute links will be created, and relative paths to the target will be converted to absolute paths.</p> <p>On other platforms, the posix symlink() call is used to make a symbolic link containing the string <code>target</code>.  If <code>target</code> is a relative path, it will be interpreted relative to the directory containing the link.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io.Link.create#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "createSync" : 
        "name" : "createSync"
        "qualifiedname" : "dart.io.Link.createSync"
        "comment" : "<p>Synchronously create the link. Calling <code>createSync</code> on an existing link will throw an exception.</p> <p>On the Windows platform, this will only work with directories, and the target directory must exist. The link will be created as a Junction. Only absolute links will be created, and relative paths to the target will be converted to absolute paths.</p> <p>On other platforms, the posix symlink() call is used to make a symbolic link containing the string <code>target</code>.  If <code>target</code> is a relative path, it will be interpreted relative to the directory containing the link.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io.Link.createSync#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "updateSync" : 
        "name" : "updateSync"
        "qualifiedname" : "dart.io.Link.updateSync"
        "comment" : "<p>Synchronously updates the link. Calling <code>updateSync</code> on a non-existing link will throw an exception.</p> <p>If <code>linkRelative</code> is true, the target argument should be a relative path, and the link will interpret the target as a path relative to the link's directory.</p> <p>On the Windows platform, this will only work with directories, and the target directory must exist.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io.Link.updateSync#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "linkRelative" : 
            "name" : "linkRelative"
            "qualifiedname" : "dart.io.Link.updateSync#linkRelative"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "delete" : 
        "name" : "delete"
        "qualifiedname" : "dart.io.Link.delete"
        "comment" : "<p>Deletes the link. Returns a [:Future<Link>:] that completes with the link when it has been deleted. This does not delete, or otherwise affect, the target of the link. It also works on broken links, but if the link does not exist or is not actually a link, it completes the future with a LinkException.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "deleteSync" : 
        "name" : "deleteSync"
        "qualifiedname" : "dart.io.Link.deleteSync"
        "comment" : "<p>Synchronously deletes the link. This does not delete, or otherwise affect, the target of the link.  It also works on broken links, but if the link does not exist or is not actually a link, it throws a LinkException.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io.Link.rename"
        "comment" : "<p>Renames this link. Returns a <code>Future&lt;Link&gt;</code> that completes with a <code>Link</code> instance for the renamed link.</p> <p>If <code>newPath</code> identifies an existing link, that link is replaced. If <code>newPath</code> identifies an existing file or directory, the operation fails and the future completes with an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.Link.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io.Link.renameSync"
        "comment" : "<p>Synchronously renames this link. Returns a <code>Link</code> instance for the renamed link.</p> <p>If <code>newPath</code> identifies an existing link, that link is replaced. If <code>newPath</code> identifies an existing file or directory the operation fails and an exception is thrown.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Link"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.Link.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "target" : 
        "name" : "target"
        "qualifiedname" : "dart.io.Link.target"
        "comment" : "<p>Gets the target of the link. Returns a future that completes with the path to the target.</p> <p>If the returned target is a relative path, it is relative to the directory containing the link.</p> <p>If the link does not exist, or is not a link, the future completes with a LinkException.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "targetSync" : 
        "name" : "targetSync"
        "qualifiedname" : "dart.io.Link.targetSync"
        "comment" : "<p>Synchronously gets the target of the link. Returns the path to the target.</p> <p>If the returned target is a relative path, it is relative to the directory containing the link.</p> <p>If the link does not exist, or is not a link, throws a LinkException.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_IOSinkImpl" : 
    "name" : "_IOSinkImpl"
    "qualifiedname" : "dart.io._IOSinkImpl"
    "comment" : ""
    "superclass" : "dart.io._StreamSinkImpl"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOSink"
    "variables" : 
      "_encoding" : 
        "name" : "_encoding"
        "qualifiedname" : "dart.io._IOSinkImpl._encoding"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.Encoding"
      "_encodingMutable" : 
        "name" : "_encodingMutable"
        "qualifiedname" : "dart.io._IOSinkImpl._encodingMutable"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_IOSinkImpl" : 
        "name" : "_IOSinkImpl"
        "qualifiedname" : "dart.io._IOSinkImpl._IOSinkImpl"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io._IOSinkImpl._IOSinkImpl#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.StreamConsumer"
            "value" : "null"
          "_encoding" : 
            "name" : "_encoding"
            "qualifiedname" : "dart.io._IOSinkImpl._IOSinkImpl#_encoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io._IOSinkImpl.encoding"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Encoding"
        "parameters" : 
      "encoding=" : 
        "name" : "encoding="
        "qualifiedname" : "dart.io._IOSinkImpl.encoding="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._IOSinkImpl.encoding=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._IOSinkImpl.write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "obj" : 
            "name" : "obj"
            "qualifiedname" : "dart.io._IOSinkImpl.write#obj"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "writeAll" : 
        "name" : "writeAll"
        "qualifiedname" : "dart.io._IOSinkImpl.writeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objects" : 
            "name" : "objects"
            "qualifiedname" : "dart.io._IOSinkImpl.writeAll#objects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.io._IOSinkImpl.writeAll#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "writeln" : 
        "name" : "writeln"
        "qualifiedname" : "dart.io._IOSinkImpl.writeln"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "obj" : 
            "name" : "obj"
            "qualifiedname" : "dart.io._IOSinkImpl.writeln#obj"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.Object"
            "value" : "\"\""
      "writeCharCode" : 
        "name" : "writeCharCode"
        "qualifiedname" : "dart.io._IOSinkImpl.writeCharCode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "charCode" : 
            "name" : "charCode"
            "qualifiedname" : "dart.io._IOSinkImpl.writeCharCode#charCode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_StreamSinkImpl" : 
    "name" : "_StreamSinkImpl"
    "qualifiedname" : "dart.io._StreamSinkImpl"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamSink"
    "variables" : 
      "_target" : 
        "name" : "_target"
        "qualifiedname" : "dart.io._StreamSinkImpl._target"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.StreamConsumer"
      "_doneCompleter" : 
        "name" : "_doneCompleter"
        "qualifiedname" : "dart.io._StreamSinkImpl._doneCompleter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_doneFuture" : 
        "name" : "_doneFuture"
        "qualifiedname" : "dart.io._StreamSinkImpl._doneFuture"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Future"
      "_controllerInstance" : 
        "name" : "_controllerInstance"
        "qualifiedname" : "dart.io._StreamSinkImpl._controllerInstance"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_controllerCompleter" : 
        "name" : "_controllerCompleter"
        "qualifiedname" : "dart.io._StreamSinkImpl._controllerCompleter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_isClosed" : 
        "name" : "_isClosed"
        "qualifiedname" : "dart.io._StreamSinkImpl._isClosed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_isBound" : 
        "name" : "_isBound"
        "qualifiedname" : "dart.io._StreamSinkImpl._isBound"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_StreamSinkImpl" : 
        "name" : "_StreamSinkImpl"
        "qualifiedname" : "dart.io._StreamSinkImpl._StreamSinkImpl"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_target" : 
            "name" : "_target"
            "qualifiedname" : "dart.io._StreamSinkImpl._StreamSinkImpl#_target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.StreamConsumer"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._StreamSinkImpl.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._StreamSinkImpl.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._StreamSinkImpl.T"
            "value" : "null"
      "addError" : 
        "name" : "addError"
        "qualifiedname" : "dart.io._StreamSinkImpl.addError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._StreamSinkImpl.addError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._StreamSinkImpl.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._StreamSinkImpl.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._StreamSinkImpl.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_closeTarget" : 
        "name" : "_closeTarget"
        "qualifiedname" : "dart.io._StreamSinkImpl._closeTarget"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._StreamSinkImpl.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_completeDone" : 
        "name" : "_completeDone"
        "qualifiedname" : "dart.io._StreamSinkImpl._completeDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._StreamSinkImpl._completeDone#value"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._StreamSinkImpl._completeDone#error"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._StreamSinkImpl._controller"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.StreamController"
        "parameters" : 
  "IOSink" : 
    "name" : "IOSink"
    "qualifiedname" : "dart.io.IOSink"
    "comment" : "<p>Helper class to wrap a [StreamConsumer<List<int>>] and provide utility functions for writing to the StreamConsumer directly. The <code>IOSink</code> buffers the input given by all <code>StringSink</code> methods and will delay a <code>addStream</code> until the buffer is flushed.</p> <p>When the <code>IOSink</code> is bound to a stream (through <code>addStream</code>) any call to the <code>IOSink</code> will throw a <code>StateError</code>. When the <code>addStream</code> compeltes, the <code>IOSink</code> will again be open for all calls.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.StringSink"
      - "dart.async.StreamSink"
    "variables" : 
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io.IOSink.encoding"
        "comment" : "<p>The <code>Encoding</code> used when writing strings. Depending on the underlying consumer this property might be mutable.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.Encoding"
    "methods" : 
      "IOSink" : 
        "name" : "IOSink"
        "qualifiedname" : "dart.io.IOSink.IOSink"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.IOSink"
        "parameters" : 
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io.IOSink.IOSink#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.StreamConsumer"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.IOSink.IOSink#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io.IOSink.add"
        "comment" : "<p>Writes the bytes uninterpreted to the consumer. While the call is synchronous, the data may be buffered until the underlying resource is ready. The data should not be modified after a call to <code>add</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io.IOSink.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "addError" : 
        "name" : "addError"
        "qualifiedname" : "dart.io.IOSink.addError"
        "comment" : "<p>Writes an error to the consumer.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io.IOSink.addError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io.IOSink.addStream"
        "comment" : "<p>Adds all elements of the given <code>stream</code> to <code>this</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.IOSink.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.IOSink.close"
        "comment" : "<p>Close the target.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io.IOSink.done"
        "comment" : "<p>Get a future that will complete when all synchronous have completed, or an error happened. This future is identical to the future returned from close.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_HttpUtils" : 
    "name" : "_HttpUtils"
    "qualifiedname" : "dart.io._HttpUtils"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "decodeUrlEncodedString" : 
        "name" : "decodeUrlEncodedString"
        "qualifiedname" : "dart.io._HttpUtils.decodeUrlEncodedString"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "urlEncoded" : 
            "name" : "urlEncoded"
            "qualifiedname" : "dart.io._HttpUtils.decodeUrlEncodedString#urlEncoded"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._HttpUtils.decodeUrlEncodedString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "splitQueryString" : 
        "name" : "splitQueryString"
        "qualifiedname" : "dart.io._HttpUtils.splitQueryString"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.Map"
        "parameters" : 
          "queryString" : 
            "name" : "queryString"
            "qualifiedname" : "dart.io._HttpUtils.splitQueryString#queryString"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._HttpUtils.splitQueryString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "parseCookieDate" : 
        "name" : "parseCookieDate"
        "qualifiedname" : "dart.io._HttpUtils.parseCookieDate"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.DateTime"
        "parameters" : 
          "date" : 
            "name" : "date"
            "qualifiedname" : "dart.io._HttpUtils.parseCookieDate#date"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "decodeHttpEntityString" : 
        "name" : "decodeHttpEntityString"
        "qualifiedname" : "dart.io._HttpUtils.decodeHttpEntityString"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "input" : 
            "name" : "input"
            "qualifiedname" : "dart.io._HttpUtils.decodeHttpEntityString#input"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "HttpDate" : 
    "name" : "HttpDate"
    "qualifiedname" : "dart.io.HttpDate"
    "comment" : "<p>Utility functions for working with dates with HTTP specific date formats.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "format" : 
        "name" : "format"
        "qualifiedname" : "dart.io.HttpDate.format"
        "comment" : "<p>Format a date according to <a href=\"http://tools.ietf.org/html/rfc1123\" title=\"RFC-1123\">RFC-1123</a>, e.g. <code>Thu, 1 Jan 1970 00:00:00 GMT</code>.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "date" : 
            "name" : "date"
            "qualifiedname" : "dart.io.HttpDate.format#date"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io.HttpDate.parse"
        "comment" : "<p>Parse a date string in either of the formats <a href=\"http://tools.ietf.org/html/rfc1123\" title=\"RFC-1123\">RFC-1123</a>, <a href=\"http://tools.ietf.org/html/rfc850\" title=\"RFC-850\">RFC-850</a> or ANSI C's asctime() format. These formats are listed here.</p> <pre><code>Thu, 1 Jan 1970 00:00:00 GMT Thursday, 1-Jan-1970 00:00:00 GMT Thu Jan  1 00:00:00 1970 </code></pre> <p>For more information see <a href=\"http://tools.ietf.org/html/rfc2616#section-3.3.1 \" title=\"RFC-2616 section 3.1.1\">RFC-2616 section 3.1.1</a>.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.DateTime"
        "parameters" : 
          "date" : 
            "name" : "date"
            "qualifiedname" : "dart.io.HttpDate.parse#date"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_HttpSessionManager" : 
    "name" : "_HttpSessionManager"
    "qualifiedname" : "dart.io._HttpSessionManager"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_sessions" : 
        "name" : "_sessions"
        "qualifiedname" : "dart.io._HttpSessionManager._sessions"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Map"
      "_sessionTimeout" : 
        "name" : "_sessionTimeout"
        "qualifiedname" : "dart.io._HttpSessionManager._sessionTimeout"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_head" : 
        "name" : "_head"
        "qualifiedname" : "dart.io._HttpSessionManager._head"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSession"
      "_tail" : 
        "name" : "_tail"
        "qualifiedname" : "dart.io._HttpSessionManager._tail"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSession"
      "_timer" : 
        "name" : "_timer"
        "qualifiedname" : "dart.io._HttpSessionManager._timer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Timer"
    "methods" : 
      "_HttpSessionManager" : 
        "name" : "_HttpSessionManager"
        "qualifiedname" : "dart.io._HttpSessionManager._HttpSessionManager"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "createSessionId" : 
        "name" : "createSessionId"
        "qualifiedname" : "dart.io._HttpSessionManager.createSessionId"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "getSession" : 
        "name" : "getSession"
        "qualifiedname" : "dart.io._HttpSessionManager.getSession"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._HttpSession"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._HttpSessionManager.getSession#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "createSession" : 
        "name" : "createSession"
        "qualifiedname" : "dart.io._HttpSessionManager.createSession"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._HttpSession"
        "parameters" : 
      "sessionTimeout=" : 
        "name" : "sessionTimeout="
        "qualifiedname" : "dart.io._HttpSessionManager.sessionTimeout="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "timeout" : 
            "name" : "timeout"
            "qualifiedname" : "dart.io._HttpSessionManager.sessionTimeout=#timeout"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpSessionManager.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_bumpToEnd" : 
        "name" : "_bumpToEnd"
        "qualifiedname" : "dart.io._HttpSessionManager._bumpToEnd"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "session" : 
            "name" : "session"
            "qualifiedname" : "dart.io._HttpSessionManager._bumpToEnd#session"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpSession"
            "value" : "null"
      "_addToTimeoutQueue" : 
        "name" : "_addToTimeoutQueue"
        "qualifiedname" : "dart.io._HttpSessionManager._addToTimeoutQueue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "session" : 
            "name" : "session"
            "qualifiedname" : "dart.io._HttpSessionManager._addToTimeoutQueue#session"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpSession"
            "value" : "null"
      "_removeFromTimeoutQueue" : 
        "name" : "_removeFromTimeoutQueue"
        "qualifiedname" : "dart.io._HttpSessionManager._removeFromTimeoutQueue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "session" : 
            "name" : "session"
            "qualifiedname" : "dart.io._HttpSessionManager._removeFromTimeoutQueue#session"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpSession"
            "value" : "null"
      "_timerTimeout" : 
        "name" : "_timerTimeout"
        "qualifiedname" : "dart.io._HttpSessionManager._timerTimeout"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_startTimer" : 
        "name" : "_startTimer"
        "qualifiedname" : "dart.io._HttpSessionManager._startTimer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_stopTimer" : 
        "name" : "_stopTimer"
        "qualifiedname" : "dart.io._HttpSessionManager._stopTimer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_HttpSession" : 
    "name" : "_HttpSession"
    "qualifiedname" : "dart.io._HttpSession"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpSession"
    "variables" : 
      "_destroyed" : 
        "name" : "_destroyed"
        "qualifiedname" : "dart.io._HttpSession._destroyed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_isNew" : 
        "name" : "_isNew"
        "qualifiedname" : "dart.io._HttpSession._isNew"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_lastSeen" : 
        "name" : "_lastSeen"
        "qualifiedname" : "dart.io._HttpSession._lastSeen"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "_timeoutCallback" : 
        "name" : "_timeoutCallback"
        "qualifiedname" : "dart.io._HttpSession._timeoutCallback"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Function"
      "_sessionManager" : 
        "name" : "_sessionManager"
        "qualifiedname" : "dart.io._HttpSession._sessionManager"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSessionManager"
      "_prev" : 
        "name" : "_prev"
        "qualifiedname" : "dart.io._HttpSession._prev"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSession"
      "_next" : 
        "name" : "_next"
        "qualifiedname" : "dart.io._HttpSession._next"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSession"
      "_data" : 
        "name" : "_data"
        "qualifiedname" : "dart.io._HttpSession._data"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Map"
      "id" : 
        "name" : "id"
        "qualifiedname" : "dart.io._HttpSession.id"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "_HttpSession" : 
        "name" : "_HttpSession"
        "qualifiedname" : "dart.io._HttpSession._HttpSession"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_sessionManager" : 
            "name" : "_sessionManager"
            "qualifiedname" : "dart.io._HttpSession._HttpSession#_sessionManager"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpSessionManager"
            "value" : "null"
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._HttpSession._HttpSession#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io._HttpSession.destroy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_markSeen" : 
        "name" : "_markSeen"
        "qualifiedname" : "dart.io._HttpSession._markSeen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "lastSeen" : 
        "name" : "lastSeen"
        "qualifiedname" : "dart.io._HttpSession.lastSeen"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.DateTime"
        "parameters" : 
      "isNew" : 
        "name" : "isNew"
        "qualifiedname" : "dart.io._HttpSession.isNew"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "onTimeout=" : 
        "name" : "onTimeout="
        "qualifiedname" : "dart.io._HttpSession.onTimeout="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "callback" : 
            "name" : "callback"
            "qualifiedname" : "dart.io._HttpSession.onTimeout=#callback"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "containsValue" : 
        "name" : "containsValue"
        "qualifiedname" : "dart.io._HttpSession.containsValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpSession.containsValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "containsKey" : 
        "name" : "containsKey"
        "qualifiedname" : "dart.io._HttpSession.containsKey"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._HttpSession.containsKey#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.io._HttpSession.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._HttpSession.[]#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "[]=" : 
        "name" : "[]="
        "qualifiedname" : "dart.io._HttpSession.[]="
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._HttpSession.[]=#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpSession.[]=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "putIfAbsent" : 
        "name" : "putIfAbsent"
        "qualifiedname" : "dart.io._HttpSession.putIfAbsent"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._HttpSession.putIfAbsent#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "ifAbsent" : 
            "name" : "ifAbsent"
            "qualifiedname" : "dart.io._HttpSession.putIfAbsent#ifAbsent"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addAll" : 
        "name" : "addAll"
        "qualifiedname" : "dart.io._HttpSession.addAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "other" : 
            "name" : "other"
            "qualifiedname" : "dart.io._HttpSession.addAll#other"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.io._HttpSession.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._HttpSession.remove#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.io._HttpSession.clear"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.io._HttpSession.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io._HttpSession.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "keys" : 
        "name" : "keys"
        "qualifiedname" : "dart.io._HttpSession.keys"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "values" : 
        "name" : "values"
        "qualifiedname" : "dart.io._HttpSession.values"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Iterable"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io._HttpSession.length"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.io._HttpSession.isEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.io._HttpSession.isNotEmpty"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "_HttpParser" : 
    "name" : "_HttpParser"
    "qualifiedname" : "dart.io._HttpParser"
    "comment" : "<p>HTTP parser which parses the data stream given to <code>consume</code>.</p> <p>If an HTTP parser error occours, the parser will signal an error to either the current <em>HttpIncoming or the </em>parser itself.</p> <p>The connection upgrades (e.g. switching from HTTP/1.1 to the WebSocket protocol) is handled in a special way. If connection upgrade is specified in the headers, then on the callback to <code>:responseStart:</code> the <code>:upgrade:</code> property on the <code>:HttpParser:</code> object will be <code>:true:</code> indicating that from now on the protocol is not HTTP anymore and no more callbacks will happen, that is <code>:dataReceived:</code> and <code>:dataEnd:</code> are not called in this case as there is no more HTTP data. After the upgrade the method <code>:readUnparsedData:</code> can be used to read any remaining bytes in the HTTP parser which are part of the protocol the connection is upgrading to. These bytes cannot be processed by the HTTP parser and should be handled according to whatever protocol is being upgraded to.</p>"
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamConsumer"
    "variables" : 
      "_parserCalled" : 
        "name" : "_parserCalled"
        "qualifiedname" : "dart.io._HttpParser._parserCalled"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_buffer" : 
        "name" : "_buffer"
        "qualifiedname" : "dart.io._HttpParser._buffer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_index" : 
        "name" : "_index"
        "qualifiedname" : "dart.io._HttpParser._index"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_requestParser" : 
        "name" : "_requestParser"
        "qualifiedname" : "dart.io._HttpParser._requestParser"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "_state" : 
        "name" : "_state"
        "qualifiedname" : "dart.io._HttpParser._state"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_httpVersionIndex" : 
        "name" : "_httpVersionIndex"
        "qualifiedname" : "dart.io._HttpParser._httpVersionIndex"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_messageType" : 
        "name" : "_messageType"
        "qualifiedname" : "dart.io._HttpParser._messageType"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_statusCode" : 
        "name" : "_statusCode"
        "qualifiedname" : "dart.io._HttpParser._statusCode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_method_or_status_code" : 
        "name" : "_method_or_status_code"
        "qualifiedname" : "dart.io._HttpParser._method_or_status_code"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_uri_or_reason_phrase" : 
        "name" : "_uri_or_reason_phrase"
        "qualifiedname" : "dart.io._HttpParser._uri_or_reason_phrase"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_headerField" : 
        "name" : "_headerField"
        "qualifiedname" : "dart.io._HttpParser._headerField"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_headerValue" : 
        "name" : "_headerValue"
        "qualifiedname" : "dart.io._HttpParser._headerValue"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_httpVersion" : 
        "name" : "_httpVersion"
        "qualifiedname" : "dart.io._HttpParser._httpVersion"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_transferLength" : 
        "name" : "_transferLength"
        "qualifiedname" : "dart.io._HttpParser._transferLength"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_persistentConnection" : 
        "name" : "_persistentConnection"
        "qualifiedname" : "dart.io._HttpParser._persistentConnection"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_connectionUpgrade" : 
        "name" : "_connectionUpgrade"
        "qualifiedname" : "dart.io._HttpParser._connectionUpgrade"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_chunked" : 
        "name" : "_chunked"
        "qualifiedname" : "dart.io._HttpParser._chunked"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_noMessageBody" : 
        "name" : "_noMessageBody"
        "qualifiedname" : "dart.io._HttpParser._noMessageBody"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_responseToMethod" : 
        "name" : "_responseToMethod"
        "qualifiedname" : "dart.io._HttpParser._responseToMethod"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_remainingContent" : 
        "name" : "_remainingContent"
        "qualifiedname" : "dart.io._HttpParser._remainingContent"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_headers" : 
        "name" : "_headers"
        "qualifiedname" : "dart.io._HttpParser._headers"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpHeaders"
      "_incoming" : 
        "name" : "_incoming"
        "qualifiedname" : "dart.io._HttpParser._incoming"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpIncoming"
      "_socketSubscription" : 
        "name" : "_socketSubscription"
        "qualifiedname" : "dart.io._HttpParser._socketSubscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_paused" : 
        "name" : "_paused"
        "qualifiedname" : "dart.io._HttpParser._paused"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_bodyPaused" : 
        "name" : "_bodyPaused"
        "qualifiedname" : "dart.io._HttpParser._bodyPaused"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._HttpParser._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_bodyController" : 
        "name" : "_bodyController"
        "qualifiedname" : "dart.io._HttpParser._bodyController"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
    "methods" : 
      "_HttpParser.requestParser" : 
        "name" : "_HttpParser.requestParser"
        "qualifiedname" : "dart.io._HttpParser._HttpParser.requestParser"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io._HttpParser"
        "parameters" : 
      "_HttpParser.responseParser" : 
        "name" : "_HttpParser.responseParser"
        "qualifiedname" : "dart.io._HttpParser._HttpParser.responseParser"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io._HttpParser"
        "parameters" : 
      "_HttpParser._" : 
        "name" : "_HttpParser._"
        "qualifiedname" : "dart.io._HttpParser._HttpParser._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_requestParser" : 
            "name" : "_requestParser"
            "qualifiedname" : "dart.io._HttpParser._HttpParser._#_requestParser"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpParser.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpParser.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpParser.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpParser.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpParser.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._HttpParser.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._HttpParser.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpParser.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_parse" : 
        "name" : "_parse"
        "qualifiedname" : "dart.io._HttpParser._parse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_doParse" : 
        "name" : "_doParse"
        "qualifiedname" : "dart.io._HttpParser._doParse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onData" : 
        "name" : "_onData"
        "qualifiedname" : "dart.io._HttpParser._onData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._HttpParser._onData#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "_onDone" : 
        "name" : "_onDone"
        "qualifiedname" : "dart.io._HttpParser._onDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_onError" : 
        "name" : "_onError"
        "qualifiedname" : "dart.io._HttpParser._onError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "e" : 
            "name" : "e"
            "qualifiedname" : "dart.io._HttpParser._onError#e"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "version" : 
        "name" : "version"
        "qualifiedname" : "dart.io._HttpParser.version"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "messageType" : 
        "name" : "messageType"
        "qualifiedname" : "dart.io._HttpParser.messageType"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "transferLength" : 
        "name" : "transferLength"
        "qualifiedname" : "dart.io._HttpParser.transferLength"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "upgrade" : 
        "name" : "upgrade"
        "qualifiedname" : "dart.io._HttpParser.upgrade"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io._HttpParser.persistentConnection"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "responseToMethod=" : 
        "name" : "responseToMethod="
        "qualifiedname" : "dart.io._HttpParser.responseToMethod="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpParser.responseToMethod=#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "detachIncoming" : 
        "name" : "detachIncoming"
        "qualifiedname" : "dart.io._HttpParser.detachIncoming"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._HttpDetachedIncoming"
        "parameters" : 
      "readUnparsedData" : 
        "name" : "readUnparsedData"
        "qualifiedname" : "dart.io._HttpParser.readUnparsedData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "_reset" : 
        "name" : "_reset"
        "qualifiedname" : "dart.io._HttpParser._reset"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_releaseBuffer" : 
        "name" : "_releaseBuffer"
        "qualifiedname" : "dart.io._HttpParser._releaseBuffer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_isTokenChar" : 
        "name" : "_isTokenChar"
        "qualifiedname" : "dart.io._HttpParser._isTokenChar"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io._HttpParser._isTokenChar#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_tokenizeFieldValue" : 
        "name" : "_tokenizeFieldValue"
        "qualifiedname" : "dart.io._HttpParser._tokenizeFieldValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "headerValue" : 
            "name" : "headerValue"
            "qualifiedname" : "dart.io._HttpParser._tokenizeFieldValue#headerValue"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_toLowerCase" : 
        "name" : "_toLowerCase"
        "qualifiedname" : "dart.io._HttpParser._toLowerCase"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io._HttpParser._toLowerCase#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_expect" : 
        "name" : "_expect"
        "qualifiedname" : "dart.io._HttpParser._expect"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "val1" : 
            "name" : "val1"
            "qualifiedname" : "dart.io._HttpParser._expect#val1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "val2" : 
            "name" : "val2"
            "qualifiedname" : "dart.io._HttpParser._expect#val2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_expectHexDigit" : 
        "name" : "_expectHexDigit"
        "qualifiedname" : "dart.io._HttpParser._expectHexDigit"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "byte" : 
            "name" : "byte"
            "qualifiedname" : "dart.io._HttpParser._expectHexDigit#byte"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_createIncoming" : 
        "name" : "_createIncoming"
        "qualifiedname" : "dart.io._HttpParser._createIncoming"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "transferLength" : 
            "name" : "transferLength"
            "qualifiedname" : "dart.io._HttpParser._createIncoming#transferLength"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_closeIncoming" : 
        "name" : "_closeIncoming"
        "qualifiedname" : "dart.io._HttpParser._closeIncoming"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "closing" : 
            "name" : "closing"
            "qualifiedname" : "dart.io._HttpParser._closeIncoming#closing"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "_pauseStateChanged" : 
        "name" : "_pauseStateChanged"
        "qualifiedname" : "dart.io._HttpParser._pauseStateChanged"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "error" : 
        "name" : "error"
        "qualifiedname" : "dart.io._HttpParser.error"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._HttpParser.error#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "stackTrace" : 
            "name" : "stackTrace"
            "qualifiedname" : "dart.io._HttpParser.error#stackTrace"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "_HttpDetachedIncoming" : 
    "name" : "_HttpDetachedIncoming"
    "qualifiedname" : "dart.io._HttpDetachedIncoming"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "controller" : 
        "name" : "controller"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "subscription" : 
        "name" : "subscription"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.subscription"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "bufferedData" : 
        "name" : "bufferedData"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.bufferedData"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "paused" : 
        "name" : "paused"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.paused"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "resumeCompleter" : 
        "name" : "resumeCompleter"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.resumeCompleter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
    "methods" : 
      "_HttpDetachedIncoming" : 
        "name" : "_HttpDetachedIncoming"
        "qualifiedname" : "dart.io._HttpDetachedIncoming._HttpDetachedIncoming"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "subscription" : 
            "name" : "subscription"
            "qualifiedname" : "dart.io._HttpDetachedIncoming._HttpDetachedIncoming#subscription"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.StreamSubscription"
            "value" : "null"
          "bufferedData" : 
            "name" : "bufferedData"
            "qualifiedname" : "dart.io._HttpDetachedIncoming._HttpDetachedIncoming#bufferedData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpDetachedIncoming.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpDetachedIncoming.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpDetachedIncoming.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpDetachedIncoming.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "resume" : 
        "name" : "resume"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.resume"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "pause" : 
        "name" : "pause"
        "qualifiedname" : "dart.io._HttpDetachedIncoming.pause"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_MessageType" : 
    "name" : "_MessageType"
    "qualifiedname" : "dart.io._MessageType"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "UNDETERMINED" : 
        "name" : "UNDETERMINED"
        "qualifiedname" : "dart.io._MessageType.UNDETERMINED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST" : 
        "name" : "REQUEST"
        "qualifiedname" : "dart.io._MessageType.REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE" : 
        "name" : "RESPONSE"
        "qualifiedname" : "dart.io._MessageType.RESPONSE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "_HttpVersion" : 
    "name" : "_HttpVersion"
    "qualifiedname" : "dart.io._HttpVersion"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "UNDETERMINED" : 
        "name" : "UNDETERMINED"
        "qualifiedname" : "dart.io._HttpVersion.UNDETERMINED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HTTP10" : 
        "name" : "HTTP10"
        "qualifiedname" : "dart.io._HttpVersion.HTTP10"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HTTP11" : 
        "name" : "HTTP11"
        "qualifiedname" : "dart.io._HttpVersion.HTTP11"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "_State" : 
    "name" : "_State"
    "qualifiedname" : "dart.io._State"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "START" : 
        "name" : "START"
        "qualifiedname" : "dart.io._State.START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "METHOD_OR_RESPONSE_HTTP_VERSION" : 
        "name" : "METHOD_OR_RESPONSE_HTTP_VERSION"
        "qualifiedname" : "dart.io._State.METHOD_OR_RESPONSE_HTTP_VERSION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_HTTP_VERSION" : 
        "name" : "RESPONSE_HTTP_VERSION"
        "qualifiedname" : "dart.io._State.RESPONSE_HTTP_VERSION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_LINE_METHOD" : 
        "name" : "REQUEST_LINE_METHOD"
        "qualifiedname" : "dart.io._State.REQUEST_LINE_METHOD"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_LINE_URI" : 
        "name" : "REQUEST_LINE_URI"
        "qualifiedname" : "dart.io._State.REQUEST_LINE_URI"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_LINE_HTTP_VERSION" : 
        "name" : "REQUEST_LINE_HTTP_VERSION"
        "qualifiedname" : "dart.io._State.REQUEST_LINE_HTTP_VERSION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_LINE_ENDING" : 
        "name" : "REQUEST_LINE_ENDING"
        "qualifiedname" : "dart.io._State.REQUEST_LINE_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_LINE_STATUS_CODE" : 
        "name" : "RESPONSE_LINE_STATUS_CODE"
        "qualifiedname" : "dart.io._State.RESPONSE_LINE_STATUS_CODE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_LINE_REASON_PHRASE" : 
        "name" : "RESPONSE_LINE_REASON_PHRASE"
        "qualifiedname" : "dart.io._State.RESPONSE_LINE_REASON_PHRASE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_LINE_ENDING" : 
        "name" : "RESPONSE_LINE_ENDING"
        "qualifiedname" : "dart.io._State.RESPONSE_LINE_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_START" : 
        "name" : "HEADER_START"
        "qualifiedname" : "dart.io._State.HEADER_START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_FIELD" : 
        "name" : "HEADER_FIELD"
        "qualifiedname" : "dart.io._State.HEADER_FIELD"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_VALUE_START" : 
        "name" : "HEADER_VALUE_START"
        "qualifiedname" : "dart.io._State.HEADER_VALUE_START"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_VALUE" : 
        "name" : "HEADER_VALUE"
        "qualifiedname" : "dart.io._State.HEADER_VALUE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_VALUE_FOLDING_OR_ENDING" : 
        "name" : "HEADER_VALUE_FOLDING_OR_ENDING"
        "qualifiedname" : "dart.io._State.HEADER_VALUE_FOLDING_OR_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_VALUE_FOLD_OR_END" : 
        "name" : "HEADER_VALUE_FOLD_OR_END"
        "qualifiedname" : "dart.io._State.HEADER_VALUE_FOLD_OR_END"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HEADER_ENDING" : 
        "name" : "HEADER_ENDING"
        "qualifiedname" : "dart.io._State.HEADER_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNK_SIZE_STARTING_CR" : 
        "name" : "CHUNK_SIZE_STARTING_CR"
        "qualifiedname" : "dart.io._State.CHUNK_SIZE_STARTING_CR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNK_SIZE_STARTING_LF" : 
        "name" : "CHUNK_SIZE_STARTING_LF"
        "qualifiedname" : "dart.io._State.CHUNK_SIZE_STARTING_LF"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNK_SIZE" : 
        "name" : "CHUNK_SIZE"
        "qualifiedname" : "dart.io._State.CHUNK_SIZE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNK_SIZE_EXTENSION" : 
        "name" : "CHUNK_SIZE_EXTENSION"
        "qualifiedname" : "dart.io._State.CHUNK_SIZE_EXTENSION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNK_SIZE_ENDING" : 
        "name" : "CHUNK_SIZE_ENDING"
        "qualifiedname" : "dart.io._State.CHUNK_SIZE_ENDING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNKED_BODY_DONE_CR" : 
        "name" : "CHUNKED_BODY_DONE_CR"
        "qualifiedname" : "dart.io._State.CHUNKED_BODY_DONE_CR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CHUNKED_BODY_DONE_LF" : 
        "name" : "CHUNKED_BODY_DONE_LF"
        "qualifiedname" : "dart.io._State.CHUNKED_BODY_DONE_LF"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "BODY" : 
        "name" : "BODY"
        "qualifiedname" : "dart.io._State.BODY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CLOSED" : 
        "name" : "CLOSED"
        "qualifiedname" : "dart.io._State.CLOSED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "UPGRADED" : 
        "name" : "UPGRADED"
        "qualifiedname" : "dart.io._State.UPGRADED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "FAILURE" : 
        "name" : "FAILURE"
        "qualifiedname" : "dart.io._State.FAILURE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "FIRST_BODY_STATE" : 
        "name" : "FIRST_BODY_STATE"
        "qualifiedname" : "dart.io._State.FIRST_BODY_STATE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "_CharCode" : 
    "name" : "_CharCode"
    "qualifiedname" : "dart.io._CharCode"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "HT" : 
        "name" : "HT"
        "qualifiedname" : "dart.io._CharCode.HT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LF" : 
        "name" : "LF"
        "qualifiedname" : "dart.io._CharCode.LF"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CR" : 
        "name" : "CR"
        "qualifiedname" : "dart.io._CharCode.CR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "SP" : 
        "name" : "SP"
        "qualifiedname" : "dart.io._CharCode.SP"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "AMPERSAND" : 
        "name" : "AMPERSAND"
        "qualifiedname" : "dart.io._CharCode.AMPERSAND"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "COMMA" : 
        "name" : "COMMA"
        "qualifiedname" : "dart.io._CharCode.COMMA"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "DASH" : 
        "name" : "DASH"
        "qualifiedname" : "dart.io._CharCode.DASH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "SLASH" : 
        "name" : "SLASH"
        "qualifiedname" : "dart.io._CharCode.SLASH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "ZERO" : 
        "name" : "ZERO"
        "qualifiedname" : "dart.io._CharCode.ZERO"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "ONE" : 
        "name" : "ONE"
        "qualifiedname" : "dart.io._CharCode.ONE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "COLON" : 
        "name" : "COLON"
        "qualifiedname" : "dart.io._CharCode.COLON"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "SEMI_COLON" : 
        "name" : "SEMI_COLON"
        "qualifiedname" : "dart.io._CharCode.SEMI_COLON"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "EQUAL" : 
        "name" : "EQUAL"
        "qualifiedname" : "dart.io._CharCode.EQUAL"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "_Const" : 
    "name" : "_Const"
    "qualifiedname" : "dart.io._Const"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "HTTP" : 
        "name" : "HTTP"
        "qualifiedname" : "dart.io._Const.HTTP"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "HTTP1DOT" : 
        "name" : "HTTP1DOT"
        "qualifiedname" : "dart.io._Const.HTTP1DOT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "HTTP10" : 
        "name" : "HTTP10"
        "qualifiedname" : "dart.io._Const.HTTP10"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "HTTP11" : 
        "name" : "HTTP11"
        "qualifiedname" : "dart.io._Const.HTTP11"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "END_CHUNKED" : 
        "name" : "END_CHUNKED"
        "qualifiedname" : "dart.io._Const.END_CHUNKED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "SEPARATORS" : 
        "name" : "SEPARATORS"
        "qualifiedname" : "dart.io._Const.SEPARATORS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "SEPARATORS_AND_CR_LF" : 
        "name" : "SEPARATORS_AND_CR_LF"
        "qualifiedname" : "dart.io._Const.SEPARATORS_AND_CR_LF"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
    "methods" : 
  "_HttpMultipartFormData" : 
    "name" : "_HttpMultipartFormData"
    "qualifiedname" : "dart.io._HttpMultipartFormData"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpMultipartFormData"
    "variables" : 
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io._HttpMultipartFormData.contentType"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.ContentType"
      "contentDisposition" : 
        "name" : "contentDisposition"
        "qualifiedname" : "dart.io._HttpMultipartFormData.contentDisposition"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.HeaderValue"
      "contentTransferEncoding" : 
        "name" : "contentTransferEncoding"
        "qualifiedname" : "dart.io._HttpMultipartFormData.contentTransferEncoding"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.HeaderValue"
      "_mimeMultipart" : 
        "name" : "_mimeMultipart"
        "qualifiedname" : "dart.io._HttpMultipartFormData._mimeMultipart"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.MimeMultipart"
      "_isText" : 
        "name" : "_isText"
        "qualifiedname" : "dart.io._HttpMultipartFormData._isText"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_stream" : 
        "name" : "_stream"
        "qualifiedname" : "dart.io._HttpMultipartFormData._stream"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Stream"
    "methods" : 
      "_HttpMultipartFormData" : 
        "name" : "_HttpMultipartFormData"
        "qualifiedname" : "dart.io._HttpMultipartFormData._HttpMultipartFormData"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "contentType" : 
            "name" : "contentType"
            "qualifiedname" : "dart.io._HttpMultipartFormData._HttpMultipartFormData#contentType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ContentType"
            "value" : "null"
          "contentDisposition" : 
            "name" : "contentDisposition"
            "qualifiedname" : "dart.io._HttpMultipartFormData._HttpMultipartFormData#contentDisposition"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HeaderValue"
            "value" : "null"
          "contentTransferEncoding" : 
            "name" : "contentTransferEncoding"
            "qualifiedname" : "dart.io._HttpMultipartFormData._HttpMultipartFormData#contentTransferEncoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HeaderValue"
            "value" : "null"
          "_mimeMultipart" : 
            "name" : "_mimeMultipart"
            "qualifiedname" : "dart.io._HttpMultipartFormData._HttpMultipartFormData#_mimeMultipart"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.MimeMultipart"
            "value" : "null"
      "isText" : 
        "name" : "isText"
        "qualifiedname" : "dart.io._HttpMultipartFormData.isText"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isBinary" : 
        "name" : "isBinary"
        "qualifiedname" : "dart.io._HttpMultipartFormData.isBinary"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io._HttpMultipartFormData.parse"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.HttpMultipartFormData"
        "parameters" : 
          "multipart" : 
            "name" : "multipart"
            "qualifiedname" : "dart.io._HttpMultipartFormData.parse#multipart"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.MimeMultipart"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpMultipartFormData.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpMultipartFormData.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpMultipartFormData.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpMultipartFormData.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpMultipartFormData.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io._HttpMultipartFormData.value"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpMultipartFormData.value#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "HttpMultipartFormData" : 
    "name" : "HttpMultipartFormData"
    "qualifiedname" : "dart.io.HttpMultipartFormData"
    "comment" : "<p><code>:HttpMultipartFormData:</code> class used for 'upgrading' a <code>MimeMultipart</code> by parsing it as a 'multipart/form-data' part. The following code shows how it can be used.</p> <p>  HttpServer server = ...;   server.listen((request) {</p> <pre><code>String boundary = request.headers.contentType.parameters['boundary']; request     .transform(new MimeMultipartTransformer(boundary))     .map(HttpMultipartFormData.parse)     .map((HttpMultipartFormData formData) {       // form data object available here.     }); </code></pre> <p><code>:HttpMultipartFormData:</code> is a Stream, serving either bytes or decoded Strings. Use <code>isText</code> or <code>isBinary</code> to see what type of data is provided.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
    "methods" : 
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io.HttpMultipartFormData.contentType"
        "comment" : "<p>The parsed <code>:Content-Type:</code> header of the <code>:HttpMultipartFormData:</code>. Returns <code>:null:</code> if not present.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.ContentType"
        "parameters" : 
      "contentDisposition" : 
        "name" : "contentDisposition"
        "qualifiedname" : "dart.io.HttpMultipartFormData.contentDisposition"
        "comment" : "<p>The parsed <code>:Content-Disposition:</code> header of the <code>:HttpMultipartFormData:</code>. This field is always present. Use this to extract e.g. name(form field name)and filename (client provided name of uploaded file) parameters.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HeaderValue"
        "parameters" : 
      "contentTransferEncoding" : 
        "name" : "contentTransferEncoding"
        "qualifiedname" : "dart.io.HttpMultipartFormData.contentTransferEncoding"
        "comment" : "<p>The parsed <code>:Content-Transfer-Encoding:</code> header of the <code>:HttpMultipartFormData:</code>. This field is used to determine how to decode the data. Returns <code>:null:</code> if not present.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HeaderValue"
        "parameters" : 
      "isText" : 
        "name" : "isText"
        "qualifiedname" : "dart.io.HttpMultipartFormData.isText"
        "comment" : "<p>Returns <code>:true:</code> if the data is decoded as <code>String</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isBinary" : 
        "name" : "isBinary"
        "qualifiedname" : "dart.io.HttpMultipartFormData.isBinary"
        "comment" : "<p>Returns <code>:true:</code> if the data is raw bytes.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io.HttpMultipartFormData.value"
        "comment" : "<p>Returns the value for the header named <code>name</code>. If there is no header with the provided name, <code>:null:</code> will be returned.</p> <p>Use this method to index other headers available in the original <code>MimeMultipart</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpMultipartFormData.value#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io.HttpMultipartFormData.parse"
        "comment" : "<p>Parse a <code>MimeMultipart</code> and return a <code>HttpMultipartFormData</code>. If the <code>:Content-Disposition:</code> header is missing or invalid, a <code>HttpException</code> is thrown.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.HttpMultipartFormData"
        "parameters" : 
          "multipart" : 
            "name" : "multipart"
            "qualifiedname" : "dart.io.HttpMultipartFormData.parse#multipart"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.MimeMultipart"
            "value" : "null"
  "_RedirectInfo" : 
    "name" : "_RedirectInfo"
    "qualifiedname" : "dart.io._RedirectInfo"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.RedirectInfo"
    "variables" : 
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io._RedirectInfo.statusCode"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io._RedirectInfo.method"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "location" : 
        "name" : "location"
        "qualifiedname" : "dart.io._RedirectInfo.location"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Uri"
    "methods" : 
      "_RedirectInfo" : 
        "name" : "_RedirectInfo"
        "qualifiedname" : "dart.io._RedirectInfo._RedirectInfo"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "statusCode" : 
            "name" : "statusCode"
            "qualifiedname" : "dart.io._RedirectInfo._RedirectInfo#statusCode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._RedirectInfo._RedirectInfo#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "location" : 
            "name" : "location"
            "qualifiedname" : "dart.io._RedirectInfo._RedirectInfo#location"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
  "_HttpClientDigestCredentials" : 
    "name" : "_HttpClientDigestCredentials"
    "qualifiedname" : "dart.io._HttpClientDigestCredentials"
    "comment" : ""
    "superclass" : "dart.io._HttpClientCredentials"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClientDigestCredentials"
    "variables" : 
      "username" : 
        "name" : "username"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials.username"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "password" : 
        "name" : "password"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials.password"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "_HttpClientDigestCredentials" : 
        "name" : "_HttpClientDigestCredentials"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials._HttpClientDigestCredentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "username" : 
            "name" : "username"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials._HttpClientDigestCredentials#username"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "password" : 
            "name" : "password"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials._HttpClientDigestCredentials#password"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "scheme" : 
        "name" : "scheme"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials.scheme"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io._AuthenticationScheme"
        "parameters" : 
      "authorization" : 
        "name" : "authorization"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorization"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorization#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Credentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorization#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientRequest"
            "value" : "null"
      "authorize" : 
        "name" : "authorize"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorize#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Credentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorize#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
      "authorizeProxy" : 
        "name" : "authorizeProxy"
        "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorizeProxy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorizeProxy#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._ProxyCredentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientDigestCredentials.authorizeProxy#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
  "_HttpClientBasicCredentials" : 
    "name" : "_HttpClientBasicCredentials"
    "qualifiedname" : "dart.io._HttpClientBasicCredentials"
    "comment" : ""
    "superclass" : "dart.io._HttpClientCredentials"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClientBasicCredentials"
    "variables" : 
      "username" : 
        "name" : "username"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials.username"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "password" : 
        "name" : "password"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials.password"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "_HttpClientBasicCredentials" : 
        "name" : "_HttpClientBasicCredentials"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials._HttpClientBasicCredentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "username" : 
            "name" : "username"
            "qualifiedname" : "dart.io._HttpClientBasicCredentials._HttpClientBasicCredentials#username"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "password" : 
            "name" : "password"
            "qualifiedname" : "dart.io._HttpClientBasicCredentials._HttpClientBasicCredentials#password"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "scheme" : 
        "name" : "scheme"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials.scheme"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io._AuthenticationScheme"
        "parameters" : 
      "authorization" : 
        "name" : "authorization"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorization"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "authorize" : 
        "name" : "authorize"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "_" : 
            "name" : "_"
            "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorize#_"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Credentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorize#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
      "authorizeProxy" : 
        "name" : "authorizeProxy"
        "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorizeProxy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "_" : 
            "name" : "_"
            "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorizeProxy#_"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._ProxyCredentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientBasicCredentials.authorizeProxy#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
  "_HttpClientCredentials" : 
    "name" : "_HttpClientCredentials"
    "qualifiedname" : "dart.io._HttpClientCredentials"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClientCredentials"
    "variables" : 
    "methods" : 
      "scheme" : 
        "name" : "scheme"
        "qualifiedname" : "dart.io._HttpClientCredentials.scheme"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io._AuthenticationScheme"
        "parameters" : 
      "authorize" : 
        "name" : "authorize"
        "qualifiedname" : "dart.io._HttpClientCredentials.authorize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io._HttpClientCredentials.authorize#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Credentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientCredentials.authorize#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
      "authorizeProxy" : 
        "name" : "authorizeProxy"
        "qualifiedname" : "dart.io._HttpClientCredentials.authorizeProxy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io._HttpClientCredentials.authorizeProxy#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._ProxyCredentials"
            "value" : "null"
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpClientCredentials.authorizeProxy#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
  "_ProxyCredentials" : 
    "name" : "_ProxyCredentials"
    "qualifiedname" : "dart.io._ProxyCredentials"
    "comment" : ""
    "superclass" : "dart.io._Credentials"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "host" : 
        "name" : "host"
        "qualifiedname" : "dart.io._ProxyCredentials.host"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io._ProxyCredentials.port"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_ProxyCredentials" : 
        "name" : "_ProxyCredentials"
        "qualifiedname" : "dart.io._ProxyCredentials._ProxyCredentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._ProxyCredentials._ProxyCredentials#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._ProxyCredentials._ProxyCredentials#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io._ProxyCredentials._ProxyCredentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "creds" : 
            "name" : "creds"
            "qualifiedname" : "dart.io._ProxyCredentials._ProxyCredentials#creds"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientCredentials"
            "value" : "null"
      "applies" : 
        "name" : "applies"
        "qualifiedname" : "dart.io._ProxyCredentials.applies"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "proxy" : 
            "name" : "proxy"
            "qualifiedname" : "dart.io._ProxyCredentials.applies#proxy"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Proxy"
            "value" : "null"
          "scheme" : 
            "name" : "scheme"
            "qualifiedname" : "dart.io._ProxyCredentials.applies#scheme"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._AuthenticationScheme"
            "value" : "null"
      "authorize" : 
        "name" : "authorize"
        "qualifiedname" : "dart.io._ProxyCredentials.authorize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._ProxyCredentials.authorize#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
  "_SiteCredentials" : 
    "name" : "_SiteCredentials"
    "qualifiedname" : "dart.io._SiteCredentials"
    "comment" : ""
    "superclass" : "dart.io._Credentials"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io._SiteCredentials.uri"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Uri"
    "methods" : 
      "_SiteCredentials" : 
        "name" : "_SiteCredentials"
        "qualifiedname" : "dart.io._SiteCredentials._SiteCredentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "uri" : 
            "name" : "uri"
            "qualifiedname" : "dart.io._SiteCredentials._SiteCredentials#uri"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io._SiteCredentials._SiteCredentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "creds" : 
            "name" : "creds"
            "qualifiedname" : "dart.io._SiteCredentials._SiteCredentials#creds"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientCredentials"
            "value" : "null"
      "applies" : 
        "name" : "applies"
        "qualifiedname" : "dart.io._SiteCredentials.applies"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "uri" : 
            "name" : "uri"
            "qualifiedname" : "dart.io._SiteCredentials.applies#uri"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "scheme" : 
            "name" : "scheme"
            "qualifiedname" : "dart.io._SiteCredentials.applies#scheme"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._AuthenticationScheme"
            "value" : "null"
      "authorize" : 
        "name" : "authorize"
        "qualifiedname" : "dart.io._SiteCredentials.authorize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._SiteCredentials.authorize#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
  "_Credentials" : 
    "name" : "_Credentials"
    "qualifiedname" : "dart.io._Credentials"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "credentials" : 
        "name" : "credentials"
        "qualifiedname" : "dart.io._Credentials.credentials"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpClientCredentials"
      "realm" : 
        "name" : "realm"
        "qualifiedname" : "dart.io._Credentials.realm"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "used" : 
        "name" : "used"
        "qualifiedname" : "dart.io._Credentials.used"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "ha1" : 
        "name" : "ha1"
        "qualifiedname" : "dart.io._Credentials.ha1"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "nonce" : 
        "name" : "nonce"
        "qualifiedname" : "dart.io._Credentials.nonce"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "algorithm" : 
        "name" : "algorithm"
        "qualifiedname" : "dart.io._Credentials.algorithm"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "qop" : 
        "name" : "qop"
        "qualifiedname" : "dart.io._Credentials.qop"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "nonceCount" : 
        "name" : "nonceCount"
        "qualifiedname" : "dart.io._Credentials.nonceCount"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_Credentials" : 
        "name" : "_Credentials"
        "qualifiedname" : "dart.io._Credentials._Credentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io._Credentials._Credentials#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientCredentials"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io._Credentials._Credentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "scheme" : 
        "name" : "scheme"
        "qualifiedname" : "dart.io._Credentials.scheme"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io._AuthenticationScheme"
        "parameters" : 
      "authorize" : 
        "name" : "authorize"
        "qualifiedname" : "dart.io._Credentials.authorize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._Credentials.authorize#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientRequest"
            "value" : "null"
  "_AuthenticationScheme" : 
    "name" : "_AuthenticationScheme"
    "qualifiedname" : "dart.io._AuthenticationScheme"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "UNKNOWN" : 
        "name" : "UNKNOWN"
        "qualifiedname" : "dart.io._AuthenticationScheme.UNKNOWN"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "BASIC" : 
        "name" : "BASIC"
        "qualifiedname" : "dart.io._AuthenticationScheme.BASIC"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "DIGEST" : 
        "name" : "DIGEST"
        "qualifiedname" : "dart.io._AuthenticationScheme.DIGEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_scheme" : 
        "name" : "_scheme"
        "qualifiedname" : "dart.io._AuthenticationScheme._scheme"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_AuthenticationScheme" : 
        "name" : "_AuthenticationScheme"
        "qualifiedname" : "dart.io._AuthenticationScheme._AuthenticationScheme"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_scheme" : 
            "name" : "_scheme"
            "qualifiedname" : "dart.io._AuthenticationScheme._AuthenticationScheme#_scheme"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_AuthenticationScheme.fromString" : 
        "name" : "_AuthenticationScheme.fromString"
        "qualifiedname" : "dart.io._AuthenticationScheme._AuthenticationScheme.fromString"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io._AuthenticationScheme"
        "parameters" : 
          "scheme" : 
            "name" : "scheme"
            "qualifiedname" : "dart.io._AuthenticationScheme._AuthenticationScheme.fromString#scheme"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._AuthenticationScheme.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_DetachedSocket" : 
    "name" : "_DetachedSocket"
    "qualifiedname" : "dart.io._DetachedSocket"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Socket"
    "variables" : 
      "_incoming" : 
        "name" : "_incoming"
        "qualifiedname" : "dart.io._DetachedSocket._incoming"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Stream"
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io._DetachedSocket._socket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.Socket"
    "methods" : 
      "_DetachedSocket" : 
        "name" : "_DetachedSocket"
        "qualifiedname" : "dart.io._DetachedSocket._DetachedSocket"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_socket" : 
            "name" : "_socket"
            "qualifiedname" : "dart.io._DetachedSocket._DetachedSocket#_socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
          "_incoming" : 
            "name" : "_incoming"
            "qualifiedname" : "dart.io._DetachedSocket._DetachedSocket#_incoming"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._DetachedSocket.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._DetachedSocket.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._DetachedSocket.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._DetachedSocket.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._DetachedSocket.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io._DetachedSocket.encoding"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Encoding"
        "parameters" : 
      "encoding=" : 
        "name" : "encoding="
        "qualifiedname" : "dart.io._DetachedSocket.encoding="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._DetachedSocket.encoding=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._DetachedSocket.write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "obj" : 
            "name" : "obj"
            "qualifiedname" : "dart.io._DetachedSocket.write#obj"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "writeln" : 
        "name" : "writeln"
        "qualifiedname" : "dart.io._DetachedSocket.writeln"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "obj" : 
            "name" : "obj"
            "qualifiedname" : "dart.io._DetachedSocket.writeln#obj"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.Object"
            "value" : "\"\""
      "writeCharCode" : 
        "name" : "writeCharCode"
        "qualifiedname" : "dart.io._DetachedSocket.writeCharCode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "charCode" : 
            "name" : "charCode"
            "qualifiedname" : "dart.io._DetachedSocket.writeCharCode#charCode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeAll" : 
        "name" : "writeAll"
        "qualifiedname" : "dart.io._DetachedSocket.writeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objects" : 
            "name" : "objects"
            "qualifiedname" : "dart.io._DetachedSocket.writeAll#objects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.io._DetachedSocket.writeAll#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._DetachedSocket.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._DetachedSocket.add#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "addError" : 
        "name" : "addError"
        "qualifiedname" : "dart.io._DetachedSocket.addError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._DetachedSocket.addError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._DetachedSocket.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._DetachedSocket.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io._DetachedSocket.destroy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._DetachedSocket.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._DetachedSocket.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io._DetachedSocket.port"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "address" : 
        "name" : "address"
        "qualifiedname" : "dart.io._DetachedSocket.address"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.InternetAddress"
        "parameters" : 
      "remoteHost" : 
        "name" : "remoteHost"
        "qualifiedname" : "dart.io._DetachedSocket.remoteHost"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "remotePort" : 
        "name" : "remotePort"
        "qualifiedname" : "dart.io._DetachedSocket.remotePort"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "setOption" : 
        "name" : "setOption"
        "qualifiedname" : "dart.io._DetachedSocket.setOption"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "option" : 
            "name" : "option"
            "qualifiedname" : "dart.io._DetachedSocket.setOption#option"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.SocketOption"
            "value" : "null"
          "enabled" : 
            "name" : "enabled"
            "qualifiedname" : "dart.io._DetachedSocket.setOption#enabled"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "_HttpConnectionInfo" : 
    "name" : "_HttpConnectionInfo"
    "qualifiedname" : "dart.io._HttpConnectionInfo"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpConnectionInfo"
    "variables" : 
      "remoteHost" : 
        "name" : "remoteHost"
        "qualifiedname" : "dart.io._HttpConnectionInfo.remoteHost"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "remotePort" : 
        "name" : "remotePort"
        "qualifiedname" : "dart.io._HttpConnectionInfo.remotePort"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "localPort" : 
        "name" : "localPort"
        "qualifiedname" : "dart.io._HttpConnectionInfo.localPort"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io._HttpConnectionInfo.create"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io._HttpConnectionInfo"
        "parameters" : 
          "socket" : 
            "name" : "socket"
            "qualifiedname" : "dart.io._HttpConnectionInfo.create#socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
      "_HttpConnectionInfo._" : 
        "name" : "_HttpConnectionInfo._"
        "qualifiedname" : "dart.io._HttpConnectionInfo._HttpConnectionInfo._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
  "_Proxy" : 
    "name" : "_Proxy"
    "qualifiedname" : "dart.io._Proxy"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "host" : 
        "name" : "host"
        "qualifiedname" : "dart.io._Proxy.host"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io._Proxy.port"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "username" : 
        "name" : "username"
        "qualifiedname" : "dart.io._Proxy.username"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "password" : 
        "name" : "password"
        "qualifiedname" : "dart.io._Proxy.password"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "isDirect" : 
        "name" : "isDirect"
        "qualifiedname" : "dart.io._Proxy.isDirect"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_Proxy" : 
        "name" : "_Proxy"
        "qualifiedname" : "dart.io._Proxy._Proxy"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._Proxy._Proxy#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._Proxy._Proxy#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "username" : 
            "name" : "username"
            "qualifiedname" : "dart.io._Proxy._Proxy#username"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "password" : 
            "name" : "password"
            "qualifiedname" : "dart.io._Proxy._Proxy#password"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_Proxy.direct" : 
        "name" : "_Proxy.direct"
        "qualifiedname" : "dart.io._Proxy._Proxy.direct"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "isAuthenticated" : 
        "name" : "isAuthenticated"
        "qualifiedname" : "dart.io._Proxy.isAuthenticated"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "_ProxyConfiguration" : 
    "name" : "_ProxyConfiguration"
    "qualifiedname" : "dart.io._ProxyConfiguration"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "PROXY_PREFIX" : 
        "name" : "PROXY_PREFIX"
        "qualifiedname" : "dart.io._ProxyConfiguration.PROXY_PREFIX"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.String"
      "DIRECT_PREFIX" : 
        "name" : "DIRECT_PREFIX"
        "qualifiedname" : "dart.io._ProxyConfiguration.DIRECT_PREFIX"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.String"
      "proxies" : 
        "name" : "proxies"
        "qualifiedname" : "dart.io._ProxyConfiguration.proxies"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_ProxyConfiguration" : 
        "name" : "_ProxyConfiguration"
        "qualifiedname" : "dart.io._ProxyConfiguration._ProxyConfiguration"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "configuration" : 
            "name" : "configuration"
            "qualifiedname" : "dart.io._ProxyConfiguration._ProxyConfiguration#configuration"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_ProxyConfiguration.direct" : 
        "name" : "_ProxyConfiguration.direct"
        "qualifiedname" : "dart.io._ProxyConfiguration._ProxyConfiguration.direct"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
  "_HttpServer" : 
    "name" : "_HttpServer"
    "qualifiedname" : "dart.io._HttpServer"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpServer"
    "variables" : 
      "serverHeader" : 
        "name" : "serverHeader"
        "qualifiedname" : "dart.io._HttpServer.serverHeader"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_sessionManagerInstance" : 
        "name" : "_sessionManagerInstance"
        "qualifiedname" : "dart.io._HttpServer._sessionManagerInstance"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSessionManager"
      "closed" : 
        "name" : "closed"
        "qualifiedname" : "dart.io._HttpServer.closed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_serverSocket" : 
        "name" : "_serverSocket"
        "qualifiedname" : "dart.io._HttpServer._serverSocket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.ServerSocket"
      "_closeServer" : 
        "name" : "_closeServer"
        "qualifiedname" : "dart.io._HttpServer._closeServer"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "_connections" : 
        "name" : "_connections"
        "qualifiedname" : "dart.io._HttpServer._connections"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.collection.LinkedList"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._HttpServer._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
    "methods" : 
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io._HttpServer.bind"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io._HttpServer.bind#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpServer.bind#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io._HttpServer.bind#backlog"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "bindSecure" : 
        "name" : "bindSecure"
        "qualifiedname" : "dart.io._HttpServer.bindSecure"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io._HttpServer.bindSecure#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpServer.bindSecure#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io._HttpServer.bindSecure#backlog"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "certificate_name" : 
            "name" : "certificate_name"
            "qualifiedname" : "dart.io._HttpServer.bindSecure#certificate_name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io._HttpServer.bindSecure#requestClientCertificate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_HttpServer._" : 
        "name" : "_HttpServer._"
        "qualifiedname" : "dart.io._HttpServer._HttpServer._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_serverSocket" : 
            "name" : "_serverSocket"
            "qualifiedname" : "dart.io._HttpServer._HttpServer._#_serverSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ServerSocket"
            "value" : "null"
          "_closeServer" : 
            "name" : "_closeServer"
            "qualifiedname" : "dart.io._HttpServer._HttpServer._#_closeServer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_HttpServer.listenOn" : 
        "name" : "_HttpServer.listenOn"
        "qualifiedname" : "dart.io._HttpServer._HttpServer.listenOn"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_serverSocket" : 
            "name" : "_serverSocket"
            "qualifiedname" : "dart.io._HttpServer._HttpServer.listenOn#_serverSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ServerSocket"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpServer.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpServer.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpServer.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpServer.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpServer.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpServer.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io._HttpServer.port"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "sessionTimeout=" : 
        "name" : "sessionTimeout="
        "qualifiedname" : "dart.io._HttpServer.sessionTimeout="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "timeout" : 
            "name" : "timeout"
            "qualifiedname" : "dart.io._HttpServer.sessionTimeout=#timeout"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_handleRequest" : 
        "name" : "_handleRequest"
        "qualifiedname" : "dart.io._HttpServer._handleRequest"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpServer._handleRequest#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
      "_handleError" : 
        "name" : "_handleError"
        "qualifiedname" : "dart.io._HttpServer._handleError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._HttpServer._handleError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_connectionClosed" : 
        "name" : "_connectionClosed"
        "qualifiedname" : "dart.io._HttpServer._connectionClosed"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "connection" : 
            "name" : "connection"
            "qualifiedname" : "dart.io._HttpServer._connectionClosed#connection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpConnection"
            "value" : "null"
      "_sessionManager" : 
        "name" : "_sessionManager"
        "qualifiedname" : "dart.io._HttpServer._sessionManager"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io._HttpSessionManager"
        "parameters" : 
      "connectionsInfo" : 
        "name" : "connectionsInfo"
        "qualifiedname" : "dart.io._HttpServer.connectionsInfo"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.HttpConnectionsInfo"
        "parameters" : 
  "_HttpConnection" : 
    "name" : "_HttpConnection"
    "qualifiedname" : "dart.io._HttpConnection"
    "comment" : ""
    "superclass" : "dart.collection.LinkedListEntry"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_ACTIVE" : 
        "name" : "_ACTIVE"
        "qualifiedname" : "dart.io._HttpConnection._ACTIVE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_IDLE" : 
        "name" : "_IDLE"
        "qualifiedname" : "dart.io._HttpConnection._IDLE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_CLOSING" : 
        "name" : "_CLOSING"
        "qualifiedname" : "dart.io._HttpConnection._CLOSING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_DETACHED" : 
        "name" : "_DETACHED"
        "qualifiedname" : "dart.io._HttpConnection._DETACHED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_state" : 
        "name" : "_state"
        "qualifiedname" : "dart.io._HttpConnection._state"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io._HttpConnection._socket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.Socket"
      "_httpServer" : 
        "name" : "_httpServer"
        "qualifiedname" : "dart.io._HttpConnection._httpServer"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpServer"
      "_httpParser" : 
        "name" : "_httpParser"
        "qualifiedname" : "dart.io._HttpConnection._httpParser"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpParser"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io._HttpConnection._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_streamFuture" : 
        "name" : "_streamFuture"
        "qualifiedname" : "dart.io._HttpConnection._streamFuture"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Future"
    "methods" : 
      "_HttpConnection" : 
        "name" : "_HttpConnection"
        "qualifiedname" : "dart.io._HttpConnection._HttpConnection"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_socket" : 
            "name" : "_socket"
            "qualifiedname" : "dart.io._HttpConnection._HttpConnection#_socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
          "_httpServer" : 
            "name" : "_httpServer"
            "qualifiedname" : "dart.io._HttpConnection._HttpConnection#_httpServer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpServer"
            "value" : "null"
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io._HttpConnection.destroy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "detachSocket" : 
        "name" : "detachSocket"
        "qualifiedname" : "dart.io._HttpConnection.detachSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io._HttpConnection.connectionInfo"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "_isActive" : 
        "name" : "_isActive"
        "qualifiedname" : "dart.io._HttpConnection._isActive"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_isIdle" : 
        "name" : "_isIdle"
        "qualifiedname" : "dart.io._HttpConnection._isIdle"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_isClosing" : 
        "name" : "_isClosing"
        "qualifiedname" : "dart.io._HttpConnection._isClosing"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_isDetached" : 
        "name" : "_isDetached"
        "qualifiedname" : "dart.io._HttpConnection._isDetached"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "_HttpClient" : 
    "name" : "_HttpClient"
    "qualifiedname" : "dart.io._HttpClient"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClient"
    "variables" : 
      "_closing" : 
        "name" : "_closing"
        "qualifiedname" : "dart.io._HttpClient._closing"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_idleConnections" : 
        "name" : "_idleConnections"
        "qualifiedname" : "dart.io._HttpClient._idleConnections"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Map"
      "_activeConnections" : 
        "name" : "_activeConnections"
        "qualifiedname" : "dart.io._HttpClient._activeConnections"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Set"
      "_credentials" : 
        "name" : "_credentials"
        "qualifiedname" : "dart.io._HttpClient._credentials"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
      "_proxyCredentials" : 
        "name" : "_proxyCredentials"
        "qualifiedname" : "dart.io._HttpClient._proxyCredentials"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
      "_authenticate" : 
        "name" : "_authenticate"
        "qualifiedname" : "dart.io._HttpClient._authenticate"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Function"
      "_authenticateProxy" : 
        "name" : "_authenticateProxy"
        "qualifiedname" : "dart.io._HttpClient._authenticateProxy"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Function"
      "_findProxy" : 
        "name" : "_findProxy"
        "qualifiedname" : "dart.io._HttpClient._findProxy"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Function"
      "_idleTimeout" : 
        "name" : "_idleTimeout"
        "qualifiedname" : "dart.io._HttpClient._idleTimeout"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Duration"
      "_noActiveTimer" : 
        "name" : "_noActiveTimer"
        "qualifiedname" : "dart.io._HttpClient._noActiveTimer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Timer"
      "userAgent" : 
        "name" : "userAgent"
        "qualifiedname" : "dart.io._HttpClient.userAgent"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_platformEnvironmentCache" : 
        "name" : "_platformEnvironmentCache"
        "qualifiedname" : "dart.io._HttpClient._platformEnvironmentCache"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.Map"
    "methods" : 
      "idleTimeout" : 
        "name" : "idleTimeout"
        "qualifiedname" : "dart.io._HttpClient.idleTimeout"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Duration"
        "parameters" : 
      "idleTimeout=" : 
        "name" : "idleTimeout="
        "qualifiedname" : "dart.io._HttpClient.idleTimeout="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "timeout" : 
            "name" : "timeout"
            "qualifiedname" : "dart.io._HttpClient.idleTimeout=#timeout"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Duration"
            "value" : "null"
      "open" : 
        "name" : "open"
        "qualifiedname" : "dart.io._HttpClient.open"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClient.open#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpClient.open#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClient.open#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._HttpClient.open#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "openUrl" : 
        "name" : "openUrl"
        "qualifiedname" : "dart.io._HttpClient.openUrl"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClient.openUrl#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClient.openUrl#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "get" : 
        "name" : "get"
        "qualifiedname" : "dart.io._HttpClient.get"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpClient.get#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClient.get#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._HttpClient.get#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "getUrl" : 
        "name" : "getUrl"
        "qualifiedname" : "dart.io._HttpClient.getUrl"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClient.getUrl#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "post" : 
        "name" : "post"
        "qualifiedname" : "dart.io._HttpClient.post"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpClient.post#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClient.post#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._HttpClient.post#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "postUrl" : 
        "name" : "postUrl"
        "qualifiedname" : "dart.io._HttpClient.postUrl"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClient.postUrl#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpClient.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "force" : 
            "name" : "force"
            "qualifiedname" : "dart.io._HttpClient.close#force"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "authenticate=" : 
        "name" : "authenticate="
        "qualifiedname" : "dart.io._HttpClient.authenticate="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io._HttpClient.authenticate=#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "addCredentials" : 
        "name" : "addCredentials"
        "qualifiedname" : "dart.io._HttpClient.addCredentials"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClient.addCredentials#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io._HttpClient.addCredentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "cr" : 
            "name" : "cr"
            "qualifiedname" : "dart.io._HttpClient.addCredentials#cr"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientCredentials"
            "value" : "null"
      "authenticateProxy=" : 
        "name" : "authenticateProxy="
        "qualifiedname" : "dart.io._HttpClient.authenticateProxy="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io._HttpClient.authenticateProxy=#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "addProxyCredentials" : 
        "name" : "addProxyCredentials"
        "qualifiedname" : "dart.io._HttpClient.addProxyCredentials"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpClient.addProxyCredentials#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClient.addProxyCredentials#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io._HttpClient.addProxyCredentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "cr" : 
            "name" : "cr"
            "qualifiedname" : "dart.io._HttpClient.addProxyCredentials#cr"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientCredentials"
            "value" : "null"
      "findProxy=" : 
        "name" : "findProxy="
        "qualifiedname" : "dart.io._HttpClient.findProxy="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io._HttpClient.findProxy=#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "_openUrl" : 
        "name" : "_openUrl"
        "qualifiedname" : "dart.io._HttpClient._openUrl"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClient._openUrl#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "uri" : 
            "name" : "uri"
            "qualifiedname" : "dart.io._HttpClient._openUrl#uri"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "_openUrlFromRequest" : 
        "name" : "_openUrlFromRequest"
        "qualifiedname" : "dart.io._HttpClient._openUrlFromRequest"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClient._openUrlFromRequest#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "uri" : 
            "name" : "uri"
            "qualifiedname" : "dart.io._HttpClient._openUrlFromRequest#uri"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "previous" : 
            "name" : "previous"
            "qualifiedname" : "dart.io._HttpClient._openUrlFromRequest#previous"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientRequest"
            "value" : "null"
      "_returnConnection" : 
        "name" : "_returnConnection"
        "qualifiedname" : "dart.io._HttpClient._returnConnection"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "connection" : 
            "name" : "connection"
            "qualifiedname" : "dart.io._HttpClient._returnConnection#connection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientConnection"
            "value" : "null"
      "_connectionClosed" : 
        "name" : "_connectionClosed"
        "qualifiedname" : "dart.io._HttpClient._connectionClosed"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "connection" : 
            "name" : "connection"
            "qualifiedname" : "dart.io._HttpClient._connectionClosed#connection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientConnection"
            "value" : "null"
      "_updateTimers" : 
        "name" : "_updateTimers"
        "qualifiedname" : "dart.io._HttpClient._updateTimers"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_getConnection" : 
        "name" : "_getConnection"
        "qualifiedname" : "dart.io._HttpClient._getConnection"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "uriHost" : 
            "name" : "uriHost"
            "qualifiedname" : "dart.io._HttpClient._getConnection#uriHost"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "uriPort" : 
            "name" : "uriPort"
            "qualifiedname" : "dart.io._HttpClient._getConnection#uriPort"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "proxyConf" : 
            "name" : "proxyConf"
            "qualifiedname" : "dart.io._HttpClient._getConnection#proxyConf"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._ProxyConfiguration"
            "value" : "null"
          "isSecure" : 
            "name" : "isSecure"
            "qualifiedname" : "dart.io._HttpClient._getConnection#isSecure"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_findCredentials" : 
        "name" : "_findCredentials"
        "qualifiedname" : "dart.io._HttpClient._findCredentials"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._SiteCredentials"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClient._findCredentials#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "scheme" : 
            "name" : "scheme"
            "qualifiedname" : "dart.io._HttpClient._findCredentials#scheme"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._AuthenticationScheme"
            "value" : "null"
      "_findProxyCredentials" : 
        "name" : "_findProxyCredentials"
        "qualifiedname" : "dart.io._HttpClient._findProxyCredentials"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._ProxyCredentials"
        "parameters" : 
          "proxy" : 
            "name" : "proxy"
            "qualifiedname" : "dart.io._HttpClient._findProxyCredentials#proxy"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Proxy"
            "value" : "null"
          "scheme" : 
            "name" : "scheme"
            "qualifiedname" : "dart.io._HttpClient._findProxyCredentials#scheme"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._AuthenticationScheme"
            "value" : "null"
      "_removeCredentials" : 
        "name" : "_removeCredentials"
        "qualifiedname" : "dart.io._HttpClient._removeCredentials"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "cr" : 
            "name" : "cr"
            "qualifiedname" : "dart.io._HttpClient._removeCredentials#cr"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Credentials"
            "value" : "null"
      "_removeProxyCredentials" : 
        "name" : "_removeProxyCredentials"
        "qualifiedname" : "dart.io._HttpClient._removeProxyCredentials"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "cr" : 
            "name" : "cr"
            "qualifiedname" : "dart.io._HttpClient._removeProxyCredentials#cr"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Credentials"
            "value" : "null"
      "_findProxyFromEnvironment" : 
        "name" : "_findProxyFromEnvironment"
        "qualifiedname" : "dart.io._HttpClient._findProxyFromEnvironment"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClient._findProxyFromEnvironment#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "environment" : 
            "name" : "environment"
            "qualifiedname" : "dart.io._HttpClient._findProxyFromEnvironment#environment"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
  "_ConnnectionInfo" : 
    "name" : "_ConnnectionInfo"
    "qualifiedname" : "dart.io._ConnnectionInfo"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "connection" : 
        "name" : "connection"
        "qualifiedname" : "dart.io._ConnnectionInfo.connection"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpClientConnection"
      "proxy" : 
        "name" : "proxy"
        "qualifiedname" : "dart.io._ConnnectionInfo.proxy"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._Proxy"
    "methods" : 
      "_ConnnectionInfo" : 
        "name" : "_ConnnectionInfo"
        "qualifiedname" : "dart.io._ConnnectionInfo._ConnnectionInfo"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "connection" : 
            "name" : "connection"
            "qualifiedname" : "dart.io._ConnnectionInfo._ConnnectionInfo#connection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientConnection"
            "value" : "null"
          "proxy" : 
            "name" : "proxy"
            "qualifiedname" : "dart.io._ConnnectionInfo._ConnnectionInfo#proxy"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Proxy"
            "value" : "null"
  "_HttpClientConnection" : 
    "name" : "_HttpClientConnection"
    "qualifiedname" : "dart.io._HttpClientConnection"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "key" : 
        "name" : "key"
        "qualifiedname" : "dart.io._HttpClientConnection.key"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "_socket" : 
        "name" : "_socket"
        "qualifiedname" : "dart.io._HttpClientConnection._socket"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.Socket"
      "_proxyTunnel" : 
        "name" : "_proxyTunnel"
        "qualifiedname" : "dart.io._HttpClientConnection._proxyTunnel"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "_httpParser" : 
        "name" : "_httpParser"
        "qualifiedname" : "dart.io._HttpClientConnection._httpParser"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpParser"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io._HttpClientConnection._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_httpClient" : 
        "name" : "_httpClient"
        "qualifiedname" : "dart.io._HttpClientConnection._httpClient"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpClient"
      "_dispose" : 
        "name" : "_dispose"
        "qualifiedname" : "dart.io._HttpClientConnection._dispose"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_idleTimer" : 
        "name" : "_idleTimer"
        "qualifiedname" : "dart.io._HttpClientConnection._idleTimer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Timer"
      "closed" : 
        "name" : "closed"
        "qualifiedname" : "dart.io._HttpClientConnection.closed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_nextResponseCompleter" : 
        "name" : "_nextResponseCompleter"
        "qualifiedname" : "dart.io._HttpClientConnection._nextResponseCompleter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_streamFuture" : 
        "name" : "_streamFuture"
        "qualifiedname" : "dart.io._HttpClientConnection._streamFuture"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Future"
    "methods" : 
      "_HttpClientConnection" : 
        "name" : "_HttpClientConnection"
        "qualifiedname" : "dart.io._HttpClientConnection._HttpClientConnection"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "key" : 
            "name" : "key"
            "qualifiedname" : "dart.io._HttpClientConnection._HttpClientConnection#key"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "_socket" : 
            "name" : "_socket"
            "qualifiedname" : "dart.io._HttpClientConnection._HttpClientConnection#_socket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Socket"
            "value" : "null"
          "_httpClient" : 
            "name" : "_httpClient"
            "qualifiedname" : "dart.io._HttpClientConnection._HttpClientConnection#_httpClient"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClient"
            "value" : "null"
          "_proxyTunnel" : 
            "name" : "_proxyTunnel"
            "qualifiedname" : "dart.io._HttpClientConnection._HttpClientConnection#_proxyTunnel"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "send" : 
        "name" : "send"
        "qualifiedname" : "dart.io._HttpClientConnection.send"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._HttpClientRequest"
        "parameters" : 
          "uri" : 
            "name" : "uri"
            "qualifiedname" : "dart.io._HttpClientConnection.send#uri"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClientConnection.send#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClientConnection.send#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "proxy" : 
            "name" : "proxy"
            "qualifiedname" : "dart.io._HttpClientConnection.send#proxy"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Proxy"
            "value" : "null"
      "detachSocket" : 
        "name" : "detachSocket"
        "qualifiedname" : "dart.io._HttpClientConnection.detachSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io._HttpClientConnection.destroy"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpClientConnection.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "createProxyTunnel" : 
        "name" : "createProxyTunnel"
        "qualifiedname" : "dart.io._HttpClientConnection.createProxyTunnel"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpClientConnection.createProxyTunnel#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClientConnection.createProxyTunnel#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "proxy" : 
            "name" : "proxy"
            "qualifiedname" : "dart.io._HttpClientConnection.createProxyTunnel#proxy"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io._HttpClientConnection.connectionInfo"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "makeKey" : 
        "name" : "makeKey"
        "qualifiedname" : "dart.io._HttpClientConnection.makeKey"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "isSecure" : 
            "name" : "isSecure"
            "qualifiedname" : "dart.io._HttpClientConnection.makeKey#isSecure"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpClientConnection.makeKey#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpClientConnection.makeKey#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "stopTimer" : 
        "name" : "stopTimer"
        "qualifiedname" : "dart.io._HttpClientConnection.stopTimer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "startTimer" : 
        "name" : "startTimer"
        "qualifiedname" : "dart.io._HttpClientConnection.startTimer"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_HttpOutgoing" : 
    "name" : "_HttpOutgoing"
    "qualifiedname" : "dart.io._HttpOutgoing"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamConsumer"
    "variables" : 
      "_doneCompleter" : 
        "name" : "_doneCompleter"
        "qualifiedname" : "dart.io._HttpOutgoing._doneCompleter"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_consumer" : 
        "name" : "_consumer"
        "qualifiedname" : "dart.io._HttpOutgoing._consumer"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.StreamConsumer"
    "methods" : 
      "_HttpOutgoing" : 
        "name" : "_HttpOutgoing"
        "qualifiedname" : "dart.io._HttpOutgoing._HttpOutgoing"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_consumer" : 
            "name" : "_consumer"
            "qualifiedname" : "dart.io._HttpOutgoing._HttpOutgoing#_consumer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.StreamConsumer"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._HttpOutgoing.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._HttpOutgoing.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpOutgoing.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._HttpOutgoing.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_ContentLengthValidator" : 
    "name" : "_ContentLengthValidator"
    "qualifiedname" : "dart.io._ContentLengthValidator"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "expectedContentLength" : 
        "name" : "expectedContentLength"
        "qualifiedname" : "dart.io._ContentLengthValidator.expectedContentLength"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_bytesWritten" : 
        "name" : "_bytesWritten"
        "qualifiedname" : "dart.io._ContentLengthValidator._bytesWritten"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_ContentLengthValidator" : 
        "name" : "_ContentLengthValidator"
        "qualifiedname" : "dart.io._ContentLengthValidator._ContentLengthValidator"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "expectedContentLength" : 
            "name" : "expectedContentLength"
            "qualifiedname" : "dart.io._ContentLengthValidator._ContentLengthValidator#expectedContentLength"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._ContentLengthValidator.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._ContentLengthValidator.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._ContentLengthValidator.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "handleDone" : 
        "name" : "handleDone"
        "qualifiedname" : "dart.io._ContentLengthValidator.handleDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._ContentLengthValidator.handleDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
  "_ChunkedTransformer" : 
    "name" : "_ChunkedTransformer"
    "qualifiedname" : "dart.io._ChunkedTransformer"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_pendingFooter" : 
        "name" : "_pendingFooter"
        "qualifiedname" : "dart.io._ChunkedTransformer._pendingFooter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._ChunkedTransformer.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._ChunkedTransformer.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._ChunkedTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "handleDone" : 
        "name" : "handleDone"
        "qualifiedname" : "dart.io._ChunkedTransformer.handleDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._ChunkedTransformer.handleDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "_chunkHeader" : 
        "name" : "_chunkHeader"
        "qualifiedname" : "dart.io._ChunkedTransformer._chunkHeader"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io._ChunkedTransformer._chunkHeader#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_footerAndChunk0Length" : 
        "name" : "_footerAndChunk0Length"
        "qualifiedname" : "dart.io._ChunkedTransformer._footerAndChunk0Length"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
      "_chunk0Length" : 
        "name" : "_chunk0Length"
        "qualifiedname" : "dart.io._ChunkedTransformer._chunk0Length"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
  "_HttpClientRequest" : 
    "name" : "_HttpClientRequest"
    "qualifiedname" : "dart.io._HttpClientRequest"
    "comment" : ""
    "superclass" : "dart.io._HttpOutboundMessage"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClientRequest"
    "variables" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io._HttpClientRequest.method"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io._HttpClientRequest.uri"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Uri"
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io._HttpClientRequest.cookies"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
      "_httpClient" : 
        "name" : "_httpClient"
        "qualifiedname" : "dart.io._HttpClientRequest._httpClient"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpClient"
      "_httpClientConnection" : 
        "name" : "_httpClientConnection"
        "qualifiedname" : "dart.io._HttpClientRequest._httpClientConnection"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpClientConnection"
      "_responseCompleter" : 
        "name" : "_responseCompleter"
        "qualifiedname" : "dart.io._HttpClientRequest._responseCompleter"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_proxy" : 
        "name" : "_proxy"
        "qualifiedname" : "dart.io._HttpClientRequest._proxy"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._Proxy"
      "_response" : 
        "name" : "_response"
        "qualifiedname" : "dart.io._HttpClientRequest._response"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Future"
      "_followRedirects" : 
        "name" : "_followRedirects"
        "qualifiedname" : "dart.io._HttpClientRequest._followRedirects"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_maxRedirects" : 
        "name" : "_maxRedirects"
        "qualifiedname" : "dart.io._HttpClientRequest._maxRedirects"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_responseRedirects" : 
        "name" : "_responseRedirects"
        "qualifiedname" : "dart.io._HttpClientRequest._responseRedirects"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_HttpClientRequest" : 
        "name" : "_HttpClientRequest"
        "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "outgoing" : 
            "name" : "outgoing"
            "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest#outgoing"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpOutgoing"
            "value" : "null"
          "uri" : 
            "name" : "uri"
            "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest#uri"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "_proxy" : 
            "name" : "_proxy"
            "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest#_proxy"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Proxy"
            "value" : "null"
          "_httpClient" : 
            "name" : "_httpClient"
            "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest#_httpClient"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClient"
            "value" : "null"
          "_httpClientConnection" : 
            "name" : "_httpClientConnection"
            "qualifiedname" : "dart.io._HttpClientRequest._HttpClientRequest#_httpClientConnection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientConnection"
            "value" : "null"
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._HttpClientRequest.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpClientRequest.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "maxRedirects" : 
        "name" : "maxRedirects"
        "qualifiedname" : "dart.io._HttpClientRequest.maxRedirects"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "maxRedirects=" : 
        "name" : "maxRedirects="
        "qualifiedname" : "dart.io._HttpClientRequest.maxRedirects="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "maxRedirects" : 
            "name" : "maxRedirects"
            "qualifiedname" : "dart.io._HttpClientRequest.maxRedirects=#maxRedirects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "followRedirects" : 
        "name" : "followRedirects"
        "qualifiedname" : "dart.io._HttpClientRequest.followRedirects"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "followRedirects=" : 
        "name" : "followRedirects="
        "qualifiedname" : "dart.io._HttpClientRequest.followRedirects="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "followRedirects" : 
            "name" : "followRedirects"
            "qualifiedname" : "dart.io._HttpClientRequest.followRedirects=#followRedirects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io._HttpClientRequest.connectionInfo"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "_onIncoming" : 
        "name" : "_onIncoming"
        "qualifiedname" : "dart.io._HttpClientRequest._onIncoming"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "incoming" : 
            "name" : "incoming"
            "qualifiedname" : "dart.io._HttpClientRequest._onIncoming#incoming"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpIncoming"
            "value" : "null"
      "_onError" : 
        "name" : "_onError"
        "qualifiedname" : "dart.io._HttpClientRequest._onError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._HttpClientRequest._onError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_requestUri" : 
        "name" : "_requestUri"
        "qualifiedname" : "dart.io._HttpClientRequest._requestUri"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_writeHeader" : 
        "name" : "_writeHeader"
        "qualifiedname" : "dart.io._HttpClientRequest._writeHeader"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_HttpResponse" : 
    "name" : "_HttpResponse"
    "qualifiedname" : "dart.io._HttpResponse"
    "comment" : ""
    "superclass" : "dart.io._HttpOutboundMessage"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpResponse"
    "variables" : 
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io._HttpResponse.statusCode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_reasonPhrase" : 
        "name" : "_reasonPhrase"
        "qualifiedname" : "dart.io._HttpResponse._reasonPhrase"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_cookies" : 
        "name" : "_cookies"
        "qualifiedname" : "dart.io._HttpResponse._cookies"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_httpRequest" : 
        "name" : "_httpRequest"
        "qualifiedname" : "dart.io._HttpResponse._httpRequest"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpRequest"
    "methods" : 
      "_HttpResponse" : 
        "name" : "_HttpResponse"
        "qualifiedname" : "dart.io._HttpResponse._HttpResponse"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "protocolVersion" : 
            "name" : "protocolVersion"
            "qualifiedname" : "dart.io._HttpResponse._HttpResponse#protocolVersion"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "_outgoing" : 
            "name" : "_outgoing"
            "qualifiedname" : "dart.io._HttpResponse._HttpResponse#_outgoing"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpOutgoing"
            "value" : "null"
          "serverHeader" : 
            "name" : "serverHeader"
            "qualifiedname" : "dart.io._HttpResponse._HttpResponse#serverHeader"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io._HttpResponse.cookies"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io._HttpResponse.reasonPhrase"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "reasonPhrase=" : 
        "name" : "reasonPhrase="
        "qualifiedname" : "dart.io._HttpResponse.reasonPhrase="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "reasonPhrase" : 
            "name" : "reasonPhrase"
            "qualifiedname" : "dart.io._HttpResponse.reasonPhrase=#reasonPhrase"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "detachSocket" : 
        "name" : "detachSocket"
        "qualifiedname" : "dart.io._HttpResponse.detachSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io._HttpResponse.connectionInfo"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "_writeHeader" : 
        "name" : "_writeHeader"
        "qualifiedname" : "dart.io._HttpResponse._writeHeader"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_findReasonPhrase" : 
        "name" : "_findReasonPhrase"
        "qualifiedname" : "dart.io._HttpResponse._findReasonPhrase"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "statusCode" : 
            "name" : "statusCode"
            "qualifiedname" : "dart.io._HttpResponse._findReasonPhrase#statusCode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_BufferTransformer" : 
    "name" : "_BufferTransformer"
    "qualifiedname" : "dart.io._BufferTransformer"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "MIN_CHUNK_SIZE" : 
        "name" : "MIN_CHUNK_SIZE"
        "qualifiedname" : "dart.io._BufferTransformer.MIN_CHUNK_SIZE"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "MAX_BUFFER_SIZE" : 
        "name" : "MAX_BUFFER_SIZE"
        "qualifiedname" : "dart.io._BufferTransformer.MAX_BUFFER_SIZE"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_buffer" : 
        "name" : "_buffer"
        "qualifiedname" : "dart.io._BufferTransformer._buffer"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._BufferList"
    "methods" : 
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._BufferTransformer.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._BufferTransformer.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._BufferTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "handleDone" : 
        "name" : "handleDone"
        "qualifiedname" : "dart.io._BufferTransformer.handleDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._BufferTransformer.handleDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "flush" : 
        "name" : "flush"
        "qualifiedname" : "dart.io._BufferTransformer.flush"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._BufferTransformer.flush#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
  "_HttpOutboundConsumer" : 
    "name" : "_HttpOutboundConsumer"
    "qualifiedname" : "dart.io._HttpOutboundConsumer"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamConsumer"
    "variables" : 
      "_outbound" : 
        "name" : "_outbound"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._outbound"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpOutboundMessage"
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
      "_closeCompleter" : 
        "name" : "_closeCompleter"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._closeCompleter"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_completer" : 
        "name" : "_completer"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._completer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_socketError" : 
        "name" : "_socketError"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._socketError"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_HttpOutboundConsumer" : 
        "name" : "_HttpOutboundConsumer"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._HttpOutboundConsumer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_outbound" : 
            "name" : "_outbound"
            "qualifiedname" : "dart.io._HttpOutboundConsumer._HttpOutboundConsumer#_outbound"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpOutboundMessage"
            "value" : "null"
      "_cancel" : 
        "name" : "_cancel"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._cancel"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_ensureController" : 
        "name" : "_ensureController"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._ensureController"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_done" : 
        "name" : "_done"
        "qualifiedname" : "dart.io._HttpOutboundConsumer._done"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._HttpOutboundConsumer._done#error"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._HttpOutboundConsumer.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._HttpOutboundConsumer.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpOutboundConsumer.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_HttpOutboundMessage" : 
    "name" : "_HttpOutboundMessage"
    "qualifiedname" : "dart.io._HttpOutboundMessage"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOSink"
    "variables" : 
      "_ignoreBody" : 
        "name" : "_ignoreBody"
        "qualifiedname" : "dart.io._HttpOutboundMessage._ignoreBody"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_headersWritten" : 
        "name" : "_headersWritten"
        "qualifiedname" : "dart.io._HttpOutboundMessage._headersWritten"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_asGZip" : 
        "name" : "_asGZip"
        "qualifiedname" : "dart.io._HttpOutboundMessage._asGZip"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_headersSink" : 
        "name" : "_headersSink"
        "qualifiedname" : "dart.io._HttpOutboundMessage._headersSink"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.IOSink"
      "_dataSink" : 
        "name" : "_dataSink"
        "qualifiedname" : "dart.io._HttpOutboundMessage._dataSink"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.IOSink"
      "_outgoing" : 
        "name" : "_outgoing"
        "qualifiedname" : "dart.io._HttpOutboundMessage._outgoing"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpOutgoing"
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io._HttpOutboundMessage.headers"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpHeaders"
    "methods" : 
      "_HttpOutboundMessage" : 
        "name" : "_HttpOutboundMessage"
        "qualifiedname" : "dart.io._HttpOutboundMessage._HttpOutboundMessage"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "protocolVersion" : 
            "name" : "protocolVersion"
            "qualifiedname" : "dart.io._HttpOutboundMessage._HttpOutboundMessage#protocolVersion"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "outgoing" : 
            "name" : "outgoing"
            "qualifiedname" : "dart.io._HttpOutboundMessage._HttpOutboundMessage#outgoing"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpOutgoing"
            "value" : "null"
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io._HttpOutboundMessage.contentLength"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "contentLength=" : 
        "name" : "contentLength="
        "qualifiedname" : "dart.io._HttpOutboundMessage.contentLength="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "contentLength" : 
            "name" : "contentLength"
            "qualifiedname" : "dart.io._HttpOutboundMessage.contentLength=#contentLength"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io._HttpOutboundMessage.persistentConnection"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "persistentConnection=" : 
        "name" : "persistentConnection="
        "qualifiedname" : "dart.io._HttpOutboundMessage.persistentConnection="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "p" : 
            "name" : "p"
            "qualifiedname" : "dart.io._HttpOutboundMessage.persistentConnection=#p"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "encoding" : 
        "name" : "encoding"
        "qualifiedname" : "dart.io._HttpOutboundMessage.encoding"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Encoding"
        "parameters" : 
      "encoding=" : 
        "name" : "encoding="
        "qualifiedname" : "dart.io._HttpOutboundMessage.encoding="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpOutboundMessage.encoding=#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._HttpOutboundMessage.write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "obj" : 
            "name" : "obj"
            "qualifiedname" : "dart.io._HttpOutboundMessage.write#obj"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "writeAll" : 
        "name" : "writeAll"
        "qualifiedname" : "dart.io._HttpOutboundMessage.writeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "objects" : 
            "name" : "objects"
            "qualifiedname" : "dart.io._HttpOutboundMessage.writeAll#objects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Iterable"
            "value" : "null"
          "separator" : 
            "name" : "separator"
            "qualifiedname" : "dart.io._HttpOutboundMessage.writeAll#separator"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "writeln" : 
        "name" : "writeln"
        "qualifiedname" : "dart.io._HttpOutboundMessage.writeln"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "obj" : 
            "name" : "obj"
            "qualifiedname" : "dart.io._HttpOutboundMessage.writeln#obj"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.Object"
            "value" : "\"\""
      "writeCharCode" : 
        "name" : "writeCharCode"
        "qualifiedname" : "dart.io._HttpOutboundMessage.writeCharCode"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "charCode" : 
            "name" : "charCode"
            "qualifiedname" : "dart.io._HttpOutboundMessage.writeCharCode#charCode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._HttpOutboundMessage.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._HttpOutboundMessage.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "addError" : 
        "name" : "addError"
        "qualifiedname" : "dart.io._HttpOutboundMessage.addError"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "error" : 
            "name" : "error"
            "qualifiedname" : "dart.io._HttpOutboundMessage.addError#error"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._HttpOutboundMessage.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._HttpOutboundMessage.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpOutboundMessage.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io._HttpOutboundMessage.done"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_writeHeaders" : 
        "name" : "_writeHeaders"
        "qualifiedname" : "dart.io._HttpOutboundMessage._writeHeaders"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "drainRequest" : 
            "name" : "drainRequest"
            "qualifiedname" : "dart.io._HttpOutboundMessage._writeHeaders#drainRequest"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "true"
      "_addStream" : 
        "name" : "_addStream"
        "qualifiedname" : "dart.io._HttpOutboundMessage._addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._HttpOutboundMessage._addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "_close" : 
        "name" : "_close"
        "qualifiedname" : "dart.io._HttpOutboundMessage._close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_writeHeader" : 
        "name" : "_writeHeader"
        "qualifiedname" : "dart.io._HttpOutboundMessage._writeHeader"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "_HttpClientResponse" : 
    "name" : "_HttpClientResponse"
    "qualifiedname" : "dart.io._HttpClientResponse"
    "comment" : ""
    "superclass" : "dart.io._HttpInboundMessage"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClientResponse"
    "variables" : 
      "_httpClient" : 
        "name" : "_httpClient"
        "qualifiedname" : "dart.io._HttpClientResponse._httpClient"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpClient"
      "_httpRequest" : 
        "name" : "_httpRequest"
        "qualifiedname" : "dart.io._HttpClientResponse._httpRequest"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpClientRequest"
      "_cookies" : 
        "name" : "_cookies"
        "qualifiedname" : "dart.io._HttpClientResponse._cookies"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "redirects" : 
        "name" : "redirects"
        "qualifiedname" : "dart.io._HttpClientResponse.redirects"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "_HttpClientResponse" : 
        "name" : "_HttpClientResponse"
        "qualifiedname" : "dart.io._HttpClientResponse._HttpClientResponse"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_incoming" : 
            "name" : "_incoming"
            "qualifiedname" : "dart.io._HttpClientResponse._HttpClientResponse#_incoming"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpIncoming"
            "value" : "null"
          "_httpRequest" : 
            "name" : "_httpRequest"
            "qualifiedname" : "dart.io._HttpClientResponse._HttpClientResponse#_httpRequest"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClientRequest"
            "value" : "null"
          "_httpClient" : 
            "name" : "_httpClient"
            "qualifiedname" : "dart.io._HttpClientResponse._HttpClientResponse#_httpClient"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpClient"
            "value" : "null"
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io._HttpClientResponse.statusCode"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io._HttpClientResponse.reasonPhrase"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "certificate" : 
        "name" : "certificate"
        "qualifiedname" : "dart.io._HttpClientResponse.certificate"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io._HttpClientResponse.cookies"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "isRedirect" : 
        "name" : "isRedirect"
        "qualifiedname" : "dart.io._HttpClientResponse.isRedirect"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "redirect" : 
        "name" : "redirect"
        "qualifiedname" : "dart.io._HttpClientResponse.redirect"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io._HttpClientResponse.redirect#method"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io._HttpClientResponse.redirect#url"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "followLoops" : 
            "name" : "followLoops"
            "qualifiedname" : "dart.io._HttpClientResponse.redirect#followLoops"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpClientResponse.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpClientResponse.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpClientResponse.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpClientResponse.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpClientResponse.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "detachSocket" : 
        "name" : "detachSocket"
        "qualifiedname" : "dart.io._HttpClientResponse.detachSocket"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io._HttpClientResponse.connectionInfo"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "_shouldAuthenticateProxy" : 
        "name" : "_shouldAuthenticateProxy"
        "qualifiedname" : "dart.io._HttpClientResponse._shouldAuthenticateProxy"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_shouldAuthenticate" : 
        "name" : "_shouldAuthenticate"
        "qualifiedname" : "dart.io._HttpClientResponse._shouldAuthenticate"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_authenticate" : 
        "name" : "_authenticate"
        "qualifiedname" : "dart.io._HttpClientResponse._authenticate"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "proxyAuth" : 
            "name" : "proxyAuth"
            "qualifiedname" : "dart.io._HttpClientResponse._authenticate#proxyAuth"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "_HttpRequest" : 
    "name" : "_HttpRequest"
    "qualifiedname" : "dart.io._HttpRequest"
    "comment" : ""
    "superclass" : "dart.io._HttpInboundMessage"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpRequest"
    "variables" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io._HttpRequest.response"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.HttpResponse"
      "_httpServer" : 
        "name" : "_httpServer"
        "qualifiedname" : "dart.io._HttpRequest._httpServer"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpServer"
      "_httpConnection" : 
        "name" : "_httpConnection"
        "qualifiedname" : "dart.io._HttpRequest._httpConnection"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpConnection"
      "_session" : 
        "name" : "_session"
        "qualifiedname" : "dart.io._HttpRequest._session"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io._HttpSession"
    "methods" : 
      "_HttpRequest" : 
        "name" : "_HttpRequest"
        "qualifiedname" : "dart.io._HttpRequest._HttpRequest"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._HttpRequest._HttpRequest#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpResponse"
            "value" : "null"
          "_incoming" : 
            "name" : "_incoming"
            "qualifiedname" : "dart.io._HttpRequest._HttpRequest#_incoming"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpIncoming"
            "value" : "null"
          "_httpServer" : 
            "name" : "_httpServer"
            "qualifiedname" : "dart.io._HttpRequest._HttpRequest#_httpServer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpServer"
            "value" : "null"
          "_httpConnection" : 
            "name" : "_httpConnection"
            "qualifiedname" : "dart.io._HttpRequest._HttpRequest#_httpConnection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpConnection"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpRequest.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpRequest.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpRequest.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpRequest.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpRequest.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io._HttpRequest.uri"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Uri"
        "parameters" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io._HttpRequest.method"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "session" : 
        "name" : "session"
        "qualifiedname" : "dart.io._HttpRequest.session"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpSession"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io._HttpRequest.connectionInfo"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "certificate" : 
        "name" : "certificate"
        "qualifiedname" : "dart.io._HttpRequest.certificate"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
  "_HttpInboundMessage" : 
    "name" : "_HttpInboundMessage"
    "qualifiedname" : "dart.io._HttpInboundMessage"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_incoming" : 
        "name" : "_incoming"
        "qualifiedname" : "dart.io._HttpInboundMessage._incoming"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpIncoming"
      "_cookies" : 
        "name" : "_cookies"
        "qualifiedname" : "dart.io._HttpInboundMessage._cookies"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_HttpInboundMessage" : 
        "name" : "_HttpInboundMessage"
        "qualifiedname" : "dart.io._HttpInboundMessage._HttpInboundMessage"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_incoming" : 
            "name" : "_incoming"
            "qualifiedname" : "dart.io._HttpInboundMessage._HttpInboundMessage#_incoming"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpIncoming"
            "value" : "null"
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io._HttpInboundMessage.cookies"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io._HttpInboundMessage.headers"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io._HttpHeaders"
        "parameters" : 
      "protocolVersion" : 
        "name" : "protocolVersion"
        "qualifiedname" : "dart.io._HttpInboundMessage.protocolVersion"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io._HttpInboundMessage.contentLength"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io._HttpInboundMessage.persistentConnection"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "_HttpIncoming" : 
    "name" : "_HttpIncoming"
    "qualifiedname" : "dart.io._HttpIncoming"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_transferLength" : 
        "name" : "_transferLength"
        "qualifiedname" : "dart.io._HttpIncoming._transferLength"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_dataCompleter" : 
        "name" : "_dataCompleter"
        "qualifiedname" : "dart.io._HttpIncoming._dataCompleter"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.async.Completer"
      "_stream" : 
        "name" : "_stream"
        "qualifiedname" : "dart.io._HttpIncoming._stream"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Stream"
      "fullBodyRead" : 
        "name" : "fullBodyRead"
        "qualifiedname" : "dart.io._HttpIncoming.fullBodyRead"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io._HttpIncoming.headers"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._HttpHeaders"
      "upgraded" : 
        "name" : "upgraded"
        "qualifiedname" : "dart.io._HttpIncoming.upgraded"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io._HttpIncoming.statusCode"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io._HttpIncoming.reasonPhrase"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io._HttpIncoming.method"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io._HttpIncoming.uri"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Uri"
      "hasSubscriber" : 
        "name" : "hasSubscriber"
        "qualifiedname" : "dart.io._HttpIncoming.hasSubscriber"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "transferLength" : 
        "name" : "transferLength"
        "qualifiedname" : "dart.io._HttpIncoming.transferLength"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "_HttpIncoming" : 
        "name" : "_HttpIncoming"
        "qualifiedname" : "dart.io._HttpIncoming._HttpIncoming"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "headers" : 
            "name" : "headers"
            "qualifiedname" : "dart.io._HttpIncoming._HttpIncoming#headers"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._HttpHeaders"
            "value" : "null"
          "_transferLength" : 
            "name" : "_transferLength"
            "qualifiedname" : "dart.io._HttpIncoming._HttpIncoming#_transferLength"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "_stream" : 
            "name" : "_stream"
            "qualifiedname" : "dart.io._HttpIncoming._HttpIncoming#_stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._HttpIncoming.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._HttpIncoming.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._HttpIncoming.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._HttpIncoming.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._HttpIncoming.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "dataDone" : 
        "name" : "dataDone"
        "qualifiedname" : "dart.io._HttpIncoming.dataDone"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HttpIncoming.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "closing" : 
            "name" : "closing"
            "qualifiedname" : "dart.io._HttpIncoming.close#closing"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
  "_Cookie" : 
    "name" : "_Cookie"
    "qualifiedname" : "dart.io._Cookie"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Cookie"
    "variables" : 
      "name" : 
        "name" : "name"
        "qualifiedname" : "dart.io._Cookie.name"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io._Cookie.value"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "expires" : 
        "name" : "expires"
        "qualifiedname" : "dart.io._Cookie.expires"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "maxAge" : 
        "name" : "maxAge"
        "qualifiedname" : "dart.io._Cookie.maxAge"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "domain" : 
        "name" : "domain"
        "qualifiedname" : "dart.io._Cookie.domain"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._Cookie.path"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "httpOnly" : 
        "name" : "httpOnly"
        "qualifiedname" : "dart.io._Cookie.httpOnly"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "secure" : 
        "name" : "secure"
        "qualifiedname" : "dart.io._Cookie.secure"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_Cookie" : 
        "name" : "_Cookie"
        "qualifiedname" : "dart.io._Cookie._Cookie"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._Cookie._Cookie#name"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._Cookie._Cookie#value"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_Cookie.fromSetCookieValue" : 
        "name" : "_Cookie.fromSetCookieValue"
        "qualifiedname" : "dart.io._Cookie._Cookie.fromSetCookieValue"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._Cookie._Cookie.fromSetCookieValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_parseSetCookieValue" : 
        "name" : "_parseSetCookieValue"
        "qualifiedname" : "dart.io._Cookie._parseSetCookieValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "s" : 
            "name" : "s"
            "qualifiedname" : "dart.io._Cookie._parseSetCookieValue#s"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._Cookie.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_ContentType" : 
    "name" : "_ContentType"
    "qualifiedname" : "dart.io._ContentType"
    "comment" : ""
    "superclass" : "dart.io._HeaderValue"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.ContentType"
    "variables" : 
      "_primaryType" : 
        "name" : "_primaryType"
        "qualifiedname" : "dart.io._ContentType._primaryType"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_subType" : 
        "name" : "_subType"
        "qualifiedname" : "dart.io._ContentType._subType"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "_ContentType" : 
        "name" : "_ContentType"
        "qualifiedname" : "dart.io._ContentType._ContentType"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "primaryType" : 
            "name" : "primaryType"
            "qualifiedname" : "dart.io._ContentType._ContentType#primaryType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "subType" : 
            "name" : "subType"
            "qualifiedname" : "dart.io._ContentType._ContentType#subType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "charset" : 
            "name" : "charset"
            "qualifiedname" : "dart.io._ContentType._ContentType#charset"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "parameters" : 
            "name" : "parameters"
            "qualifiedname" : "dart.io._ContentType._ContentType#parameters"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "_ContentType._" : 
        "name" : "_ContentType._"
        "qualifiedname" : "dart.io._ContentType._ContentType._"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io._ContentType.parse"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io._ContentType"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._ContentType.parse#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "mimeType" : 
        "name" : "mimeType"
        "qualifiedname" : "dart.io._ContentType.mimeType"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "primaryType" : 
        "name" : "primaryType"
        "qualifiedname" : "dart.io._ContentType.primaryType"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "subType" : 
        "name" : "subType"
        "qualifiedname" : "dart.io._ContentType.subType"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "charset" : 
        "name" : "charset"
        "qualifiedname" : "dart.io._ContentType.charset"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_HeaderValue" : 
    "name" : "_HeaderValue"
    "qualifiedname" : "dart.io._HeaderValue"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HeaderValue"
    "variables" : 
      "_value" : 
        "name" : "_value"
        "qualifiedname" : "dart.io._HeaderValue._value"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_parameters" : 
        "name" : "_parameters"
        "qualifiedname" : "dart.io._HeaderValue._parameters"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Map"
    "methods" : 
      "_HeaderValue" : 
        "name" : "_HeaderValue"
        "qualifiedname" : "dart.io._HeaderValue._HeaderValue"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_value" : 
            "name" : "_value"
            "qualifiedname" : "dart.io._HeaderValue._HeaderValue#_value"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "_parameters" : 
            "name" : "_parameters"
            "qualifiedname" : "dart.io._HeaderValue._HeaderValue#_parameters"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io._HeaderValue.parse"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io._HeaderValue"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HeaderValue.parse#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "parameterSeparator" : 
            "name" : "parameterSeparator"
            "qualifiedname" : "dart.io._HeaderValue.parse#parameterSeparator"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "\";\""
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io._HeaderValue.value"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "parameters" : 
        "name" : "parameters"
        "qualifiedname" : "dart.io._HeaderValue.parameters"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Map"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._HeaderValue.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_parse" : 
        "name" : "_parse"
        "qualifiedname" : "dart.io._HeaderValue._parse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "s" : 
            "name" : "s"
            "qualifiedname" : "dart.io._HeaderValue._parse#s"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "parameterSeparator" : 
            "name" : "parameterSeparator"
            "qualifiedname" : "dart.io._HeaderValue._parse#parameterSeparator"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_HttpHeaders" : 
    "name" : "_HttpHeaders"
    "qualifiedname" : "dart.io._HttpHeaders"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpHeaders"
    "variables" : 
      "_mutable" : 
        "name" : "_mutable"
        "qualifiedname" : "dart.io._HttpHeaders._mutable"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_headers" : 
        "name" : "_headers"
        "qualifiedname" : "dart.io._HttpHeaders._headers"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Map"
      "_noFoldingHeaders" : 
        "name" : "_noFoldingHeaders"
        "qualifiedname" : "dart.io._HttpHeaders._noFoldingHeaders"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_contentLength" : 
        "name" : "_contentLength"
        "qualifiedname" : "dart.io._HttpHeaders._contentLength"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_chunkedTransferEncoding" : 
        "name" : "_chunkedTransferEncoding"
        "qualifiedname" : "dart.io._HttpHeaders._chunkedTransferEncoding"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "protocolVersion" : 
        "name" : "protocolVersion"
        "qualifiedname" : "dart.io._HttpHeaders.protocolVersion"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "_host" : 
        "name" : "_host"
        "qualifiedname" : "dart.io._HttpHeaders._host"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_port" : 
        "name" : "_port"
        "qualifiedname" : "dart.io._HttpHeaders._port"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_HttpHeaders" : 
        "name" : "_HttpHeaders"
        "qualifiedname" : "dart.io._HttpHeaders._HttpHeaders"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "protocolVersion" : 
            "name" : "protocolVersion"
            "qualifiedname" : "dart.io._HttpHeaders._HttpHeaders#protocolVersion"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.io._HttpHeaders.[]"
        "comment" : ""
        "type" : "operator"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.[]#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io._HttpHeaders.value"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.value#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._HttpHeaders.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.add#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpHeaders.add#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "set" : 
        "name" : "set"
        "qualifiedname" : "dart.io._HttpHeaders.set"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.set#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpHeaders.set#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.io._HttpHeaders.remove"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.remove#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpHeaders.remove#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "removeAll" : 
        "name" : "removeAll"
        "qualifiedname" : "dart.io._HttpHeaders.removeAll"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.removeAll#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.io._HttpHeaders.forEach"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io._HttpHeaders.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "noFolding" : 
        "name" : "noFolding"
        "qualifiedname" : "dart.io._HttpHeaders.noFolding"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders.noFolding#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io._HttpHeaders.persistentConnection"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "persistentConnection=" : 
        "name" : "persistentConnection="
        "qualifiedname" : "dart.io._HttpHeaders.persistentConnection="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "persistentConnection" : 
            "name" : "persistentConnection"
            "qualifiedname" : "dart.io._HttpHeaders.persistentConnection=#persistentConnection"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io._HttpHeaders.contentLength"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "contentLength=" : 
        "name" : "contentLength="
        "qualifiedname" : "dart.io._HttpHeaders.contentLength="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "contentLength" : 
            "name" : "contentLength"
            "qualifiedname" : "dart.io._HttpHeaders.contentLength=#contentLength"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "chunkedTransferEncoding" : 
        "name" : "chunkedTransferEncoding"
        "qualifiedname" : "dart.io._HttpHeaders.chunkedTransferEncoding"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "chunkedTransferEncoding=" : 
        "name" : "chunkedTransferEncoding="
        "qualifiedname" : "dart.io._HttpHeaders.chunkedTransferEncoding="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "chunkedTransferEncoding" : 
            "name" : "chunkedTransferEncoding"
            "qualifiedname" : "dart.io._HttpHeaders.chunkedTransferEncoding=#chunkedTransferEncoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "host" : 
        "name" : "host"
        "qualifiedname" : "dart.io._HttpHeaders.host"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "host=" : 
        "name" : "host="
        "qualifiedname" : "dart.io._HttpHeaders.host="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io._HttpHeaders.host=#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io._HttpHeaders.port"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "port=" : 
        "name" : "port="
        "qualifiedname" : "dart.io._HttpHeaders.port="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io._HttpHeaders.port=#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "ifModifiedSince" : 
        "name" : "ifModifiedSince"
        "qualifiedname" : "dart.io._HttpHeaders.ifModifiedSince"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.DateTime"
        "parameters" : 
      "ifModifiedSince=" : 
        "name" : "ifModifiedSince="
        "qualifiedname" : "dart.io._HttpHeaders.ifModifiedSince="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "ifModifiedSince" : 
            "name" : "ifModifiedSince"
            "qualifiedname" : "dart.io._HttpHeaders.ifModifiedSince=#ifModifiedSince"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
      "date" : 
        "name" : "date"
        "qualifiedname" : "dart.io._HttpHeaders.date"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.DateTime"
        "parameters" : 
      "date=" : 
        "name" : "date="
        "qualifiedname" : "dart.io._HttpHeaders.date="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "date" : 
            "name" : "date"
            "qualifiedname" : "dart.io._HttpHeaders.date=#date"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
      "expires" : 
        "name" : "expires"
        "qualifiedname" : "dart.io._HttpHeaders.expires"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.DateTime"
        "parameters" : 
      "expires=" : 
        "name" : "expires="
        "qualifiedname" : "dart.io._HttpHeaders.expires="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "expires" : 
            "name" : "expires"
            "qualifiedname" : "dart.io._HttpHeaders.expires=#expires"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io._HttpHeaders.contentType"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.ContentType"
        "parameters" : 
      "contentType=" : 
        "name" : "contentType="
        "qualifiedname" : "dart.io._HttpHeaders.contentType="
        "comment" : ""
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "contentType" : 
            "name" : "contentType"
            "qualifiedname" : "dart.io._HttpHeaders.contentType=#contentType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ContentType"
            "value" : "null"
      "_add" : 
        "name" : "_add"
        "qualifiedname" : "dart.io._HttpHeaders._add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders._add#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpHeaders._add#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_addValue" : 
        "name" : "_addValue"
        "qualifiedname" : "dart.io._HttpHeaders._addValue"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders._addValue#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpHeaders._addValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "_set" : 
        "name" : "_set"
        "qualifiedname" : "dart.io._HttpHeaders._set"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders._set#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._HttpHeaders._set#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_checkMutable" : 
        "name" : "_checkMutable"
        "qualifiedname" : "dart.io._HttpHeaders._checkMutable"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_updateHostHeader" : 
        "name" : "_updateHostHeader"
        "qualifiedname" : "dart.io._HttpHeaders._updateHostHeader"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_foldHeader" : 
        "name" : "_foldHeader"
        "qualifiedname" : "dart.io._HttpHeaders._foldHeader"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io._HttpHeaders._foldHeader#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_synchronize" : 
        "name" : "_synchronize"
        "qualifiedname" : "dart.io._HttpHeaders._synchronize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_finalize" : 
        "name" : "_finalize"
        "qualifiedname" : "dart.io._HttpHeaders._finalize"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_write" : 
        "name" : "_write"
        "qualifiedname" : "dart.io._HttpHeaders._write"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._HttpHeaders._write#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._BufferList"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._HttpHeaders.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_parseCookies" : 
        "name" : "_parseCookies"
        "qualifiedname" : "dart.io._HttpHeaders._parseCookies"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
  "_HttpClientResponseBody" : 
    "name" : "_HttpClientResponseBody"
    "qualifiedname" : "dart.io._HttpClientResponseBody"
    "comment" : ""
    "superclass" : "dart.io._HttpBody"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpClientResponseBody"
    "variables" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io._HttpClientResponseBody.response"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.HttpClientResponse"
    "methods" : 
      "_HttpClientResponseBody" : 
        "name" : "_HttpClientResponseBody"
        "qualifiedname" : "dart.io._HttpClientResponseBody._HttpClientResponseBody"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._HttpClientResponseBody._HttpClientResponseBody#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientResponse"
            "value" : "null"
          "body" : 
            "name" : "body"
            "qualifiedname" : "dart.io._HttpClientResponseBody._HttpClientResponseBody#body"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpBody"
            "value" : "null"
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io._HttpClientResponseBody.statusCode"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io._HttpClientResponseBody.reasonPhrase"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io._HttpClientResponseBody.headers"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
  "_HttpRequestBody" : 
    "name" : "_HttpRequestBody"
    "qualifiedname" : "dart.io._HttpRequestBody"
    "comment" : ""
    "superclass" : "dart.io._HttpBody"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpRequestBody"
    "variables" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io._HttpRequestBody.method"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io._HttpRequestBody.uri"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.Uri"
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io._HttpRequestBody.headers"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.HttpHeaders"
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io._HttpRequestBody.response"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.HttpResponse"
    "methods" : 
      "_HttpRequestBody" : 
        "name" : "_HttpRequestBody"
        "qualifiedname" : "dart.io._HttpRequestBody._HttpRequestBody"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpRequestBody._HttpRequestBody#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
          "body" : 
            "name" : "body"
            "qualifiedname" : "dart.io._HttpRequestBody._HttpRequestBody#body"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpBody"
            "value" : "null"
  "_HttpBody" : 
    "name" : "_HttpBody"
    "qualifiedname" : "dart.io._HttpBody"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpBody"
    "variables" : 
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io._HttpBody.contentType"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.ContentType"
      "type" : 
        "name" : "type"
        "qualifiedname" : "dart.io._HttpBody.type"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "body" : 
        "name" : "body"
        "qualifiedname" : "dart.io._HttpBody.body"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "_HttpBody" : 
        "name" : "_HttpBody"
        "qualifiedname" : "dart.io._HttpBody._HttpBody"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "contentType" : 
            "name" : "contentType"
            "qualifiedname" : "dart.io._HttpBody._HttpBody#contentType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ContentType"
            "value" : "null"
          "type" : 
            "name" : "type"
            "qualifiedname" : "dart.io._HttpBody._HttpBody#type"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "body" : 
            "name" : "body"
            "qualifiedname" : "dart.io._HttpBody._HttpBody#body"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "_HttpBodyFileUpload" : 
    "name" : "_HttpBodyFileUpload"
    "qualifiedname" : "dart.io._HttpBodyFileUpload"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpBodyFileUpload"
    "variables" : 
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io._HttpBodyFileUpload.contentType"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.ContentType"
      "filename" : 
        "name" : "filename"
        "qualifiedname" : "dart.io._HttpBodyFileUpload.filename"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "content" : 
        "name" : "content"
        "qualifiedname" : "dart.io._HttpBodyFileUpload.content"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "_HttpBodyFileUpload" : 
        "name" : "_HttpBodyFileUpload"
        "qualifiedname" : "dart.io._HttpBodyFileUpload._HttpBodyFileUpload"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "contentType" : 
            "name" : "contentType"
            "qualifiedname" : "dart.io._HttpBodyFileUpload._HttpBodyFileUpload#contentType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ContentType"
            "value" : "null"
          "filename" : 
            "name" : "filename"
            "qualifiedname" : "dart.io._HttpBodyFileUpload._HttpBodyFileUpload#filename"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "content" : 
            "name" : "content"
            "qualifiedname" : "dart.io._HttpBodyFileUpload._HttpBodyFileUpload#content"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "_HttpBodyHandler" : 
    "name" : "_HttpBodyHandler"
    "qualifiedname" : "dart.io._HttpBodyHandler"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "processRequest" : 
        "name" : "processRequest"
        "qualifiedname" : "dart.io._HttpBodyHandler.processRequest"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpBodyHandler.processRequest#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
          "defaultEncoding" : 
            "name" : "defaultEncoding"
            "qualifiedname" : "dart.io._HttpBodyHandler.processRequest#defaultEncoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "processResponse" : 
        "name" : "processResponse"
        "qualifiedname" : "dart.io._HttpBodyHandler.processResponse"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._HttpBodyHandler.processResponse#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientResponse"
            "value" : "null"
          "defaultEncoding" : 
            "name" : "defaultEncoding"
            "qualifiedname" : "dart.io._HttpBodyHandler.processResponse#defaultEncoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "process" : 
        "name" : "process"
        "qualifiedname" : "dart.io._HttpBodyHandler.process"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._HttpBodyHandler.process#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
          "headers" : 
            "name" : "headers"
            "qualifiedname" : "dart.io._HttpBodyHandler.process#headers"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpHeaders"
            "value" : "null"
          "defaultEncoding" : 
            "name" : "defaultEncoding"
            "qualifiedname" : "dart.io._HttpBodyHandler.process#defaultEncoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
  "_HttpBodyHandlerTransformer" : 
    "name" : "_HttpBodyHandlerTransformer"
    "qualifiedname" : "dart.io._HttpBodyHandlerTransformer"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_defaultEncoding" : 
        "name" : "_defaultEncoding"
        "qualifiedname" : "dart.io._HttpBodyHandlerTransformer._defaultEncoding"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.Encoding"
    "methods" : 
      "_HttpBodyHandlerTransformer" : 
        "name" : "_HttpBodyHandlerTransformer"
        "qualifiedname" : "dart.io._HttpBodyHandlerTransformer._HttpBodyHandlerTransformer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_defaultEncoding" : 
            "name" : "_defaultEncoding"
            "qualifiedname" : "dart.io._HttpBodyHandlerTransformer._HttpBodyHandlerTransformer#_defaultEncoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._HttpBodyHandlerTransformer.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io._HttpBodyHandlerTransformer.handleData#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._HttpBodyHandlerTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
  "HttpBodyFileUpload" : 
    "name" : "HttpBodyFileUpload"
    "qualifiedname" : "dart.io.HttpBodyFileUpload"
    "comment" : "<p>A <code>HttpBodyFileUpload</code> object wraps a file upload, presenting a way for extracting filename, contentType and the data of the uploaded file.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "filename" : 
        "name" : "filename"
        "qualifiedname" : "dart.io.HttpBodyFileUpload.filename"
        "comment" : "<p>The filename of the uploaded file.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io.HttpBodyFileUpload.contentType"
        "comment" : "<p>The <code>ContentType</code> of the uploaded file. For 'text/\\*' and 'application/json' the <code>data</code> field will a String.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.ContentType"
      "content" : 
        "name" : "content"
        "qualifiedname" : "dart.io.HttpBodyFileUpload.content"
        "comment" : "<p>The content of the file. Either a <code>String</code> or a [List<int>].</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
  "HttpRequestBody" : 
    "name" : "HttpRequestBody"
    "qualifiedname" : "dart.io.HttpRequestBody"
    "comment" : "<p>The <code>HttpBody</code> of a <code>HttpRequest</code> will be of type <code>HttpRequestBody</code>. It contains the fields used to read all request header information and responding to the client.</p>"
    "superclass" : "dart.io.HttpBody"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io.HttpRequestBody.method"
        "comment" : "<p>Returns the method for the request.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io.HttpRequestBody.uri"
        "comment" : "<p>Returns the URI for the request.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Uri"
        "parameters" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.HttpRequestBody.headers"
        "comment" : "<p>Returns the request headers.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io.HttpRequestBody.response"
        "comment" : "<p>The <code>HttpResponse</code> used for responding to the client.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpResponse"
        "parameters" : 
  "HttpClientResponseBody" : 
    "name" : "HttpClientResponseBody"
    "qualifiedname" : "dart.io.HttpClientResponseBody"
    "comment" : "<p>The <code>HttpBody</code> of a <code>HttpClientResponse</code> will be of type <code>HttpClientResponseBody</code>. It contains the <code>HttpClientResponse</code> object for access to the headers.</p>"
    "superclass" : "dart.io.HttpBody"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io.HttpClientResponseBody.statusCode"
        "comment" : "<p>Returns the status code.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io.HttpClientResponseBody.reasonPhrase"
        "comment" : "<p>Returns the reason phrase associated with the status code.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.HttpClientResponseBody.headers"
        "comment" : "<p>Returns the response headers.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io.HttpClientResponseBody.response"
        "comment" : "<p>The <code>HttpClientResponse</code> of the HTTP body.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpClientResponse"
        "parameters" : 
  "HttpBody" : 
    "name" : "HttpBody"
    "qualifiedname" : "dart.io.HttpBody"
    "comment" : "<p>A HTTP content body produced by <code>HttpBodyHandler</code> for either <code>HttpRequest</code> or <code>HttpClientResponse</code>.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io.HttpBody.contentType"
        "comment" : "<p>The content type e.g. application/json, application/octet-stream, application/x-www-form-urlencoded, text/plain.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.ContentType"
        "parameters" : 
      "type" : 
        "name" : "type"
        "qualifiedname" : "dart.io.HttpBody.type"
        "comment" : "<p>A high-level type value, that reflects how the body was parsed, e.g. \"text\", \"binary\" and \"json\".</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "body" : 
        "name" : "body"
        "qualifiedname" : "dart.io.HttpBody.body"
        "comment" : "<p>The actual body. The type depends on <code>type</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
  "HttpBodyHandler" : 
    "name" : "HttpBodyHandler"
    "qualifiedname" : "dart.io.HttpBodyHandler"
    "comment" : "<p><code>HttpBodyHandler</code> is a helper class for processing and collecting HTTP message data in an easy-to-use <code>HttpBody</code> object. The content body is parsed, depending on the <code>Content-Type</code> header field. When the full body is read and parsed the body content is made available. The class can be used to process both server requests and client responses.</p> <p>The following content types are recognized:</p> <pre><code>text/\\* application/json application/x-www-form-urlencoded multipart/form-data </code></pre> <p> For content type <code>text/\\*</code> the body is decoded into a string. The  'charset' parameter of the content type specifies the encoding  used for decoding. If no 'charset' is present the default encoding  of ISO-8859-1 is used.</p> <p> For content type <code>application/json</code> the body is decoded into a  string which is then parsed as JSON. The resulting body is a  <code>Map</code>.  The 'charset' parameter of the content type specifies the  encoding used for decoding. If no 'charset' is present the default  encoding of UTF-8 is used.</p> <p> For content type <code>application/x-www-form-urlencoded</code> the body is a  query string which is then split according to the rules for  splitting a query string. The resulting body is a <code>Map&lt;String,  String&gt;</code>.  If the same name is present several times in the query  string, then the last value seen for this name will be in the  resulting map. The encoding US-ASCII is always used for decoding  the body.</p> <p> For content type <code>multipart/form-data</code> the body is parsed into  it's different fields. The resulting body is a <code>Map&lt;String,  dynamic&gt;</code>, where the value is a <code>String</code> for normal fields and a  <code>HttpBodyFileUpload</code> instance for file upload fields. If the same  name is present several times, then the last value seen for this  name will be in the resulting map.</p> <p> When using content type <code>multipart/form-data</code> the encoding of  fields with <code>String</code> values is determined by the browser sending  the HTTP request with the form data. The encoding is specified  either by the attribute <code>accept-charset</code> on the HTML form, or by  the content type of the web page containing the form. If the HTML  form has an <code>accept-charset</code> attribute the browser will use the  encoding specified there. If the HTML form has no <code>accept-charset</code>  attribute the browser determines the encoding from the content  type of the web page containing the form. Using a content type of  <code>text/html; charset=utf-8</code> for the page and setting  <code>accept-charset</code> on the HTML form to <code>utf-8</code> is recommended as the  default for <code>HttpBodyHandler</code> is UTF-8. It is important to get  these encoding values right, as the actual <code>multipart/form-data</code>  HTTP request sent by the browser does <em>not</em> contain any  information on the encoding. If something else than UTF-8 is used  <code>defaultEncoding</code> needs to be set in the <code>HttpBodyHandler</code>  constructor and calls to <code>processRequest</code> and <code>processResponse</code>.</p> <p> For all other content types the body will be treated as  uninterpreted binary data. The resulting body will be of type  <code>List&lt;int&gt;</code>.</p> <p>To use with the <code>HttpServer</code> for request messages, <code>HttpBodyHandler</code> can be used as either a <code>StreamTransformer</code> or as a per-request handler (see <code>processRequest</code>).</p> <pre><code>HttpServer server = ... server.transform(new HttpBodyHandler())     .listen((HttpRequestBody body) {       ...     }); </code></pre> <p>To use with the <code>HttpClient</code> for response messages, <code>HttpBodyHandler</code> can be used as a per-request handler (see <code>processResponse</code>).</p> <pre><code>HttpClient client = ... client.get(...)     .then((HttpClientRequest response) =&gt; response.close())     .then(HttpBodyHandler.processResponse)     .then((HttpClientResponseBody body) {       ...     }); </code></pre>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.async.StreamTransformer"
    "variables" : 
      "_transformer" : 
        "name" : "_transformer"
        "qualifiedname" : "dart.io.HttpBodyHandler._transformer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dynamic"
    "methods" : 
      "HttpBodyHandler" : 
        "name" : "HttpBodyHandler"
        "qualifiedname" : "dart.io.HttpBodyHandler.HttpBodyHandler"
        "comment" : "<p>Create a new <code>HttpBodyHandler</code> to be used with a <code>Stream</code>&lt;<code>HttpRequest</code>>, e.g. a <code>HttpServer</code>.</p> <p>If the page is served using different encoding than UTF-8, set <code>defaultEncoding</code> accordingly. This is required for parsing <code>multipart/form-data</code> content correctly. See the class comment for more information on <code>multipart/form-data</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "defaultEncoding" : 
            "name" : "defaultEncoding"
            "qualifiedname" : "dart.io.HttpBodyHandler.HttpBodyHandler#defaultEncoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "processRequest" : 
        "name" : "processRequest"
        "qualifiedname" : "dart.io.HttpBodyHandler.processRequest"
        "comment" : "<p>Process and parse an incoming <code>HttpRequest</code>. The returned <code>HttpRequestBody</code> contains a <code>response</code> field for accessing the <code>HttpResponse</code>.</p> <p>See <code>HttpBodyHandler</code> constructor for more info on <code>defaultEncoding</code>.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "request" : 
            "name" : "request"
            "qualifiedname" : "dart.io.HttpBodyHandler.processRequest#request"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpRequest"
            "value" : "null"
          "defaultEncoding" : 
            "name" : "defaultEncoding"
            "qualifiedname" : "dart.io.HttpBodyHandler.processRequest#defaultEncoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "processResponse" : 
        "name" : "processResponse"
        "qualifiedname" : "dart.io.HttpBodyHandler.processResponse"
        "comment" : "<p>Process and parse an incoming <code>HttpClientResponse</code>.</p> <p>See <code>HttpBodyHandler</code> constructor for more info on <code>defaultEncoding</code>.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io.HttpBodyHandler.processResponse#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientResponse"
            "value" : "null"
          "defaultEncoding" : 
            "name" : "defaultEncoding"
            "qualifiedname" : "dart.io.HttpBodyHandler.processResponse#defaultEncoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.HttpBodyHandler.bind"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io.HttpBodyHandler.bind#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
  "RedirectException" : 
    "name" : "RedirectException"
    "qualifiedname" : "dart.io.RedirectException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HttpException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.RedirectException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "redirects" : 
        "name" : "redirects"
        "qualifiedname" : "dart.io.RedirectException.redirects"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "RedirectException" : 
        "name" : "RedirectException"
        "qualifiedname" : "dart.io.RedirectException.RedirectException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.RedirectException.RedirectException#message"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "redirects" : 
            "name" : "redirects"
            "qualifiedname" : "dart.io.RedirectException.RedirectException#redirects"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.RedirectException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "HttpException" : 
    "name" : "HttpException"
    "qualifiedname" : "dart.io.HttpException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.HttpException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "HttpException" : 
        "name" : "HttpException"
        "qualifiedname" : "dart.io.HttpException.HttpException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.HttpException.HttpException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.HttpException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "DetachedSocket" : 
    "name" : "DetachedSocket"
    "qualifiedname" : "dart.io.DetachedSocket"
    "comment" : "<p>When detaching a socket from either the <code>:HttpServer:</code> or the <code>:HttpClient:</code> due to a HTTP connection upgrade there might be unparsed data already read from the socket. This unparsed data together with the detached socket is returned in an instance of this class.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "socket" : 
        "name" : "socket"
        "qualifiedname" : "dart.io.DetachedSocket.socket"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Socket"
        "parameters" : 
      "unparsedData" : 
        "name" : "unparsedData"
        "qualifiedname" : "dart.io.DetachedSocket.unparsedData"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
  "RedirectInfo" : 
    "name" : "RedirectInfo"
    "qualifiedname" : "dart.io.RedirectInfo"
    "comment" : "<p>Redirect information.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io.RedirectInfo.statusCode"
        "comment" : "<p>Returns the status code used for the redirect.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io.RedirectInfo.method"
        "comment" : "<p>Returns the method used for the redirect.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "location" : 
        "name" : "location"
        "qualifiedname" : "dart.io.RedirectInfo.location"
        "comment" : "<p>Returns the location for the redirect.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Uri"
        "parameters" : 
  "HttpConnectionInfo" : 
    "name" : "HttpConnectionInfo"
    "qualifiedname" : "dart.io.HttpConnectionInfo"
    "comment" : "<p>Information about an <code>HttpRequest</code>, <code>HttpResponse</code>, <code>HttpClientRequest</code>, or <code>HttpClientResponse</code> connection.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "remoteHost" : 
        "name" : "remoteHost"
        "qualifiedname" : "dart.io.HttpConnectionInfo.remoteHost"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "remotePort" : 
        "name" : "remotePort"
        "qualifiedname" : "dart.io.HttpConnectionInfo.remotePort"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "localPort" : 
        "name" : "localPort"
        "qualifiedname" : "dart.io.HttpConnectionInfo.localPort"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
  "HttpClientDigestCredentials" : 
    "name" : "HttpClientDigestCredentials"
    "qualifiedname" : "dart.io.HttpClientDigestCredentials"
    "comment" : "<p>Represents credentials for digest authentication. Digest authentication is only supported for servers using the MD5 algorithm and quality of protection (qop) of either \"none\" or \"auth\".</p>"
    "superclass" : "dart.io.HttpClientCredentials"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "HttpClientDigestCredentials" : 
        "name" : "HttpClientDigestCredentials"
        "qualifiedname" : "dart.io.HttpClientDigestCredentials.HttpClientDigestCredentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.HttpClientDigestCredentials"
        "parameters" : 
          "username" : 
            "name" : "username"
            "qualifiedname" : "dart.io.HttpClientDigestCredentials.HttpClientDigestCredentials#username"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "password" : 
            "name" : "password"
            "qualifiedname" : "dart.io.HttpClientDigestCredentials.HttpClientDigestCredentials#password"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "HttpClientBasicCredentials" : 
    "name" : "HttpClientBasicCredentials"
    "qualifiedname" : "dart.io.HttpClientBasicCredentials"
    "comment" : "<p>Represents credentials for basic authentication.</p>"
    "superclass" : "dart.io.HttpClientCredentials"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "HttpClientBasicCredentials" : 
        "name" : "HttpClientBasicCredentials"
        "qualifiedname" : "dart.io.HttpClientBasicCredentials.HttpClientBasicCredentials"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.HttpClientBasicCredentials"
        "parameters" : 
          "username" : 
            "name" : "username"
            "qualifiedname" : "dart.io.HttpClientBasicCredentials.HttpClientBasicCredentials#username"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "password" : 
            "name" : "password"
            "qualifiedname" : "dart.io.HttpClientBasicCredentials.HttpClientBasicCredentials#password"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "HttpClientCredentials" : 
    "name" : "HttpClientCredentials"
    "qualifiedname" : "dart.io.HttpClientCredentials"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
  "HttpClientResponse" : 
    "name" : "HttpClientResponse"
    "qualifiedname" : "dart.io.HttpClientResponse"
    "comment" : "<p>HTTP response for a client connection. The <code>HttpClientResponse</code> is a <code>Stream</code> of the body content of the response. Listen to the body to handle the data and be notified once the entire body is received.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
    "methods" : 
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io.HttpClientResponse.statusCode"
        "comment" : "<p>Returns the status code.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io.HttpClientResponse.reasonPhrase"
        "comment" : "<p>Returns the reason phrase associated with the status code.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io.HttpClientResponse.contentLength"
        "comment" : "<p>Returns the content length of the request body. Returns -1 if the size of the request body is not known in advance.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io.HttpClientResponse.persistentConnection"
        "comment" : "<p>Gets the persistent connection state returned by the server.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isRedirect" : 
        "name" : "isRedirect"
        "qualifiedname" : "dart.io.HttpClientResponse.isRedirect"
        "comment" : "<p>Returns whether the status code is one of the normal redirect codes <code>HttpStatus.MOVED_PERMANENTLY</code>, <code>HttpStatus.FOUND</code>, <code>HttpStatus.MOVED_TEMPORARILY</code>, <code>HttpStatus.SEE_OTHER</code> and <code>HttpStatus.TEMPORARY_REDIRECT</code>.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "redirects" : 
        "name" : "redirects"
        "qualifiedname" : "dart.io.HttpClientResponse.redirects"
        "comment" : "<p>Returns the series of redirects this connection has been through. The list will be empty if no redirects were followed. <code>redirects</code> will be updated both in the case of an automatic and a manual redirect.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "redirect" : 
        "name" : "redirect"
        "qualifiedname" : "dart.io.HttpClientResponse.redirect"
        "comment" : "<p>Redirects this connection to a new URL. The default value for <code>method</code> is the method for the current request. The default value for <code>url</code> is the value of the <code>HttpHeaders.LOCATION</code> header of the current response. All body data must have been read from the current response before calling <code>redirect</code>.</p> <p>All headers added to the request will be added to the redirection request. However, any body sent with the request will not be part of the redirection request.</p> <p>If <code>followLoops</code> is set to <code>true</code>, redirect will follow the redirect, even if the URL was already visited. The default value is <code>false</code>.</p> <p><code>redirect</code> will ignore <code>maxRedirects</code> and will always perform the redirect.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io.HttpClientResponse.redirect#method"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.HttpClientResponse.redirect#url"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "followLoops" : 
            "name" : "followLoops"
            "qualifiedname" : "dart.io.HttpClientResponse.redirect#followLoops"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.HttpClientResponse.headers"
        "comment" : "<p>Returns the response headers.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
      "detachSocket" : 
        "name" : "detachSocket"
        "qualifiedname" : "dart.io.HttpClientResponse.detachSocket"
        "comment" : "<p>Detach the underlying socket from the HTTP client. When the socket is detached the HTTP client will no longer perform any operations on it.</p> <p>This is normally used when a HTTP upgrade is negotiated and the communication should continue with a different protocol.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io.HttpClientResponse.cookies"
        "comment" : "<p>Cookies set by the server (from the 'set-cookie' header).</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "certificate" : 
        "name" : "certificate"
        "qualifiedname" : "dart.io.HttpClientResponse.certificate"
        "comment" : "<p>Returns the certificate of the HTTPS server providing the response. Returns null if the connection is not a secure TLS or SSL connection.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io.HttpClientResponse.connectionInfo"
        "comment" : "<p>Gets information about the client connection. Returns <code>null</code> if the socket is not available.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
  "HttpClientRequest" : 
    "name" : "HttpClientRequest"
    "qualifiedname" : "dart.io.HttpClientRequest"
    "comment" : "<p>HTTP request for a client connection.</p> <p>This object has a number of properties for setting up the HTTP header of the request. When the header has been set up the methods from the <code>IOSink</code> can be used to write the actual body of the HTTP request. When one of the <code>IOSink</code> methods is used for the first time the request header is send. Calling any methods that will change the header after it is sent will throw an exception.</p> <p>When writing string data through the <code>IOSink</code> the encoding used will be determined from the \"charset\" parameter of the \"Content-Type\" header.</p> <pre><code>HttpClientRequest request = ... request.headers.contentType     = new ContentType(\"application\", \"json\", charset: \"utf-8\"); request.write(...);  // Strings written will be UTF-8 encoded. </code></pre> <p>If no charset is provided the default of ISO-8859-1 (Latin 1) will be used.</p> <pre><code>HttpClientRequest request = ... request.headers.add(HttpHeaders.CONTENT_TYPE, \"text/plain\"); request.write(...);  // Strings written will be ISO-8859-1 encoded. </code></pre> <p>If an unsupported encoding is used an exception will be thrown if using one of the write methods taking a string.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOSink"
    "variables" : 
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io.HttpClientRequest.contentLength"
        "comment" : "<p>Gets and sets the content length of the request. If the size of the request is not known in advance set content length to -1, which is also the default.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io.HttpClientRequest.persistentConnection"
        "comment" : "<p>Gets and sets the requested persistent connection state. The default value is <code>:true:</code>.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "followRedirects" : 
        "name" : "followRedirects"
        "qualifiedname" : "dart.io.HttpClientRequest.followRedirects"
        "comment" : "<p>Set this property to <code>:true:</code> if this request should automatically follow redirects. The default is <code>:true:</code>.</p> <p>Automatic redirect will only happen for \"GET\" and \"HEAD\" requests and only for the status codes <a href=\"301\">:HttpHeaders.MOVED_PERMANENTLY:</a>, <a href=\"302\">:HttpStatus.FOUND:</a>, <code>:HttpStatus.MOVED_TEMPORARILY:</code> (302, alias for <code>:HttpStatus.FOUND:</code>), <a href=\"303\">:HttpStatus.SEE_OTHER:</a> and <a href=\"307\">:HttpStatus.TEMPORARY_REDIRECT:</a>. For <a href=\"303\">:HttpStatus.SEE_OTHER:</a> autmatic redirect will also happen for \"POST\" requests with the method changed to \"GET\" when following the redirect.</p> <p>All headers added to the request will be added to the redirection request(s). However, any body send with the request will not be part of the redirection request(s).</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "maxRedirects" : 
        "name" : "maxRedirects"
        "qualifiedname" : "dart.io.HttpClientRequest.maxRedirects"
        "comment" : "<p>Set this property to the maximum number of redirects to follow when <code>followRedirects</code> is <code>:true:</code>. If this number is exceeded the <code>onError</code> callback will be called with a <code>RedirectException</code>.</p> <p>The default value is 5.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io.HttpClientRequest.method"
        "comment" : "<p>The method of the request.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io.HttpClientRequest.uri"
        "comment" : "<p>The uri of the request.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Uri"
        "parameters" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.HttpClientRequest.headers"
        "comment" : "<p>Returns the request headers.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io.HttpClientRequest.cookies"
        "comment" : "<p>Cookies to present to the server (in the 'cookie' header).</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "done" : 
        "name" : "done"
        "qualifiedname" : "dart.io.HttpClientRequest.done"
        "comment" : "<p>A <code>HttpClientResponse</code> future that will complete once the response is available. If an error occurs before the response is available, this future will complete with an error.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.HttpClientRequest.close"
        "comment" : "<p>Close the request for input. Returns the value of <code>done</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io.HttpClientRequest.connectionInfo"
        "comment" : "<p>Get information about the client connection. Returns <code>null</code> if the socket is not available.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
  "HttpClient" : 
    "name" : "HttpClient"
    "qualifiedname" : "dart.io.HttpClient"
    "comment" : "<p>The <code>HttpClient</code> class implements the client side of the HTTP protocol. It contains a number of methods to send a HTTP request to a HTTP server and receive a HTTP response back.</p> <p>This is a two-step process, triggered by two futures. When the first future completes with a <code>HttpClientRequest</code> the underlying network connection has been established, but no data has yet been sent. The HTTP headers and body can be set on the request, and <code>:close:</code> is called to sent it to the server.</p> <p>The second future, which is returned by <code>:close:</code>, completes with an <code>HttpClientResponse</code> object when the response is received from the server. This object contains the headers and body of the response.</p> <p>The future for <code>HttpClientRequest</code> is created by methods such as <code>getUrl</code> and <code>open</code>.</p> <p>When the HTTP response is ready a <code>HttpClientResponse</code> object is provided which provides access to the headers and body of the response. The body is available as a stream implemented by <code>HttpClientResponse</code>. If a body is present, it must be read. Otherwise, it'll lead to a resource leaks. Consider using <code>HttpClientResponse.drain</code> if the body is unused.</p> <pre><code>HttpClient client = new HttpClient(); client.getUrl(Uri.parse(\"http://www.example.com/\"))     .then((HttpClientRequest request) {       // Prepare the request then call close on it to send it.       return request.close();     })     .then((HttpClientResponse response) {      // Process the response.     }); </code></pre> <p>All <code>HttpClient</code> requests set the following header by default:</p> <pre><code>Accept-Encoding: gzip </code></pre> <p>This allows the HTTP server to use gzip compression for the body if possible. If this behavior is not desired set the \"Accept-Encoding\" header to something else.</p> <p>The <code>HttpClient</code> supports persistent connections and caches network connections to reuse then for multiple requests whenever possible. This means that network connections can be kept open for some time after a request have completed. Use <code>:HttpClient.close:</code> to force shut down the <code>HttpClient</code> object and close the idle network connections.</p> <p>By default the HttpClient uses the proxy configuration available from the environment, see <code>findProxyFromEnvironment</code>. To turn off the use of proxies all together set the <code>findProxy</code> property to <code>:null:</code>.</p> <pre><code>HttpClient client = new HttpClient(); client.findProxy = null; </code></pre>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "DEFAULT_HTTP_PORT" : 
        "name" : "DEFAULT_HTTP_PORT"
        "qualifiedname" : "dart.io.HttpClient.DEFAULT_HTTP_PORT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "DEFAULT_HTTPS_PORT" : 
        "name" : "DEFAULT_HTTPS_PORT"
        "qualifiedname" : "dart.io.HttpClient.DEFAULT_HTTPS_PORT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "idleTimeout" : 
        "name" : "idleTimeout"
        "qualifiedname" : "dart.io.HttpClient.idleTimeout"
        "comment" : "<p>Get and set the idle timeout of non-active persistent (keep-alive) connections. The default value is 15 seconds.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.Duration"
      "userAgent" : 
        "name" : "userAgent"
        "qualifiedname" : "dart.io.HttpClient.userAgent"
        "comment" : "<p>Set and get the default value of the <code>User-Agent</code> header for all requests generated by this <code>HttpClient</code>. The default value is <code>Dart/&lt;version&gt; (dart:io)</code>.</p> <p>If the userAgent is set to <code>null</code>, no default <code>User-Agent</code> header will be added to each request.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "HttpClient" : 
        "name" : "HttpClient"
        "qualifiedname" : "dart.io.HttpClient.HttpClient"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.HttpClient"
        "parameters" : 
      "open" : 
        "name" : "open"
        "qualifiedname" : "dart.io.HttpClient.open"
        "comment" : "<p>Opens a HTTP connection. The returned <code>HttpClientRequest</code> is used to fill in the content of the request before sending it. The 'host' header for the request will be set to the value <code>host</code>:<code>port</code>. This can be overridden through the <code>HttpClientRequest</code> interface before the request is sent. NOTE if <code>host</code> is an IP address this will still be set in the 'host' header.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io.HttpClient.open#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.HttpClient.open#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.HttpClient.open#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.HttpClient.open#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "openUrl" : 
        "name" : "openUrl"
        "qualifiedname" : "dart.io.HttpClient.openUrl"
        "comment" : "<p>Opens a HTTP connection. The returned <code>HttpClientRequest</code> is used to fill in the content of the request before sending it. The 'hosth header for the request will be set to the value <code>host</code>:<code>port</code>. This can be overridden through the <code>HttpClientRequest</code> interface before the request is sent. NOTE if <code>host</code> is an IP address this will still be set in the 'host' header.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "method" : 
            "name" : "method"
            "qualifiedname" : "dart.io.HttpClient.openUrl#method"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.HttpClient.openUrl#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "get" : 
        "name" : "get"
        "qualifiedname" : "dart.io.HttpClient.get"
        "comment" : "<p>Opens a HTTP connection using the GET method. See <code>open</code> for details. Using this method to open a HTTP connection will set the content length to 0.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.HttpClient.get#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.HttpClient.get#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.HttpClient.get#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "getUrl" : 
        "name" : "getUrl"
        "qualifiedname" : "dart.io.HttpClient.getUrl"
        "comment" : "<p>Opens a HTTP connection using the GET method. See <code>openUrl</code> for details. Using this method to open a HTTP connection will set the content length to 0.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.HttpClient.getUrl#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "post" : 
        "name" : "post"
        "qualifiedname" : "dart.io.HttpClient.post"
        "comment" : "<p>Opens a HTTP connection using the POST method. See <code>open</code> for details.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.HttpClient.post#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.HttpClient.post#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.HttpClient.post#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "postUrl" : 
        "name" : "postUrl"
        "qualifiedname" : "dart.io.HttpClient.postUrl"
        "comment" : "<p>Opens a HTTP connection using the POST method. See <code>openUrl</code> for details.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.HttpClient.postUrl#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
      "authenticate=" : 
        "name" : "authenticate="
        "qualifiedname" : "dart.io.HttpClient.authenticate="
        "comment" : "<p>Sets the function to be called when a site is requesting authentication. The URL requested and the security realm from the server are passed in the arguments <code>url</code> and <code>realm</code>.</p> <p>The function returns a <code>Future</code> which should complete when the authentication has been resolved. If credentials cannot be provided the <code>Future</code> should complete with <code>false</code>. If credentials are available the function should add these using <code>addCredentials</code> before completing the <code>Future</code> with the value <code>true</code>.</p> <p>If the <code>Future</code> completes with true the request will be retried using the updated credentials. Otherwise response processing will continue normally.</p>"
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io.HttpClient.authenticate=#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "addCredentials" : 
        "name" : "addCredentials"
        "qualifiedname" : "dart.io.HttpClient.addCredentials"
        "comment" : "<p>Add credentials to be used for authorizing HTTP requests.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.HttpClient.addCredentials#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io.HttpClient.addCredentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io.HttpClient.addCredentials#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientCredentials"
            "value" : "null"
      "findProxy=" : 
        "name" : "findProxy="
        "qualifiedname" : "dart.io.HttpClient.findProxy="
        "comment" : "<p>Sets the function used to resolve the proxy server to be used for opening a HTTP connection to the specified <code>url</code>. If this function is not set, direct connections will always be used.</p> <p>The string returned by <code>f</code> must be in the format used by browser PAC (proxy auto-config) scripts. That is either</p> <p>  \"DIRECT\"</p> <p>for using a direct connection or</p> <p>  \"PROXY host:port\"</p> <p>for using the proxy server <code>:host:</code> on port <code>:port:</code>.</p> <p>A configuration can contain several configuration elements separated by semicolons, e.g.</p> <p>  \"PROXY host:port; PROXY host2:port2; DIRECT\"</p> <p>The static function <code>findProxyFromEnvironment</code> on this class can be used to implement proxy server resolving based on environment variables.</p>"
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io.HttpClient.findProxy=#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "findProxyFromEnvironment" : 
        "name" : "findProxyFromEnvironment"
        "qualifiedname" : "dart.io.HttpClient.findProxyFromEnvironment"
        "comment" : "<p>Function for resolving the proxy server to be used for a HTTP connection from the proxy configuration specified through environment variables.</p> <p>The following environment variables are taken into account:</p> <pre><code>http_proxy https_proxy no_proxy HTTP_PROXY HTTPS_PROXY NO_PROXY </code></pre> <p><code>:http_proxy:</code> and <code>:HTTP_PROXY:</code> specify the proxy server to use for http:// urls. Use the format <code>:hostname:port:</code>. If no port is used a default of 1080 will be used. If both are set the lower case one takes precedence.</p> <p><code>:https_proxy:</code> and <code>:HTTPS_PROXY:</code> specify the proxy server to use for https:// urls. Use the format <code>:hostname:port:</code>. If no port is used a default of 1080 will be used. If both are set the lower case one takes precedence.</p> <p><code>:no_proxy:</code> and <code>:NO_PROXY:</code> specify a comma separated list of postfixes of hostnames for which not to use the proxy server. E.g. the value \"localhost,127.0.0.1\" will make requests to both \"localhost\" and \"127.0.0.1\" not use a proxy. If both are set the lower case one takes precedence.</p> <p>To activate this way of resolving proxies assign this function to the <code>findProxy</code> property on the <code>HttpClient</code>.</p> <pre><code>HttpClient client = new HttpClient(); client.findProxy = HttpClient.findProxyFromEnvironment; </code></pre> <p>If you don't want to use the system environment you can use a different one by wrapping the function.</p> <pre><code>HttpClient client = new HttpClient(); client.findProxy = (url) {   return HttpClient.findProxyFromEnvironment(       url, {\"http_proxy\": ..., \"no_proxy\": ...}); } </code></pre> <p>If a proxy requires authentication it is possible to configure the username and password as well. Use the format <code>:username:password@hostname:port:</code> to include the username and password. Alternatively the API <code>addProxyCredentials</code> can be used to set credentials for proxies which require authentication.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "url" : 
            "name" : "url"
            "qualifiedname" : "dart.io.HttpClient.findProxyFromEnvironment#url"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Uri"
            "value" : "null"
          "environment" : 
            "name" : "environment"
            "qualifiedname" : "dart.io.HttpClient.findProxyFromEnvironment#environment"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "authenticateProxy=" : 
        "name" : "authenticateProxy="
        "qualifiedname" : "dart.io.HttpClient.authenticateProxy="
        "comment" : "<p>Sets the function to be called when a proxy is requesting authentication. Information on the proxy in use and the security realm for the authentication are passed in the arguments <code>host</code>, <code>port</code> and <code>realm</code>.</p> <p>The function returns a <code>Future</code> which should complete when the authentication has been resolved. If credentials cannot be provided the <code>Future</code> should complete with <code>false</code>. If credentials are available the function should add these using <code>addProxyCredentials</code> before completing the <code>Future</code> with the value <code>true</code>.</p> <p>If the <code>Future</code> completes with <code>true</code> the request will be retried using the updated credentials. Otherwise response processing will continue normally.</p>"
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io.HttpClient.authenticateProxy=#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "addProxyCredentials" : 
        "name" : "addProxyCredentials"
        "qualifiedname" : "dart.io.HttpClient.addProxyCredentials"
        "comment" : "<p>Add credentials to be used for authorizing HTTP proxies.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "host" : 
            "name" : "host"
            "qualifiedname" : "dart.io.HttpClient.addProxyCredentials#host"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.HttpClient.addProxyCredentials#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "realm" : 
            "name" : "realm"
            "qualifiedname" : "dart.io.HttpClient.addProxyCredentials#realm"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "credentials" : 
            "name" : "credentials"
            "qualifiedname" : "dart.io.HttpClient.addProxyCredentials#credentials"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.HttpClientCredentials"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.HttpClient.close"
        "comment" : "<p>Shutdown the HTTP client. If <code>force</code> is <code>:false:</code> (the default) the <code>:HttpClient:</code> will be kept alive until all active connections are done. If <code>force</code> is <code>:true:</code> any active connections will be closed to immediately release all resources. These closed connections will receive an <code>:onError:</code> callback to indicate that the client was shutdown. In both cases trying to establish a new connection after calling <code>shutdown</code> will throw an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "force" : 
            "name" : "force"
            "qualifiedname" : "dart.io.HttpClient.close#force"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
  "HttpResponse" : 
    "name" : "HttpResponse"
    "qualifiedname" : "dart.io.HttpResponse"
    "comment" : "<p>An <code>HttpResponse</code> represents the headers and data to be returned to a client in response to an HTTP request.</p> <p>This object has a number of properties for setting up the HTTP header of the response. When the header has been set up the methods from the <code>IOSink</code> can be used to write the actual body of the HTTP response. When one of the <code>IOSink</code> methods is used for the first time the request header is send. Calling any methods that will change the header after it is sent will throw an exception.</p> <p>When writing string data through the <code>IOSink</code> the encoding used will be determined from the \"charset\" parameter of the \"Content-Type\" header.</p> <pre><code>HttpResponse response = ... response.headers.contentType     = new ContentType(\"application\", \"json\", charset: \"utf-8\"); response.write(...);  // Strings written will be UTF-8 encoded. </code></pre> <p>If no charset is provided the default of ISO-8859-1 (Latin 1) will be used.</p> <pre><code>HttpResponse response = ... response.headers.add(HttpHeaders.CONTENT_TYPE, \"text/plain\"); response.write(...);  // Strings written will be ISO-8859-1 encoded. </code></pre> <p>If an unsupported encoding is used an exception will be thrown if using one of the write methods taking a string.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOSink"
    "variables" : 
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io.HttpResponse.contentLength"
        "comment" : "<p>Gets and sets the content length of the response. If the size of the response is not known in advance set the content length to -1 - which is also the default if not set.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "statusCode" : 
        "name" : "statusCode"
        "qualifiedname" : "dart.io.HttpResponse.statusCode"
        "comment" : "<p>Gets and sets the status code. Any integer value is accepted. For the official HTTP status codes use the fields from <code>HttpStatus</code>. If no status code is explicitly set the default value <code>HttpStatus.OK</code> is used.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "reasonPhrase" : 
        "name" : "reasonPhrase"
        "qualifiedname" : "dart.io.HttpResponse.reasonPhrase"
        "comment" : "<p>Gets and sets the reason phrase. If no reason phrase is explicitly set a default reason phrase is provided.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io.HttpResponse.persistentConnection"
        "comment" : "<p>Gets and sets the persistent connection state. The initial value of this property is the persistent connection state from the request.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.HttpResponse.headers"
        "comment" : "<p>Returns the response headers.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io.HttpResponse.cookies"
        "comment" : "<p>Cookies to set in the client (in the 'set-cookie' header).</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "detachSocket" : 
        "name" : "detachSocket"
        "qualifiedname" : "dart.io.HttpResponse.detachSocket"
        "comment" : "<p>Detaches the underlying socket from the HTTP server. When the socket is detached the HTTP server will no longer perform any operations on it.</p> <p>This is normally used when a HTTP upgrade request is received and the communication should continue with a different protocol.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io.HttpResponse.connectionInfo"
        "comment" : "<p>Gets information about the client connection. Returns <code>null</code> if the socket is not available.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
  "HttpRequest" : 
    "name" : "HttpRequest"
    "qualifiedname" : "dart.io.HttpRequest"
    "comment" : "<p>Http request delivered to the HTTP server callback. The <code>HttpRequest</code> is a <code>Stream</code> of the body content of the request. Listen to the body to handle the data and be notified once the entire body is received.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
    "methods" : 
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io.HttpRequest.contentLength"
        "comment" : "<p>Returns the content length of the request body. If the size of the request body is not known in advance this -1.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "method" : 
        "name" : "method"
        "qualifiedname" : "dart.io.HttpRequest.method"
        "comment" : "<p>Returns the method for the request.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "uri" : 
        "name" : "uri"
        "qualifiedname" : "dart.io.HttpRequest.uri"
        "comment" : "<p>Returns the URI for the request. This provides access to the path, query string and fragment identifier for the request.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Uri"
        "parameters" : 
      "headers" : 
        "name" : "headers"
        "qualifiedname" : "dart.io.HttpRequest.headers"
        "comment" : "<p>Returns the request headers.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpHeaders"
        "parameters" : 
      "cookies" : 
        "name" : "cookies"
        "qualifiedname" : "dart.io.HttpRequest.cookies"
        "comment" : "<p>Returns the cookies in the request (from the Cookie headers).</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io.HttpRequest.persistentConnection"
        "comment" : "<p>Returns the persistent connection state signaled by the client.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "certificate" : 
        "name" : "certificate"
        "qualifiedname" : "dart.io.HttpRequest.certificate"
        "comment" : "<p>Returns the client certificate of the client making the request. Returns null if the connection is not a secure TLS or SSL connection, or if the server does not request a client certificate, or if the client does not provide one.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.X509Certificate"
        "parameters" : 
      "session" : 
        "name" : "session"
        "qualifiedname" : "dart.io.HttpRequest.session"
        "comment" : "<p>Gets the session for the given request. If the session is being initialized by this call, <code>:isNew:</code> will be true for the returned session. See <code>HttpServer.sessionTimeout</code> on how to change default timeout.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpSession"
        "parameters" : 
      "protocolVersion" : 
        "name" : "protocolVersion"
        "qualifiedname" : "dart.io.HttpRequest.protocolVersion"
        "comment" : "<p>Returns the HTTP protocol version used in the request. This will be \"1.0\" or \"1.1\".</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "connectionInfo" : 
        "name" : "connectionInfo"
        "qualifiedname" : "dart.io.HttpRequest.connectionInfo"
        "comment" : "<p>Gets information about the client connection. Returns <code>null</code> if the socket is not available.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpConnectionInfo"
        "parameters" : 
      "response" : 
        "name" : "response"
        "qualifiedname" : "dart.io.HttpRequest.response"
        "comment" : "<p>Gets the <code>HttpResponse</code> object, used for sending back the response to the client.</p> <p>If the <code>contentLength</code> of the body isn't 0, and the body isn't being read, any write calls on the <code>HttpResponse</code> will automatically drain the request body.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.HttpResponse"
        "parameters" : 
  "Cookie" : 
    "name" : "Cookie"
    "qualifiedname" : "dart.io.Cookie"
    "comment" : "<p>Representation of a cookie. For cookies received by the server as Cookie header values only <code>:name:</code> and <code>:value:</code> fields will be set. When building a cookie for the 'set-cookie' header in the server and when receiving cookies in the client as 'set-cookie' headers all fields can be used.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "name" : 
        "name" : "name"
        "qualifiedname" : "dart.io.Cookie.name"
        "comment" : "<p>Gets and sets the name.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io.Cookie.value"
        "comment" : "<p>Gets and sets the value.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "expires" : 
        "name" : "expires"
        "qualifiedname" : "dart.io.Cookie.expires"
        "comment" : "<p>Gets and sets the expiry date.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "maxAge" : 
        "name" : "maxAge"
        "qualifiedname" : "dart.io.Cookie.maxAge"
        "comment" : "<p>Gets and sets the max age. A value of <code>:0:</code> means delete cookie now.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "domain" : 
        "name" : "domain"
        "qualifiedname" : "dart.io.Cookie.domain"
        "comment" : "<p>Gets and sets the domain.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.Cookie.path"
        "comment" : "<p>Gets and sets the path.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "secure" : 
        "name" : "secure"
        "qualifiedname" : "dart.io.Cookie.secure"
        "comment" : "<p>Gets and sets whether this cookie is secure.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "httpOnly" : 
        "name" : "httpOnly"
        "qualifiedname" : "dart.io.Cookie.httpOnly"
        "comment" : "<p>Gets and sets whether this cookie is HTTP only.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "Cookie" : 
        "name" : "Cookie"
        "qualifiedname" : "dart.io.Cookie.Cookie"
        "comment" : "<p>Creates a new cookie optionally setting the name and value.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Cookie"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.Cookie.Cookie#name"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.Cookie.Cookie#value"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "Cookie.fromSetCookieValue" : 
        "name" : "Cookie.fromSetCookieValue"
        "qualifiedname" : "dart.io.Cookie.Cookie.fromSetCookieValue"
        "comment" : "<p>Creates a new cookie by parsing a header value from a 'set-cookie' header.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Cookie"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.Cookie.Cookie.fromSetCookieValue#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.Cookie.toString"
        "comment" : "<p>Returns the formatted string representation of the cookie. The string representation can be used for for setting the Cookie or 'set-cookie' headers</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "ContentType" : 
    "name" : "ContentType"
    "qualifiedname" : "dart.io.ContentType"
    "comment" : "<p>Representation of a content type. An instance of <code>ContentType</code> is immutable.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.HeaderValue"
    "variables" : 
    "methods" : 
      "ContentType" : 
        "name" : "ContentType"
        "qualifiedname" : "dart.io.ContentType.ContentType"
        "comment" : "<p>Creates a new content type object setting the primary type and sub type. The charset and additional parameters can also be set using <code>charset</code> and <code>parameters</code>. If charset is passed and <code>parameters</code> contains charset as well the passed <code>charset</code> will override the value in parameters. Keys and values passed in parameters will be converted to lower case.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.ContentType"
        "parameters" : 
          "primaryType" : 
            "name" : "primaryType"
            "qualifiedname" : "dart.io.ContentType.ContentType#primaryType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "subType" : 
            "name" : "subType"
            "qualifiedname" : "dart.io.ContentType.ContentType#subType"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "charset" : 
            "name" : "charset"
            "qualifiedname" : "dart.io.ContentType.ContentType#charset"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "parameters" : 
            "name" : "parameters"
            "qualifiedname" : "dart.io.ContentType.ContentType#parameters"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io.ContentType.parse"
        "comment" : "<p>Creates a new content type object from parsing a Content-Type header value. As primary type, sub type and parameter names and values are not case sensitive all these values will be converted to lower case. Parsing this string</p> <pre><code>text/html; charset=utf-8 </code></pre> <p>will create a content type object with primary type <code>:text:</code>, sub type <code>:html:</code> and parameter <code>:charset:</code> with value <code>:utf-8:</code>.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.ContentType"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.ContentType.parse#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "mimeType" : 
        "name" : "mimeType"
        "qualifiedname" : "dart.io.ContentType.mimeType"
        "comment" : "<p>Gets the mime-type, without any parameters.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "primaryType" : 
        "name" : "primaryType"
        "qualifiedname" : "dart.io.ContentType.primaryType"
        "comment" : "<p>Gets the primary type.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "subType" : 
        "name" : "subType"
        "qualifiedname" : "dart.io.ContentType.subType"
        "comment" : "<p>Gets the sub type.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "charset" : 
        "name" : "charset"
        "qualifiedname" : "dart.io.ContentType.charset"
        "comment" : "<p>Gets the character set.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "HttpSession" : 
    "name" : "HttpSession"
    "qualifiedname" : "dart.io.HttpSession"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Map"
    "variables" : 
    "methods" : 
      "id" : 
        "name" : "id"
        "qualifiedname" : "dart.io.HttpSession.id"
        "comment" : "<p>Gets the id for the current session.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "destroy" : 
        "name" : "destroy"
        "qualifiedname" : "dart.io.HttpSession.destroy"
        "comment" : "<p>Destroys the session. This will terminate the session and any further connections with this id will be given a new id and session.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "onTimeout=" : 
        "name" : "onTimeout="
        "qualifiedname" : "dart.io.HttpSession.onTimeout="
        "comment" : "<p>Sets a callback that will be called when the session is timed out.</p>"
        "type" : "setter"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "callback" : 
            "name" : "callback"
            "qualifiedname" : "dart.io.HttpSession.onTimeout=#callback"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "isNew" : 
        "name" : "isNew"
        "qualifiedname" : "dart.io.HttpSession.isNew"
        "comment" : "<p>Is true if the session has not been sent to the client yet.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
  "HeaderValue" : 
    "name" : "HeaderValue"
    "qualifiedname" : "dart.io.HeaderValue"
    "comment" : "<p>Representation of a header value in the form:</p> <p>  <code>:value; parameter1=value1; parameter2=value2:</code></p> <p><code>HeaderValue</code> can be used to conveniently build and parse header values on this form.</p> <p>To build an <code>:accepts:</code> header with the value</p> <pre><code>text/plain; q=0.3, text/html </code></pre> <p>use code like this:</p> <pre><code>HttpClientRequest request = ...; var v = new HeaderValue(\"text/plain\", {\"q\": \"0.3\"}); request.headers.add(HttpHeaders.ACCEPT, v); request.headers.add(HttpHeaders.ACCEPT, \"text/html\"); </code></pre> <p>To parse the header values use the <code>:parse:</code> static method.</p> <pre><code>HttpRequest request = ...; List&lt;String&gt; values = request.headers[HttpHeaders.ACCEPT]; values.forEach((value) {   HeaderValue v = HeaderValue.parse(value);   // Use v.value and v.parameters }); </code></pre> <p>An instance of <code>HeaderValue</code> is immutable.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "HeaderValue" : 
        "name" : "HeaderValue"
        "qualifiedname" : "dart.io.HeaderValue.HeaderValue"
        "comment" : "<p>Creates a new header value object setting the value part.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.HeaderValue"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.HeaderValue.HeaderValue#value"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "parameters" : 
            "name" : "parameters"
            "qualifiedname" : "dart.io.HeaderValue.HeaderValue#parameters"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Map"
            "value" : "null"
      "parse" : 
        "name" : "parse"
        "qualifiedname" : "dart.io.HeaderValue.parse"
        "comment" : "<p>Creates a new header value object from parsing a header value string with both value and optional parameters.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.HeaderValue"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.HeaderValue.parse#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "parameterSeparator" : 
            "name" : "parameterSeparator"
            "qualifiedname" : "dart.io.HeaderValue.parse#parameterSeparator"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\";\""
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io.HeaderValue.value"
        "comment" : "<p>Gets the header value.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "parameters" : 
        "name" : "parameters"
        "qualifiedname" : "dart.io.HeaderValue.parameters"
        "comment" : "<p>Gets the map of parameters.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.Map"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.HeaderValue.toString"
        "comment" : "<p>Returns the formatted string representation in the form:</p> <pre><code>value; parameter1=value1; parameter2=value2 </code></pre>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "HttpHeaders" : 
    "name" : "HttpHeaders"
    "qualifiedname" : "dart.io.HttpHeaders"
    "comment" : "<p>Access to the HTTP headers for requests and responses. In some situations the headers will be immutable and the mutating methods will then throw exceptions.</p> <p>For all operations on HTTP headers the header name is case-insensitive.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "ACCEPT" : 
        "name" : "ACCEPT"
        "qualifiedname" : "dart.io.HttpHeaders.ACCEPT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ACCEPT_CHARSET" : 
        "name" : "ACCEPT_CHARSET"
        "qualifiedname" : "dart.io.HttpHeaders.ACCEPT_CHARSET"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ACCEPT_ENCODING" : 
        "name" : "ACCEPT_ENCODING"
        "qualifiedname" : "dart.io.HttpHeaders.ACCEPT_ENCODING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ACCEPT_LANGUAGE" : 
        "name" : "ACCEPT_LANGUAGE"
        "qualifiedname" : "dart.io.HttpHeaders.ACCEPT_LANGUAGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ACCEPT_RANGES" : 
        "name" : "ACCEPT_RANGES"
        "qualifiedname" : "dart.io.HttpHeaders.ACCEPT_RANGES"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "AGE" : 
        "name" : "AGE"
        "qualifiedname" : "dart.io.HttpHeaders.AGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ALLOW" : 
        "name" : "ALLOW"
        "qualifiedname" : "dart.io.HttpHeaders.ALLOW"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "AUTHORIZATION" : 
        "name" : "AUTHORIZATION"
        "qualifiedname" : "dart.io.HttpHeaders.AUTHORIZATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CACHE_CONTROL" : 
        "name" : "CACHE_CONTROL"
        "qualifiedname" : "dart.io.HttpHeaders.CACHE_CONTROL"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONNECTION" : 
        "name" : "CONNECTION"
        "qualifiedname" : "dart.io.HttpHeaders.CONNECTION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_ENCODING" : 
        "name" : "CONTENT_ENCODING"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_ENCODING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_LANGUAGE" : 
        "name" : "CONTENT_LANGUAGE"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_LANGUAGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_LENGTH" : 
        "name" : "CONTENT_LENGTH"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_LENGTH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_LOCATION" : 
        "name" : "CONTENT_LOCATION"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_LOCATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_MD5" : 
        "name" : "CONTENT_MD5"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_MD5"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_RANGE" : 
        "name" : "CONTENT_RANGE"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_RANGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CONTENT_TYPE" : 
        "name" : "CONTENT_TYPE"
        "qualifiedname" : "dart.io.HttpHeaders.CONTENT_TYPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "DATE" : 
        "name" : "DATE"
        "qualifiedname" : "dart.io.HttpHeaders.DATE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ETAG" : 
        "name" : "ETAG"
        "qualifiedname" : "dart.io.HttpHeaders.ETAG"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "EXPECT" : 
        "name" : "EXPECT"
        "qualifiedname" : "dart.io.HttpHeaders.EXPECT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "EXPIRES" : 
        "name" : "EXPIRES"
        "qualifiedname" : "dart.io.HttpHeaders.EXPIRES"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "FROM" : 
        "name" : "FROM"
        "qualifiedname" : "dart.io.HttpHeaders.FROM"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "HOST" : 
        "name" : "HOST"
        "qualifiedname" : "dart.io.HttpHeaders.HOST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "IF_MATCH" : 
        "name" : "IF_MATCH"
        "qualifiedname" : "dart.io.HttpHeaders.IF_MATCH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "IF_MODIFIED_SINCE" : 
        "name" : "IF_MODIFIED_SINCE"
        "qualifiedname" : "dart.io.HttpHeaders.IF_MODIFIED_SINCE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "IF_NONE_MATCH" : 
        "name" : "IF_NONE_MATCH"
        "qualifiedname" : "dart.io.HttpHeaders.IF_NONE_MATCH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "IF_RANGE" : 
        "name" : "IF_RANGE"
        "qualifiedname" : "dart.io.HttpHeaders.IF_RANGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "IF_UNMODIFIED_SINCE" : 
        "name" : "IF_UNMODIFIED_SINCE"
        "qualifiedname" : "dart.io.HttpHeaders.IF_UNMODIFIED_SINCE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "LAST_MODIFIED" : 
        "name" : "LAST_MODIFIED"
        "qualifiedname" : "dart.io.HttpHeaders.LAST_MODIFIED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "LOCATION" : 
        "name" : "LOCATION"
        "qualifiedname" : "dart.io.HttpHeaders.LOCATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "MAX_FORWARDS" : 
        "name" : "MAX_FORWARDS"
        "qualifiedname" : "dart.io.HttpHeaders.MAX_FORWARDS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "PRAGMA" : 
        "name" : "PRAGMA"
        "qualifiedname" : "dart.io.HttpHeaders.PRAGMA"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "PROXY_AUTHENTICATE" : 
        "name" : "PROXY_AUTHENTICATE"
        "qualifiedname" : "dart.io.HttpHeaders.PROXY_AUTHENTICATE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "PROXY_AUTHORIZATION" : 
        "name" : "PROXY_AUTHORIZATION"
        "qualifiedname" : "dart.io.HttpHeaders.PROXY_AUTHORIZATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "RANGE" : 
        "name" : "RANGE"
        "qualifiedname" : "dart.io.HttpHeaders.RANGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "REFERER" : 
        "name" : "REFERER"
        "qualifiedname" : "dart.io.HttpHeaders.REFERER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "RETRY_AFTER" : 
        "name" : "RETRY_AFTER"
        "qualifiedname" : "dart.io.HttpHeaders.RETRY_AFTER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "SERVER" : 
        "name" : "SERVER"
        "qualifiedname" : "dart.io.HttpHeaders.SERVER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "TE" : 
        "name" : "TE"
        "qualifiedname" : "dart.io.HttpHeaders.TE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "TRAILER" : 
        "name" : "TRAILER"
        "qualifiedname" : "dart.io.HttpHeaders.TRAILER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "TRANSFER_ENCODING" : 
        "name" : "TRANSFER_ENCODING"
        "qualifiedname" : "dart.io.HttpHeaders.TRANSFER_ENCODING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "UPGRADE" : 
        "name" : "UPGRADE"
        "qualifiedname" : "dart.io.HttpHeaders.UPGRADE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "USER_AGENT" : 
        "name" : "USER_AGENT"
        "qualifiedname" : "dart.io.HttpHeaders.USER_AGENT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "VARY" : 
        "name" : "VARY"
        "qualifiedname" : "dart.io.HttpHeaders.VARY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "VIA" : 
        "name" : "VIA"
        "qualifiedname" : "dart.io.HttpHeaders.VIA"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "WARNING" : 
        "name" : "WARNING"
        "qualifiedname" : "dart.io.HttpHeaders.WARNING"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "WWW_AUTHENTICATE" : 
        "name" : "WWW_AUTHENTICATE"
        "qualifiedname" : "dart.io.HttpHeaders.WWW_AUTHENTICATE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "COOKIE" : 
        "name" : "COOKIE"
        "qualifiedname" : "dart.io.HttpHeaders.COOKIE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "SET_COOKIE" : 
        "name" : "SET_COOKIE"
        "qualifiedname" : "dart.io.HttpHeaders.SET_COOKIE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "GENERAL_HEADERS" : 
        "name" : "GENERAL_HEADERS"
        "qualifiedname" : "dart.io.HttpHeaders.GENERAL_HEADERS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "ENTITY_HEADERS" : 
        "name" : "ENTITY_HEADERS"
        "qualifiedname" : "dart.io.HttpHeaders.ENTITY_HEADERS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "RESPONSE_HEADERS" : 
        "name" : "RESPONSE_HEADERS"
        "qualifiedname" : "dart.io.HttpHeaders.RESPONSE_HEADERS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "REQUEST_HEADERS" : 
        "name" : "REQUEST_HEADERS"
        "qualifiedname" : "dart.io.HttpHeaders.REQUEST_HEADERS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "date" : 
        "name" : "date"
        "qualifiedname" : "dart.io.HttpHeaders.date"
        "comment" : "<p>Gets and sets the date. The value of this property will reflect the 'date' header.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "expires" : 
        "name" : "expires"
        "qualifiedname" : "dart.io.HttpHeaders.expires"
        "comment" : "<p>Gets and sets the expiry date. The value of this property will reflect the 'expires' header.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "ifModifiedSince" : 
        "name" : "ifModifiedSince"
        "qualifiedname" : "dart.io.HttpHeaders.ifModifiedSince"
        "comment" : "<p>Gets and sets the \"if-modified-since\" date. The value of this property will reflect the \"if-modified-since\" header.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "host" : 
        "name" : "host"
        "qualifiedname" : "dart.io.HttpHeaders.host"
        "comment" : "<p>Gets and sets the host part of the 'host' header for the connection.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.HttpHeaders.port"
        "comment" : "<p>Gets and sets the port part of the 'host' header for the connection.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "contentType" : 
        "name" : "contentType"
        "qualifiedname" : "dart.io.HttpHeaders.contentType"
        "comment" : "<p>Gets and sets the content type. Note that the content type in the header will only be updated if this field is set directly. Mutating the returned current value will have no effect.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.ContentType"
      "contentLength" : 
        "name" : "contentLength"
        "qualifiedname" : "dart.io.HttpHeaders.contentLength"
        "comment" : "<p>Gets and sets the content length header value.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "persistentConnection" : 
        "name" : "persistentConnection"
        "qualifiedname" : "dart.io.HttpHeaders.persistentConnection"
        "comment" : "<p>Gets and sets the persistent connection header value.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "chunkedTransferEncoding" : 
        "name" : "chunkedTransferEncoding"
        "qualifiedname" : "dart.io.HttpHeaders.chunkedTransferEncoding"
        "comment" : "<p>Gets and sets the chunked transfer encoding header value.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "[]" : 
        "name" : "[]"
        "qualifiedname" : "dart.io.HttpHeaders.[]"
        "comment" : "<p>Returns the list of values for the header named <code>name</code>. If there is no header with the provided name, <code>:null:</code> will be returned.</p>"
        "type" : "operator"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.[]#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "value" : 
        "name" : "value"
        "qualifiedname" : "dart.io.HttpHeaders.value"
        "comment" : "<p>Convenience method for the value for a single valued header. If there is no header with the provided name, <code>:null:</code> will be returned. If the header has more than one value an exception is thrown.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.value#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io.HttpHeaders.add"
        "comment" : "<p>Adds a header value. The header named <code>name</code> will have the value <code>value</code> added to its list of values. Some headers are single valued, and for these adding a value will replace the previous value. If the value is of type DateTime a HTTP date format will be applied. If the value is a <code>:List:</code> each element of the list will be added separately. For all other types the default <code>:toString:</code> method will be used.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.add#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.HttpHeaders.add#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "set" : 
        "name" : "set"
        "qualifiedname" : "dart.io.HttpHeaders.set"
        "comment" : "<p>Sets a header. The header named <code>name</code> will have all its values cleared before the value <code>value</code> is added as its value.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.set#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.HttpHeaders.set#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "remove" : 
        "name" : "remove"
        "qualifiedname" : "dart.io.HttpHeaders.remove"
        "comment" : "<p>Removes a specific value for a header name. Some headers have system supplied values and for these the system supplied values will still be added to the collection of values for the header.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.remove#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.HttpHeaders.remove#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
      "removeAll" : 
        "name" : "removeAll"
        "qualifiedname" : "dart.io.HttpHeaders.removeAll"
        "comment" : "<p>Removes all values for the specified header name. Some headers have system supplied values and for these the system supplied values will still be added to the collection of values for the header.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.removeAll#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "forEach" : 
        "name" : "forEach"
        "qualifiedname" : "dart.io.HttpHeaders.forEach"
        "comment" : "<p>Enumerates the headers, applying the function <code>f</code> to each header. The header name passed in <code>:name:</code> will be all lower case.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "f" : 
            "name" : "f"
            "qualifiedname" : "dart.io.HttpHeaders.forEach#f"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
      "noFolding" : 
        "name" : "noFolding"
        "qualifiedname" : "dart.io.HttpHeaders.noFolding"
        "comment" : "<p>Disables folding for the header named <code>name</code> when sending the HTTP header. By default, multiple header values are folded into a single header line by separating the values with commas. The 'set-cookie' header has folding disabled by default.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "name" : 
            "name" : "name"
            "qualifiedname" : "dart.io.HttpHeaders.noFolding#name"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "HttpConnectionsInfo" : 
    "name" : "HttpConnectionsInfo"
    "qualifiedname" : "dart.io.HttpConnectionsInfo"
    "comment" : "<p>Summary statistics about an <code>HttpServer</code>s current socket connections.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "total" : 
        "name" : "total"
        "qualifiedname" : "dart.io.HttpConnectionsInfo.total"
        "comment" : "<p>Total number of socket connections.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "active" : 
        "name" : "active"
        "qualifiedname" : "dart.io.HttpConnectionsInfo.active"
        "comment" : "<p>Number of active connections where actual request/response processing is active.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "idle" : 
        "name" : "idle"
        "qualifiedname" : "dart.io.HttpConnectionsInfo.idle"
        "comment" : "<p>Number of idle connections held by clients as persistent connections.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "closing" : 
        "name" : "closing"
        "qualifiedname" : "dart.io.HttpConnectionsInfo.closing"
        "comment" : "<p>Number of connections which are preparing to close. Note: These connections are also part of the <code>:active:</code> count as they might still be sending data to the client before finally closing.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
  "HttpServer" : 
    "name" : "HttpServer"
    "qualifiedname" : "dart.io.HttpServer"
    "comment" : "<p>The <code>HttpServer</code> class implements the server side of the HTTP protocol. The <code>HttpServer</code> is a <code>Stream</code> of <code>HttpRequest</code>s. Each <code>HttpRequest</code> has an associated <code>HttpResponse</code> object as its <code>HttpRequest.response</code> member, and the server responds to a request by writing to that <code>HttpResponse</code> object.</p> <p>Incomplete requests where all or parts of the header is missing, are ignored and no exceptions or <code>HttpRequest</code> objects are generated for them. Likewise, when writing to a <code>HttpResponse</code>, any <code>Socket</code> exceptions are ignored and any future writes are ignored.</p> <p>The <code>HttpRequest</code> exposes the request headers, and provides the request body, if it exists, as a stream of data. If the body is unread, it'll be drained when the <code>HttpResponse</code> is being written to or closed.</p> <p>The following example shows how to bind a <code>HttpServer</code> to a IPv6 <code>InternetAddress</code> on port 80, and listening to requests.</p> <p>  HttpServer.bind(InternetAddress.ANY<em>IP</em>V6, 80).then((server) {</p> <pre><code>server.listen((HttpRequest request) {   // Handle requests. }); </code></pre> <p>  });</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.async.Stream"
    "variables" : 
      "serverHeader" : 
        "name" : "serverHeader"
        "qualifiedname" : "dart.io.HttpServer.serverHeader"
        "comment" : "<p>Set and get the default value of the <code>Server</code> header for all responses generated by this <code>HttpServer</code>. The default value is <code>Dart/&lt;version&gt; (dart:io)</code>.</p> <p>If the serverHeader is set to <code>null</code>, no default <code>Server</code> header will be added to each response.</p>"
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "bind" : 
        "name" : "bind"
        "qualifiedname" : "dart.io.HttpServer.bind"
        "comment" : "<p>Starts listening for HTTP requests on the specified <code>address</code> and <code>port</code>.</p> <p>The <code>address</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>address</code> is a <code>String</code>, <code>bind</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value [InternetAddress.LOOPBACK_IP_V4] or [InternetAddress.LOOPBACK_IP_V6]. To allow for incoming connection from the network use either one of the values [InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to bind to all interfaces or the IP address of a specific interface.</p> <p>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use <code>HttpServer.listenOn</code> with a <code>ServerSocket</code> configured for IP version 6 connections only.</p> <p>If <code>port</code> has the value <code>:0:</code> an ephemeral port will be chosen by the system. The actual port used can be retrieved using the <code>port</code> getter.</p> <p>The optional argument <code>backlog</code> can be used to specify the listen backlog for the underlying OS listen setup. If <code>backlog</code> has the value of <code>:0:</code> (the default) a reasonable value will be chosen by the system.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io.HttpServer.bind#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.HttpServer.bind#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io.HttpServer.bind#backlog"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
      "bindSecure" : 
        "name" : "bindSecure"
        "qualifiedname" : "dart.io.HttpServer.bindSecure"
        "comment" : "<p>The <code>address</code> can either be a <code>String</code> or an <code>InternetAddress</code>. If <code>address</code> is a <code>String</code>, <code>bind</code> will perform a <code>InternetAddress.lookup</code> and use the first value in the list. To listen on the loopback adapter, which will allow only incoming connections from the local host, use the value [InternetAddress.LOOPBACK_IP_V4] or [InternetAddress.LOOPBACK_IP_V6]. To allow for incoming connection from the network use either one of the values [InternetAddress.ANY_IP_V4] or [InternetAddress.ANY_IP_V6] to bind to all interfaces or the IP address of a specific interface.</p> <p>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use <code>HttpServer.listenOn</code> with a <code>ServerSocket</code> configured for IP version 6 connections only.</p> <p>If <code>port</code> has the value <code>:0:</code> an ephemeral port will be chosen by the system. The actual port used can be retrieved using the <code>port</code> getter.</p> <p>The optional argument <code>backlog</code> can be used to specify the listen backlog for the underlying OS listen setup. If <code>backlog</code> has the value of <code>:0:</code> (the default) a reasonable value will be chosen by the system.</p> <p>The certificate with Distinguished Name <code>certificateName</code> is looked up in the certificate database, and is used as the server certificate. if <code>requestClientCertificate</code> is true, the server will request clients to authenticate with a client certificate.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "address" : 
            "name" : "address"
            "qualifiedname" : "dart.io.HttpServer.bindSecure#address"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "port" : 
            "name" : "port"
            "qualifiedname" : "dart.io.HttpServer.bindSecure#port"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "backlog" : 
            "name" : "backlog"
            "qualifiedname" : "dart.io.HttpServer.bindSecure#backlog"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "0"
          "certificateName" : 
            "name" : "certificateName"
            "qualifiedname" : "dart.io.HttpServer.bindSecure#certificateName"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "requestClientCertificate" : 
            "name" : "requestClientCertificate"
            "qualifiedname" : "dart.io.HttpServer.bindSecure#requestClientCertificate"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "HttpServer.listenOn" : 
        "name" : "HttpServer.listenOn"
        "qualifiedname" : "dart.io.HttpServer.HttpServer.listenOn"
        "comment" : "<p>Attaches the HTTP server to an existing <code>ServerSocket</code>. When the <code>HttpServer</code> is closed, the <code>HttpServer</code> will just detach itself, closing current connections but not closing <code>serverSocket</code>.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.HttpServer"
        "parameters" : 
          "serverSocket" : 
            "name" : "serverSocket"
            "qualifiedname" : "dart.io.HttpServer.HttpServer.listenOn#serverSocket"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.ServerSocket"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.HttpServer.close"
        "comment" : "<p>Permanently stops this <code>HttpServer</code> from listening for new connections. This closes this <code>Stream</code> of <code>HttpRequest</code>s with a done event.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "port" : 
        "name" : "port"
        "qualifiedname" : "dart.io.HttpServer.port"
        "comment" : "<p>Returns the port that the server is listening on. This can be used to get the actual port used when a value of 0 for <code>:port:</code> is specified in the <code>bind</code> or <code>bindSecure</code> call.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "sessionTimeout=" : 
        "name" : "sessionTimeout="
        "qualifiedname" : "dart.io.HttpServer.sessionTimeout="
        "comment" : "<p>Sets the timeout, in seconds, for sessions of this <code>HttpServer</code>. The default timeout is 20 minutes.</p>"
        "type" : "setter"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "timeout" : 
            "name" : "timeout"
            "qualifiedname" : "dart.io.HttpServer.sessionTimeout=#timeout"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "connectionsInfo" : 
        "name" : "connectionsInfo"
        "qualifiedname" : "dart.io.HttpServer.connectionsInfo"
        "comment" : "<p>Returns an <code>HttpConnectionsInfo</code> object summarizing the number of current connections handled by the server.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.HttpConnectionsInfo"
        "parameters" : 
  "HttpStatus" : 
    "name" : "HttpStatus"
    "qualifiedname" : "dart.io.HttpStatus"
    "comment" : "<p>HTTP status codes.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "CONTINUE" : 
        "name" : "CONTINUE"
        "qualifiedname" : "dart.io.HttpStatus.CONTINUE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "SWITCHING_PROTOCOLS" : 
        "name" : "SWITCHING_PROTOCOLS"
        "qualifiedname" : "dart.io.HttpStatus.SWITCHING_PROTOCOLS"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "OK" : 
        "name" : "OK"
        "qualifiedname" : "dart.io.HttpStatus.OK"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CREATED" : 
        "name" : "CREATED"
        "qualifiedname" : "dart.io.HttpStatus.CREATED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "ACCEPTED" : 
        "name" : "ACCEPTED"
        "qualifiedname" : "dart.io.HttpStatus.ACCEPTED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NON_AUTHORITATIVE_INFORMATION" : 
        "name" : "NON_AUTHORITATIVE_INFORMATION"
        "qualifiedname" : "dart.io.HttpStatus.NON_AUTHORITATIVE_INFORMATION"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NO_CONTENT" : 
        "name" : "NO_CONTENT"
        "qualifiedname" : "dart.io.HttpStatus.NO_CONTENT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESET_CONTENT" : 
        "name" : "RESET_CONTENT"
        "qualifiedname" : "dart.io.HttpStatus.RESET_CONTENT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PARTIAL_CONTENT" : 
        "name" : "PARTIAL_CONTENT"
        "qualifiedname" : "dart.io.HttpStatus.PARTIAL_CONTENT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "MULTIPLE_CHOICES" : 
        "name" : "MULTIPLE_CHOICES"
        "qualifiedname" : "dart.io.HttpStatus.MULTIPLE_CHOICES"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "MOVED_PERMANENTLY" : 
        "name" : "MOVED_PERMANENTLY"
        "qualifiedname" : "dart.io.HttpStatus.MOVED_PERMANENTLY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "FOUND" : 
        "name" : "FOUND"
        "qualifiedname" : "dart.io.HttpStatus.FOUND"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "MOVED_TEMPORARILY" : 
        "name" : "MOVED_TEMPORARILY"
        "qualifiedname" : "dart.io.HttpStatus.MOVED_TEMPORARILY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "SEE_OTHER" : 
        "name" : "SEE_OTHER"
        "qualifiedname" : "dart.io.HttpStatus.SEE_OTHER"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NOT_MODIFIED" : 
        "name" : "NOT_MODIFIED"
        "qualifiedname" : "dart.io.HttpStatus.NOT_MODIFIED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "USE_PROXY" : 
        "name" : "USE_PROXY"
        "qualifiedname" : "dart.io.HttpStatus.USE_PROXY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "TEMPORARY_REDIRECT" : 
        "name" : "TEMPORARY_REDIRECT"
        "qualifiedname" : "dart.io.HttpStatus.TEMPORARY_REDIRECT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "BAD_REQUEST" : 
        "name" : "BAD_REQUEST"
        "qualifiedname" : "dart.io.HttpStatus.BAD_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "UNAUTHORIZED" : 
        "name" : "UNAUTHORIZED"
        "qualifiedname" : "dart.io.HttpStatus.UNAUTHORIZED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PAYMENT_REQUIRED" : 
        "name" : "PAYMENT_REQUIRED"
        "qualifiedname" : "dart.io.HttpStatus.PAYMENT_REQUIRED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "FORBIDDEN" : 
        "name" : "FORBIDDEN"
        "qualifiedname" : "dart.io.HttpStatus.FORBIDDEN"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NOT_FOUND" : 
        "name" : "NOT_FOUND"
        "qualifiedname" : "dart.io.HttpStatus.NOT_FOUND"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "METHOD_NOT_ALLOWED" : 
        "name" : "METHOD_NOT_ALLOWED"
        "qualifiedname" : "dart.io.HttpStatus.METHOD_NOT_ALLOWED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NOT_ACCEPTABLE" : 
        "name" : "NOT_ACCEPTABLE"
        "qualifiedname" : "dart.io.HttpStatus.NOT_ACCEPTABLE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PROXY_AUTHENTICATION_REQUIRED" : 
        "name" : "PROXY_AUTHENTICATION_REQUIRED"
        "qualifiedname" : "dart.io.HttpStatus.PROXY_AUTHENTICATION_REQUIRED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_TIMEOUT" : 
        "name" : "REQUEST_TIMEOUT"
        "qualifiedname" : "dart.io.HttpStatus.REQUEST_TIMEOUT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CONFLICT" : 
        "name" : "CONFLICT"
        "qualifiedname" : "dart.io.HttpStatus.CONFLICT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "GONE" : 
        "name" : "GONE"
        "qualifiedname" : "dart.io.HttpStatus.GONE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LENGTH_REQUIRED" : 
        "name" : "LENGTH_REQUIRED"
        "qualifiedname" : "dart.io.HttpStatus.LENGTH_REQUIRED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "PRECONDITION_FAILED" : 
        "name" : "PRECONDITION_FAILED"
        "qualifiedname" : "dart.io.HttpStatus.PRECONDITION_FAILED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_ENTITY_TOO_LARGE" : 
        "name" : "REQUEST_ENTITY_TOO_LARGE"
        "qualifiedname" : "dart.io.HttpStatus.REQUEST_ENTITY_TOO_LARGE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUEST_URI_TOO_LONG" : 
        "name" : "REQUEST_URI_TOO_LONG"
        "qualifiedname" : "dart.io.HttpStatus.REQUEST_URI_TOO_LONG"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "UNSUPPORTED_MEDIA_TYPE" : 
        "name" : "UNSUPPORTED_MEDIA_TYPE"
        "qualifiedname" : "dart.io.HttpStatus.UNSUPPORTED_MEDIA_TYPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "REQUESTED_RANGE_NOT_SATISFIABLE" : 
        "name" : "REQUESTED_RANGE_NOT_SATISFIABLE"
        "qualifiedname" : "dart.io.HttpStatus.REQUESTED_RANGE_NOT_SATISFIABLE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "EXPECTATION_FAILED" : 
        "name" : "EXPECTATION_FAILED"
        "qualifiedname" : "dart.io.HttpStatus.EXPECTATION_FAILED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "INTERNAL_SERVER_ERROR" : 
        "name" : "INTERNAL_SERVER_ERROR"
        "qualifiedname" : "dart.io.HttpStatus.INTERNAL_SERVER_ERROR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NOT_IMPLEMENTED" : 
        "name" : "NOT_IMPLEMENTED"
        "qualifiedname" : "dart.io.HttpStatus.NOT_IMPLEMENTED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "BAD_GATEWAY" : 
        "name" : "BAD_GATEWAY"
        "qualifiedname" : "dart.io.HttpStatus.BAD_GATEWAY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "SERVICE_UNAVAILABLE" : 
        "name" : "SERVICE_UNAVAILABLE"
        "qualifiedname" : "dart.io.HttpStatus.SERVICE_UNAVAILABLE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "GATEWAY_TIMEOUT" : 
        "name" : "GATEWAY_TIMEOUT"
        "qualifiedname" : "dart.io.HttpStatus.GATEWAY_TIMEOUT"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "HTTP_VERSION_NOT_SUPPORTED" : 
        "name" : "HTTP_VERSION_NOT_SUPPORTED"
        "qualifiedname" : "dart.io.HttpStatus.HTTP_VERSION_NOT_SUPPORTED"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "NETWORK_CONNECT_TIMEOUT_ERROR" : 
        "name" : "NETWORK_CONNECT_TIMEOUT_ERROR"
        "qualifiedname" : "dart.io.HttpStatus.NETWORK_CONNECT_TIMEOUT_ERROR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
    "methods" : 
  "FileSystemEntity" : 
    "name" : "FileSystemEntity"
    "qualifiedname" : "dart.io.FileSystemEntity"
    "comment" : "<p>A <code>FileSystemEntity</code> is a common super class for <code>File</code> and <code>Directory</code> objects.</p> <p><code>FileSystemEntity</code> objects are returned from directory listing operations. To determine if a FileSystemEntity is a <code>File</code> or a <code>Directory</code>, perform a type check:</p> <pre><code>if (entity is File) (entity as File).readAsStringSync(); </code></pre>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.FileSystemEntity.path"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_getType" : 
        "name" : "_getType"
        "qualifiedname" : "dart.io.FileSystemEntity._getType"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity._getType#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.FileSystemEntity._getType#followLinks"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_identical" : 
        "name" : "_identical"
        "qualifiedname" : "dart.io.FileSystemEntity._identical"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path1" : 
            "name" : "path1"
            "qualifiedname" : "dart.io.FileSystemEntity._identical#path1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "path2" : 
            "name" : "path2"
            "qualifiedname" : "dart.io.FileSystemEntity._identical#path2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_getTypeSync" : 
        "name" : "_getTypeSync"
        "qualifiedname" : "dart.io.FileSystemEntity._getTypeSync"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity._getTypeSync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.FileSystemEntity._getTypeSync#followLinks"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_getTypeAsync" : 
        "name" : "_getTypeAsync"
        "qualifiedname" : "dart.io.FileSystemEntity._getTypeAsync"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity._getTypeAsync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.FileSystemEntity._getTypeAsync#followLinks"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "identical" : 
        "name" : "identical"
        "qualifiedname" : "dart.io.FileSystemEntity.identical"
        "comment" : "<p>Synchronously checks whether two paths refer to the same object in the file system. Returns a [:Future<bool>:] that completes with the result.</p> <p>Comparing a link to its target returns false, as does comparing two links that point to the same target.  To check the target of a link, use Link.target explicitly to fetch it.  Directory links appearing inside a path are followed, though, to find the file system object.</p> <p>Completes the returned Future with an error if one of the paths points to an object that does not exist.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path1" : 
            "name" : "path1"
            "qualifiedname" : "dart.io.FileSystemEntity.identical#path1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "path2" : 
            "name" : "path2"
            "qualifiedname" : "dart.io.FileSystemEntity.identical#path2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "identicalSync" : 
        "name" : "identicalSync"
        "qualifiedname" : "dart.io.FileSystemEntity.identicalSync"
        "comment" : "<p>Synchronously checks whether two paths refer to the same object in the file system.</p> <p>Comparing a link to its target returns false, as does comparing two links that point to the same target.  To check the target of a link, use Link.target explicitly to fetch it.  Directory links appearing inside a path are followed, though, to find the file system object.</p> <p>Throws an error if one of the paths points to an object that does not exist.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "path1" : 
            "name" : "path1"
            "qualifiedname" : "dart.io.FileSystemEntity.identicalSync#path1"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "path2" : 
            "name" : "path2"
            "qualifiedname" : "dart.io.FileSystemEntity.identicalSync#path2"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "exists" : 
        "name" : "exists"
        "qualifiedname" : "dart.io.FileSystemEntity.exists"
        "comment" : "<p>Checks whether the file system entity with this path exists. Returns a [:Future<bool>:] that completes with the result.</p> <p>Since FileSystemEntity is abstract, every FileSystemEntity object is actually an instance of one of the subclasses <code>File</code>, <code>Directory</code>, and <code>Link</code>.  Calling <code>exists</code> on an instance of one of these subclasses checks whether the object exists in the file system object exists and is of the correct type (file, directory, or link).  To check whether a path points to an object on the file system, regardless of the object's type, use the <code>type</code> static method.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "existsSync" : 
        "name" : "existsSync"
        "qualifiedname" : "dart.io.FileSystemEntity.existsSync"
        "comment" : "<p>Synchronously checks whether the file system entity with this path exists.</p> <p>Since FileSystemEntity is abstract, every FileSystemEntity object is actually an instance of one of the subclasses <code>File</code>, <code>Directory</code>, and <code>Link</code>.  Calling <code>existsSync</code> on an instance of one of these subclasses checks whether the object exists in the file system object exists and is of the correct type (file, directory, or link).  To check whether a path points to an object on the file system, regardless of the object's type, use the <code>typeSync</code> static method.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io.FileSystemEntity.rename"
        "comment" : "<p>Renames this file system entity. Returns a <code>Future&lt;FileSystemEntity&gt;</code> that completes with a <code>FileSystemEntity</code> instance for the renamed file system entity.</p> <p>If <code>newPath</code> identifies an existing entity of the same type, that entity is replaced. If <code>newPath</code> identifies an existing entity of a different type, the operation fails and the future completes with an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.FileSystemEntity.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io.FileSystemEntity.renameSync"
        "comment" : "<p>Synchronously renames this file system entity. Returns a <code>FileSystemEntity</code> instance for the renamed entity.</p> <p>If <code>newPath</code> identifies an existing entity of the same type, that entity is replaced. If <code>newPath</code> identifies an existing entity of a different type, the operation fails and an exception is thrown.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.FileSystemEntity"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.FileSystemEntity.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "stat" : 
        "name" : "stat"
        "qualifiedname" : "dart.io.FileSystemEntity.stat"
        "comment" : "<p>Calls the operating system's stat() function on the <code>path</code> of this <code>FileSystemEntity</code>.  Identical to <code>:FileStat.stat(this.path):</code>.</p> <p>Returns a [:Future<FileStat>:] object containing the data returned by stat().</p> <p>If the call fails, completes the future with a <code>FileStat</code> object with .type set to FileSystemEntityType.NOT_FOUND and the other fields invalid.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "statSync" : 
        "name" : "statSync"
        "qualifiedname" : "dart.io.FileSystemEntity.statSync"
        "comment" : "<p>Synchronously calls the operating system's stat() function on the <code>path</code> of this <code>FileSystemEntity</code>. Identical to <code>:FileStat.statSync(this.path):</code>.</p> <p>Returns a <code>FileStat</code> object containing the data returned by stat().</p> <p>If the call fails, returns a <code>FileStat</code> object with .type set to FileSystemEntityType.NOT_FOUND and the other fields invalid.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.FileStat"
        "parameters" : 
      "type" : 
        "name" : "type"
        "qualifiedname" : "dart.io.FileSystemEntity.type"
        "comment" : "<p>Finds the type of file system object that a path points to. Returns a [:Future<FileSystemEntityType>:] that completes with the result.</p> <p><code>FileSystemEntityType</code> has the constant instances FILE, DIRECTORY, LINK, and NOT<em>FOUND.  <code>type</code> will return LINK only if the optional named argument <code>followLinks</code> is false, and <code>path</code> points to a link. If the path does not point to a file system object, or any other error occurs in looking up the path, NOT</em>FOUND is returned.  The only error or exception that may be put on the returned future is ArgumentError, caused by passing the wrong type of arguments to the function.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.type#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.FileSystemEntity.type#followLinks"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "typeSync" : 
        "name" : "typeSync"
        "qualifiedname" : "dart.io.FileSystemEntity.typeSync"
        "comment" : "<p>Synchronously finds the type of file system object that a path points to. Returns a <code>FileSystemEntityType</code>.</p> <p><code>FileSystemEntityType</code> has the constant instances FILE, DIRECTORY, LINK, and NOT<em>FOUND.  <code>type</code> will return LINK only if the optional named argument <code>followLinks</code> is false, and <code>path</code> points to a link. If the path does not point to a file system object, or any other error occurs in looking up the path, NOT</em>FOUND is returned.  The only error or exception that may be thrown is ArgumentError, caused by passing the wrong type of arguments to the function.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.FileSystemEntityType"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.typeSync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.FileSystemEntity.typeSync#followLinks"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "isLink" : 
        "name" : "isLink"
        "qualifiedname" : "dart.io.FileSystemEntity.isLink"
        "comment" : "<p>Checks if type(path, followLinks: false) returns FileSystemEntityType.LINK.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.isLink#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "isFile" : 
        "name" : "isFile"
        "qualifiedname" : "dart.io.FileSystemEntity.isFile"
        "comment" : "<p>Checks if type(path) returns FileSystemEntityType.FILE.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.isFile#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "isDirectory" : 
        "name" : "isDirectory"
        "qualifiedname" : "dart.io.FileSystemEntity.isDirectory"
        "comment" : "<p>Checks if type(path) returns FileSystemEntityType.DIRECTORY.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.isDirectory#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "isLinkSync" : 
        "name" : "isLinkSync"
        "qualifiedname" : "dart.io.FileSystemEntity.isLinkSync"
        "comment" : "<p>Synchronously checks if typeSync(path, followLinks: false) returns FileSystemEntityType.LINK.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.isLinkSync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "isFileSync" : 
        "name" : "isFileSync"
        "qualifiedname" : "dart.io.FileSystemEntity.isFileSync"
        "comment" : "<p>Synchronously checks if typeSync(path) returns FileSystemEntityType.FILE.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.isFileSync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "isDirectorySync" : 
        "name" : "isDirectorySync"
        "qualifiedname" : "dart.io.FileSystemEntity.isDirectorySync"
        "comment" : "<p>Synchronously checks if typeSync(path) returns FileSystemEntityType.DIRECTORY.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileSystemEntity.isDirectorySync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_throwIfError" : 
        "name" : "_throwIfError"
        "qualifiedname" : "dart.io.FileSystemEntity._throwIfError"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "result" : 
            "name" : "result"
            "qualifiedname" : "dart.io.FileSystemEntity._throwIfError#result"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "msg" : 
            "name" : "msg"
            "qualifiedname" : "dart.io.FileSystemEntity._throwIfError#msg"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "FileStat" : 
    "name" : "FileStat"
    "qualifiedname" : "dart.io.FileStat"
    "comment" : "<p>A FileStat object represents the result of calling the POSIX stat() function on a file system object.  It is an immutable object, representing the snapshotted values returned by the stat() call.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_TYPE" : 
        "name" : "_TYPE"
        "qualifiedname" : "dart.io.FileStat._TYPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_CHANGED_TIME" : 
        "name" : "_CHANGED_TIME"
        "qualifiedname" : "dart.io.FileStat._CHANGED_TIME"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_MODIFIED_TIME" : 
        "name" : "_MODIFIED_TIME"
        "qualifiedname" : "dart.io.FileStat._MODIFIED_TIME"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_ACCESSED_TIME" : 
        "name" : "_ACCESSED_TIME"
        "qualifiedname" : "dart.io.FileStat._ACCESSED_TIME"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_MODE" : 
        "name" : "_MODE"
        "qualifiedname" : "dart.io.FileStat._MODE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_SIZE" : 
        "name" : "_SIZE"
        "qualifiedname" : "dart.io.FileStat._SIZE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "changed" : 
        "name" : "changed"
        "qualifiedname" : "dart.io.FileStat.changed"
        "comment" : "<p>The time of the last change to the data or metadata of the file system object.  On Windows platforms, this is instead the file creation time.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "modified" : 
        "name" : "modified"
        "qualifiedname" : "dart.io.FileStat.modified"
        "comment" : "<p>The time of the last change to the data of the file system object.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "accessed" : 
        "name" : "accessed"
        "qualifiedname" : "dart.io.FileStat.accessed"
        "comment" : "<p>The time of the last access to the data of the file system object.  On Windows platforms, this may have 1 day granularity, and be out of date by an hour.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.DateTime"
      "type" : 
        "name" : "type"
        "qualifiedname" : "dart.io.FileStat.type"
        "comment" : "<p>The type of the object (file, directory, or link).  If the call to stat() fails, the type of the returned object is NOT_FOUND.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.FileSystemEntityType"
      "mode" : 
        "name" : "mode"
        "qualifiedname" : "dart.io.FileStat.mode"
        "comment" : "<p>The mode of the file system object.  Permissions are encoded in the lower 16 bits of this number, and can be decoded using the <code>modeString</code> getter.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "size" : 
        "name" : "size"
        "qualifiedname" : "dart.io.FileStat.size"
        "comment" : "<p>The size of the file system object.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "FileStat._internal" : 
        "name" : "FileStat._internal"
        "qualifiedname" : "dart.io.FileStat.FileStat._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "changed" : 
            "name" : "changed"
            "qualifiedname" : "dart.io.FileStat.FileStat._internal#changed"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
          "modified" : 
            "name" : "modified"
            "qualifiedname" : "dart.io.FileStat.FileStat._internal#modified"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
          "accessed" : 
            "name" : "accessed"
            "qualifiedname" : "dart.io.FileStat.FileStat._internal#accessed"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.DateTime"
            "value" : "null"
          "type" : 
            "name" : "type"
            "qualifiedname" : "dart.io.FileStat.FileStat._internal#type"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.FileSystemEntityType"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.FileStat.FileStat._internal#mode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "size" : 
            "name" : "size"
            "qualifiedname" : "dart.io.FileStat.FileStat._internal#size"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_statSync" : 
        "name" : "_statSync"
        "qualifiedname" : "dart.io.FileStat._statSync"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileStat._statSync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "statSync" : 
        "name" : "statSync"
        "qualifiedname" : "dart.io.FileStat.statSync"
        "comment" : "<p>Calls the operating system's stat() function on <code>path</code>. Returns a <code>FileStat</code> object containing the data returned by stat(). If the call fails, returns a <code>FileStat</code> object with .type set to FileSystemEntityType.NOT_FOUND and the other fields invalid.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.FileStat"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileStat.statSync#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "stat" : 
        "name" : "stat"
        "qualifiedname" : "dart.io.FileStat.stat"
        "comment" : "<p>Asynchronously calls the operating system's stat() function on <code>path</code>. Returns a Future which completes with a <code>FileStat</code> object containing the data returned by stat(). If the call fails, completes the future with a <code>FileStat</code> object with .type set to FileSystemEntityType.NOT_FOUND and the other fields invalid.</p>"
        "type" : "method"
        "static" : "true"
        "return" : "dart.async.Future"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileStat.stat#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.FileStat.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "modeString" : 
        "name" : "modeString"
        "qualifiedname" : "dart.io.FileStat.modeString"
        "comment" : "<p>Returns the mode value as a human-readable string, in the format \"rwxrwxrwx\", reflecting the user, group, and world permissions to read, write, and execute the file system object, with \"-\" replacing the letter for missing permissions.  Extra permission bits may be represented by prepending \"(suid)\", \"(guid)\", and/or \"(sticky)\" to the mode string.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "FileSystemEntityType" : 
    "name" : "FileSystemEntityType"
    "qualifiedname" : "dart.io.FileSystemEntityType"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "FILE" : 
        "name" : "FILE"
        "qualifiedname" : "dart.io.FileSystemEntityType.FILE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "DIRECTORY" : 
        "name" : "DIRECTORY"
        "qualifiedname" : "dart.io.FileSystemEntityType.DIRECTORY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "LINK" : 
        "name" : "LINK"
        "qualifiedname" : "dart.io.FileSystemEntityType.LINK"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "NOT_FOUND" : 
        "name" : "NOT_FOUND"
        "qualifiedname" : "dart.io.FileSystemEntityType.NOT_FOUND"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_typeList" : 
        "name" : "_typeList"
        "qualifiedname" : "dart.io.FileSystemEntityType._typeList"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_type" : 
        "name" : "_type"
        "qualifiedname" : "dart.io.FileSystemEntityType._type"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "FileSystemEntityType._internal" : 
        "name" : "FileSystemEntityType._internal"
        "qualifiedname" : "dart.io.FileSystemEntityType.FileSystemEntityType._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_type" : 
            "name" : "_type"
            "qualifiedname" : "dart.io.FileSystemEntityType.FileSystemEntityType._internal#_type"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_lookup" : 
        "name" : "_lookup"
        "qualifiedname" : "dart.io.FileSystemEntityType._lookup"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.FileSystemEntityType"
        "parameters" : 
          "type" : 
            "name" : "type"
            "qualifiedname" : "dart.io.FileSystemEntityType._lookup#type"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.FileSystemEntityType.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_RandomAccessFile" : 
    "name" : "_RandomAccessFile"
    "qualifiedname" : "dart.io._RandomAccessFile"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.RandomAccessFile"
    "variables" : 
      "_path" : 
        "name" : "_path"
        "qualifiedname" : "dart.io._RandomAccessFile._path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "_id" : 
        "name" : "_id"
        "qualifiedname" : "dart.io._RandomAccessFile._id"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_fileService" : 
        "name" : "_fileService"
        "qualifiedname" : "dart.io._RandomAccessFile._fileService"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.isolate.SendPort"
    "methods" : 
      "_RandomAccessFile" : 
        "name" : "_RandomAccessFile"
        "qualifiedname" : "dart.io._RandomAccessFile._RandomAccessFile"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_id" : 
            "name" : "_id"
            "qualifiedname" : "dart.io._RandomAccessFile._RandomAccessFile#_id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "_path" : 
            "name" : "_path"
            "qualifiedname" : "dart.io._RandomAccessFile._RandomAccessFile#_path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._RandomAccessFile.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_close" : 
        "name" : "_close"
        "qualifiedname" : "dart.io._RandomAccessFile._close"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._close#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "closeSync" : 
        "name" : "closeSync"
        "qualifiedname" : "dart.io._RandomAccessFile.closeSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "readByte" : 
        "name" : "readByte"
        "qualifiedname" : "dart.io._RandomAccessFile.readByte"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_readByte" : 
        "name" : "_readByte"
        "qualifiedname" : "dart.io._RandomAccessFile._readByte"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._readByte#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readByteSync" : 
        "name" : "readByteSync"
        "qualifiedname" : "dart.io._RandomAccessFile.readByteSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "read" : 
        "name" : "read"
        "qualifiedname" : "dart.io._RandomAccessFile.read"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._RandomAccessFile.read#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_read" : 
        "name" : "_read"
        "qualifiedname" : "dart.io._RandomAccessFile._read"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._read#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._RandomAccessFile._read#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readSync" : 
        "name" : "readSync"
        "qualifiedname" : "dart.io._RandomAccessFile.readSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._RandomAccessFile.readSync#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readInto" : 
        "name" : "readInto"
        "qualifiedname" : "dart.io._RandomAccessFile.readInto"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._RandomAccessFile.readInto#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile.readInto#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile.readInto#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_checkReadWriteListArguments" : 
        "name" : "_checkReadWriteListArguments"
        "qualifiedname" : "dart.io._RandomAccessFile._checkReadWriteListArguments"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io._RandomAccessFile._checkReadWriteListArguments#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile._checkReadWriteListArguments#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile._checkReadWriteListArguments#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_readInto" : 
        "name" : "_readInto"
        "qualifiedname" : "dart.io._RandomAccessFile._readInto"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._readInto#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._RandomAccessFile._readInto#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile._readInto#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile._readInto#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readIntoSync" : 
        "name" : "readIntoSync"
        "qualifiedname" : "dart.io._RandomAccessFile.readIntoSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._RandomAccessFile.readIntoSync#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile.readIntoSync#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile.readIntoSync#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeByte" : 
        "name" : "writeByte"
        "qualifiedname" : "dart.io._RandomAccessFile.writeByte"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._RandomAccessFile.writeByte#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_writeByte" : 
        "name" : "_writeByte"
        "qualifiedname" : "dart.io._RandomAccessFile._writeByte"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._writeByte#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._RandomAccessFile._writeByte#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeByteSync" : 
        "name" : "writeByteSync"
        "qualifiedname" : "dart.io._RandomAccessFile.writeByteSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io._RandomAccessFile.writeByteSync#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeFrom" : 
        "name" : "writeFrom"
        "qualifiedname" : "dart.io._RandomAccessFile.writeFrom"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._RandomAccessFile.writeFrom#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile.writeFrom#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile.writeFrom#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_writeFrom" : 
        "name" : "_writeFrom"
        "qualifiedname" : "dart.io._RandomAccessFile._writeFrom"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._writeFrom#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._RandomAccessFile._writeFrom#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile._writeFrom#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile._writeFrom#end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeFromSync" : 
        "name" : "writeFromSync"
        "qualifiedname" : "dart.io._RandomAccessFile.writeFromSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._RandomAccessFile.writeFromSync#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._RandomAccessFile.writeFromSync#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._RandomAccessFile.writeFromSync#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeString" : 
        "name" : "writeString"
        "qualifiedname" : "dart.io._RandomAccessFile.writeString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._RandomAccessFile.writeString#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._RandomAccessFile.writeString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "writeStringSync" : 
        "name" : "writeStringSync"
        "qualifiedname" : "dart.io._RandomAccessFile.writeStringSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io._RandomAccessFile.writeStringSync#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._RandomAccessFile.writeStringSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "position" : 
        "name" : "position"
        "qualifiedname" : "dart.io._RandomAccessFile.position"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_position" : 
        "name" : "_position"
        "qualifiedname" : "dart.io._RandomAccessFile._position"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._position#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "positionSync" : 
        "name" : "positionSync"
        "qualifiedname" : "dart.io._RandomAccessFile.positionSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "setPosition" : 
        "name" : "setPosition"
        "qualifiedname" : "dart.io._RandomAccessFile.setPosition"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "position" : 
            "name" : "position"
            "qualifiedname" : "dart.io._RandomAccessFile.setPosition#position"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_setPosition" : 
        "name" : "_setPosition"
        "qualifiedname" : "dart.io._RandomAccessFile._setPosition"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._setPosition#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "position" : 
            "name" : "position"
            "qualifiedname" : "dart.io._RandomAccessFile._setPosition#position"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "setPositionSync" : 
        "name" : "setPositionSync"
        "qualifiedname" : "dart.io._RandomAccessFile.setPositionSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "position" : 
            "name" : "position"
            "qualifiedname" : "dart.io._RandomAccessFile.setPositionSync#position"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "truncate" : 
        "name" : "truncate"
        "qualifiedname" : "dart.io._RandomAccessFile.truncate"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io._RandomAccessFile.truncate#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_truncate" : 
        "name" : "_truncate"
        "qualifiedname" : "dart.io._RandomAccessFile._truncate"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._truncate#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io._RandomAccessFile._truncate#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "truncateSync" : 
        "name" : "truncateSync"
        "qualifiedname" : "dart.io._RandomAccessFile.truncateSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io._RandomAccessFile.truncateSync#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io._RandomAccessFile.length"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_length" : 
        "name" : "_length"
        "qualifiedname" : "dart.io._RandomAccessFile._length"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._length#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "lengthSync" : 
        "name" : "lengthSync"
        "qualifiedname" : "dart.io._RandomAccessFile.lengthSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "flush" : 
        "name" : "flush"
        "qualifiedname" : "dart.io._RandomAccessFile.flush"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_flush" : 
        "name" : "_flush"
        "qualifiedname" : "dart.io._RandomAccessFile._flush"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "id" : 
            "name" : "id"
            "qualifiedname" : "dart.io._RandomAccessFile._flush#id"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "flushSync" : 
        "name" : "flushSync"
        "qualifiedname" : "dart.io._RandomAccessFile.flushSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._RandomAccessFile.path"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_ensureFileService" : 
        "name" : "_ensureFileService"
        "qualifiedname" : "dart.io._RandomAccessFile._ensureFileService"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "closed" : 
        "name" : "closed"
        "qualifiedname" : "dart.io._RandomAccessFile.closed"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "_checkNotClosed" : 
        "name" : "_checkNotClosed"
        "qualifiedname" : "dart.io._RandomAccessFile._checkNotClosed"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_closedException" : 
        "name" : "_closedException"
        "qualifiedname" : "dart.io._RandomAccessFile._closedException"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_File" : 
    "name" : "_File"
    "qualifiedname" : "dart.io._File"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.File"
    "variables" : 
      "_path" : 
        "name" : "_path"
        "qualifiedname" : "dart.io._File._path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "_fileService" : 
        "name" : "_fileService"
        "qualifiedname" : "dart.io._File._fileService"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.isolate.SendPort"
    "methods" : 
      "_File" : 
        "name" : "_File"
        "qualifiedname" : "dart.io._File._File"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_path" : 
            "name" : "_path"
            "qualifiedname" : "dart.io._File._File#_path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_File.fromPath" : 
        "name" : "_File.fromPath"
        "qualifiedname" : "dart.io._File._File.fromPath"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._File.fromPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "exists" : 
        "name" : "exists"
        "qualifiedname" : "dart.io._File.exists"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_exists" : 
        "name" : "_exists"
        "qualifiedname" : "dart.io._File._exists"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._exists#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "existsSync" : 
        "name" : "existsSync"
        "qualifiedname" : "dart.io._File.existsSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "stat" : 
        "name" : "stat"
        "qualifiedname" : "dart.io._File.stat"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "statSync" : 
        "name" : "statSync"
        "qualifiedname" : "dart.io._File.statSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.FileStat"
        "parameters" : 
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io._File.create"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_create" : 
        "name" : "_create"
        "qualifiedname" : "dart.io._File._create"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._create#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_createLink" : 
        "name" : "_createLink"
        "qualifiedname" : "dart.io._File._createLink"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._createLink#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "target" : 
            "name" : "target"
            "qualifiedname" : "dart.io._File._createLink#target"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_linkTarget" : 
        "name" : "_linkTarget"
        "qualifiedname" : "dart.io._File._linkTarget"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._linkTarget#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "createSync" : 
        "name" : "createSync"
        "qualifiedname" : "dart.io._File.createSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "delete" : 
        "name" : "delete"
        "qualifiedname" : "dart.io._File.delete"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_delete" : 
        "name" : "_delete"
        "qualifiedname" : "dart.io._File._delete"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._delete#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_deleteLink" : 
        "name" : "_deleteLink"
        "qualifiedname" : "dart.io._File._deleteLink"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._deleteLink#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "deleteSync" : 
        "name" : "deleteSync"
        "qualifiedname" : "dart.io._File.deleteSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io._File.rename"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._File.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_rename" : 
        "name" : "_rename"
        "qualifiedname" : "dart.io._File._rename"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "oldPath" : 
            "name" : "oldPath"
            "qualifiedname" : "dart.io._File._rename#oldPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._File._rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_renameLink" : 
        "name" : "_renameLink"
        "qualifiedname" : "dart.io._File._renameLink"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "oldPath" : 
            "name" : "oldPath"
            "qualifiedname" : "dart.io._File._renameLink#oldPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._File._renameLink#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io._File.renameSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.File"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._File.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "directory" : 
        "name" : "directory"
        "qualifiedname" : "dart.io._File.directory"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
      "open" : 
        "name" : "open"
        "qualifiedname" : "dart.io._File.open"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.open#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.READ"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io._File.length"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_lengthFromPath" : 
        "name" : "_lengthFromPath"
        "qualifiedname" : "dart.io._File._lengthFromPath"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._lengthFromPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "lengthSync" : 
        "name" : "lengthSync"
        "qualifiedname" : "dart.io._File.lengthSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "lastModified" : 
        "name" : "lastModified"
        "qualifiedname" : "dart.io._File.lastModified"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_lastModified" : 
        "name" : "_lastModified"
        "qualifiedname" : "dart.io._File._lastModified"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._lastModified#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "lastModifiedSync" : 
        "name" : "lastModifiedSync"
        "qualifiedname" : "dart.io._File.lastModifiedSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.DateTime"
        "parameters" : 
      "_open" : 
        "name" : "_open"
        "qualifiedname" : "dart.io._File._open"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._open#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File._open#mode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "openSync" : 
        "name" : "openSync"
        "qualifiedname" : "dart.io._File.openSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.RandomAccessFile"
        "parameters" : 
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.openSync#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.READ"
      "_openStdio" : 
        "name" : "_openStdio"
        "qualifiedname" : "dart.io._File._openStdio"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "fd" : 
            "name" : "fd"
            "qualifiedname" : "dart.io._File._openStdio#fd"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_openStdioSync" : 
        "name" : "_openStdioSync"
        "qualifiedname" : "dart.io._File._openStdioSync"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io.RandomAccessFile"
        "parameters" : 
          "fd" : 
            "name" : "fd"
            "qualifiedname" : "dart.io._File._openStdioSync#fd"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "fullPath" : 
        "name" : "fullPath"
        "qualifiedname" : "dart.io._File.fullPath"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_fullPath" : 
        "name" : "_fullPath"
        "qualifiedname" : "dart.io._File._fullPath"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File._fullPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "fullPathSync" : 
        "name" : "fullPathSync"
        "qualifiedname" : "dart.io._File.fullPathSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "openRead" : 
        "name" : "openRead"
        "qualifiedname" : "dart.io._File.openRead"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._File.openRead#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._File.openRead#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "openWrite" : 
        "name" : "openWrite"
        "qualifiedname" : "dart.io._File.openWrite"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.IOSink"
        "parameters" : 
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.openWrite#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.openWrite#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsBytes" : 
        "name" : "readAsBytes"
        "qualifiedname" : "dart.io._File.readAsBytes"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "readAsBytesSync" : 
        "name" : "readAsBytesSync"
        "qualifiedname" : "dart.io._File.readAsBytesSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "readAsString" : 
        "name" : "readAsString"
        "qualifiedname" : "dart.io._File.readAsString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.readAsString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsStringSync" : 
        "name" : "readAsStringSync"
        "qualifiedname" : "dart.io._File.readAsStringSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.readAsStringSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "_decodeLines" : 
        "name" : "_decodeLines"
        "qualifiedname" : "dart.io._File._decodeLines"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._File._decodeLines#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File._decodeLines#encoding"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Encoding"
            "value" : "null"
      "readAsLines" : 
        "name" : "readAsLines"
        "qualifiedname" : "dart.io._File.readAsLines"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.readAsLines#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsLinesSync" : 
        "name" : "readAsLinesSync"
        "qualifiedname" : "dart.io._File.readAsLinesSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.readAsLinesSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "writeAsBytes" : 
        "name" : "writeAsBytes"
        "qualifiedname" : "dart.io._File.writeAsBytes"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._File.writeAsBytes#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.writeAsBytes#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
      "writeAsBytesSync" : 
        "name" : "writeAsBytesSync"
        "qualifiedname" : "dart.io._File.writeAsBytesSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._File.writeAsBytesSync#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.writeAsBytesSync#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
      "writeAsString" : 
        "name" : "writeAsString"
        "qualifiedname" : "dart.io._File.writeAsString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "contents" : 
            "name" : "contents"
            "qualifiedname" : "dart.io._File.writeAsString#contents"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.writeAsString#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.writeAsString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "writeAsStringSync" : 
        "name" : "writeAsStringSync"
        "qualifiedname" : "dart.io._File.writeAsStringSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "contents" : 
            "name" : "contents"
            "qualifiedname" : "dart.io._File.writeAsStringSync#contents"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._File.writeAsStringSync#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io._File.writeAsStringSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._File.path"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._File.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_ensureFileService" : 
        "name" : "_ensureFileService"
        "qualifiedname" : "dart.io._File._ensureFileService"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "throwIfError" : 
        "name" : "throwIfError"
        "qualifiedname" : "dart.io._File.throwIfError"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "result" : 
            "name" : "result"
            "qualifiedname" : "dart.io._File.throwIfError#result"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "msg" : 
            "name" : "msg"
            "qualifiedname" : "dart.io._File.throwIfError#msg"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._File.throwIfError#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
  "_FileUtils" : 
    "name" : "_FileUtils"
    "qualifiedname" : "dart.io._FileUtils"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_newServicePort" : 
        "name" : "_newServicePort"
        "qualifiedname" : "dart.io._FileUtils._newServicePort"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.isolate.SendPort"
        "parameters" : 
  "_FileStreamConsumer" : 
    "name" : "_FileStreamConsumer"
    "qualifiedname" : "dart.io._FileStreamConsumer"
    "comment" : ""
    "superclass" : "dart.async.StreamConsumer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_file" : 
        "name" : "_file"
        "qualifiedname" : "dart.io._FileStreamConsumer._file"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.File"
      "_openFuture" : 
        "name" : "_openFuture"
        "qualifiedname" : "dart.io._FileStreamConsumer._openFuture"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.Future"
      "_subscription" : 
        "name" : "_subscription"
        "qualifiedname" : "dart.io._FileStreamConsumer._subscription"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamSubscription"
    "methods" : 
      "_FileStreamConsumer" : 
        "name" : "_FileStreamConsumer"
        "qualifiedname" : "dart.io._FileStreamConsumer._FileStreamConsumer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_file" : 
            "name" : "_file"
            "qualifiedname" : "dart.io._FileStreamConsumer._FileStreamConsumer#_file"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.File"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io._FileStreamConsumer._FileStreamConsumer#mode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.FileMode"
            "value" : "null"
      "_FileStreamConsumer.fromStdio" : 
        "name" : "_FileStreamConsumer.fromStdio"
        "qualifiedname" : "dart.io._FileStreamConsumer._FileStreamConsumer.fromStdio"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "fd" : 
            "name" : "fd"
            "qualifiedname" : "dart.io._FileStreamConsumer._FileStreamConsumer.fromStdio#fd"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "addStream" : 
        "name" : "addStream"
        "qualifiedname" : "dart.io._FileStreamConsumer.addStream"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "stream" : 
            "name" : "stream"
            "qualifiedname" : "dart.io._FileStreamConsumer.addStream#stream"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.Stream"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._FileStreamConsumer.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
  "_FileStream" : 
    "name" : "_FileStream"
    "qualifiedname" : "dart.io._FileStream"
    "comment" : ""
    "superclass" : "dart.async.Stream"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_controller" : 
        "name" : "_controller"
        "qualifiedname" : "dart.io._FileStream._controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "_path" : 
        "name" : "_path"
        "qualifiedname" : "dart.io._FileStream._path"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.String"
      "_openedFile" : 
        "name" : "_openedFile"
        "qualifiedname" : "dart.io._FileStream._openedFile"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.io.RandomAccessFile"
      "_position" : 
        "name" : "_position"
        "qualifiedname" : "dart.io._FileStream._position"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_end" : 
        "name" : "_end"
        "qualifiedname" : "dart.io._FileStream._end"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_paused" : 
        "name" : "_paused"
        "qualifiedname" : "dart.io._FileStream._paused"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_unsubscribed" : 
        "name" : "_unsubscribed"
        "qualifiedname" : "dart.io._FileStream._unsubscribed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_readInProgress" : 
        "name" : "_readInProgress"
        "qualifiedname" : "dart.io._FileStream._readInProgress"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_currentBlock" : 
        "name" : "_currentBlock"
        "qualifiedname" : "dart.io._FileStream._currentBlock"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_FileStream" : 
        "name" : "_FileStream"
        "qualifiedname" : "dart.io._FileStream._FileStream"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_path" : 
            "name" : "_path"
            "qualifiedname" : "dart.io._FileStream._FileStream#_path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "_position" : 
            "name" : "_position"
            "qualifiedname" : "dart.io._FileStream._FileStream#_position"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "_end" : 
            "name" : "_end"
            "qualifiedname" : "dart.io._FileStream._FileStream#_end"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_FileStream.forStdin" : 
        "name" : "_FileStream.forStdin"
        "qualifiedname" : "dart.io._FileStream._FileStream.forStdin"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "listen" : 
        "name" : "listen"
        "qualifiedname" : "dart.io._FileStream.listen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.StreamSubscription"
        "parameters" : 
          "onData" : 
            "name" : "onData"
            "qualifiedname" : "dart.io._FileStream.listen#onData"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onError" : 
            "name" : "onError"
            "qualifiedname" : "dart.io._FileStream.listen#onError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "onDone" : 
            "name" : "onDone"
            "qualifiedname" : "dart.io._FileStream.listen#onDone"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.Function"
            "value" : "null"
          "cancelOnError" : 
            "name" : "cancelOnError"
            "qualifiedname" : "dart.io._FileStream.listen#cancelOnError"
            "optional" : "true"
            "named" : "true"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_setupController" : 
        "name" : "_setupController"
        "qualifiedname" : "dart.io._FileStream._setupController"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_closeFile" : 
        "name" : "_closeFile"
        "qualifiedname" : "dart.io._FileStream._closeFile"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "_readBlock" : 
        "name" : "_readBlock"
        "qualifiedname" : "dart.io._FileStream._readBlock"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_start" : 
        "name" : "_start"
        "qualifiedname" : "dart.io._FileStream._start"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "_resume" : 
        "name" : "_resume"
        "qualifiedname" : "dart.io._FileStream._resume"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "FileException" : 
    "name" : "FileException"
    "qualifiedname" : "dart.io.FileException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.FileException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.FileException.path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "osError" : 
        "name" : "osError"
        "qualifiedname" : "dart.io.FileException.osError"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.OSError"
    "methods" : 
      "FileException" : 
        "name" : "FileException"
        "qualifiedname" : "dart.io.FileException.FileException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.FileException.FileException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.FileException.FileException#path"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.FileException.FileException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.OSError"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.FileException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "RandomAccessFile" : 
    "name" : "RandomAccessFile"
    "qualifiedname" : "dart.io.RandomAccessFile"
    "comment" : "<p><code>RandomAccessFile</code> provides random access to the data in a file. <code>RandomAccessFile</code> objects are obtained by calling the <code>:open:</code> method on a <code>File</code> object.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io.RandomAccessFile.close"
        "comment" : "<p>Closes the file. Returns a [:Future<RandomAccessFile>:] that completes with this RandomAccessFile when it has been closed.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "closeSync" : 
        "name" : "closeSync"
        "qualifiedname" : "dart.io.RandomAccessFile.closeSync"
        "comment" : "<p>Synchronously closes the file.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "readByte" : 
        "name" : "readByte"
        "qualifiedname" : "dart.io.RandomAccessFile.readByte"
        "comment" : "<p>Reads a byte from the file. Returns a [:Future<int>:] that completes with the byte, or with -1 if end-of-file has been reached.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "readByteSync" : 
        "name" : "readByteSync"
        "qualifiedname" : "dart.io.RandomAccessFile.readByteSync"
        "comment" : "<p>Synchronously reads a single byte from the file. If end-of-file has been reached -1 is returned.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "read" : 
        "name" : "read"
        "qualifiedname" : "dart.io.RandomAccessFile.read"
        "comment" : "<p>Reads <code>bytes</code> bytes from a file and returns the result as a list of bytes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io.RandomAccessFile.read#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readSync" : 
        "name" : "readSync"
        "qualifiedname" : "dart.io.RandomAccessFile.readSync"
        "comment" : "<p>Synchronously reads a maximum of <code>bytes</code> bytes from a file and returns the result in a list of bytes.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io.RandomAccessFile.readSync#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readInto" : 
        "name" : "readInto"
        "qualifiedname" : "dart.io.RandomAccessFile.readInto"
        "comment" : "<p>Reads into an existing List&lt;int> from the file. If <code>start</code> is present, the bytes will be filled into <code>buffer</code> from at index <code>start</code>, otherwise index 0. If <code>end</code> is present, the <code>end</code> - <code>start</code> bytes will be read into <code>buffer</code>, otherwise up to <code>buffer.length</code>. If <code>end</code> == <code>start</code> nothing happends.</p> <p>Returns a [:Future<int>:] that completes with the number of bytes read.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io.RandomAccessFile.readInto#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io.RandomAccessFile.readInto#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io.RandomAccessFile.readInto#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "readIntoSync" : 
        "name" : "readIntoSync"
        "qualifiedname" : "dart.io.RandomAccessFile.readIntoSync"
        "comment" : "<p>Synchronously reads into an existing List&lt;int> from the file. If <code>start</code> is present, the bytes will be filled into <code>buffer</code> from at index <code>start</code>, otherwise index 0.  If <code>end</code> is present, the <code>end</code> - <code>start</code> bytes will be read into <code>buffer</code>, otherwise up to <code>buffer.length</code>. If <code>end</code> == <code>start</code> nothing happends.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io.RandomAccessFile.readIntoSync#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io.RandomAccessFile.readIntoSync#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io.RandomAccessFile.readIntoSync#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeByte" : 
        "name" : "writeByte"
        "qualifiedname" : "dart.io.RandomAccessFile.writeByte"
        "comment" : "<p>Writes a single byte to the file. Returns a [:Future<RandomAccessFile>:] that completes with this RandomAccessFile when the write completes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.RandomAccessFile.writeByte#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeByteSync" : 
        "name" : "writeByteSync"
        "qualifiedname" : "dart.io.RandomAccessFile.writeByteSync"
        "comment" : "<p>Synchronously writes a single byte to the file. Returns the number of bytes successfully written.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "value" : 
            "name" : "value"
            "qualifiedname" : "dart.io.RandomAccessFile.writeByteSync#value"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeFrom" : 
        "name" : "writeFrom"
        "qualifiedname" : "dart.io.RandomAccessFile.writeFrom"
        "comment" : "<p>Writes from a [List<int>] to the file. It will read the buffer from index <code>start</code> to index <code>end</code>. If <code>start</code> is omitted, it'll start from index 0. If <code>end</code> is omitted, it will write to end of <code>buffer</code>.</p> <p>Returns a [:Future<RandomAccessFile>:] that completes with this <code>RandomAccessFile</code> when the write completes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io.RandomAccessFile.writeFrom#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io.RandomAccessFile.writeFrom#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io.RandomAccessFile.writeFrom#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeFromSync" : 
        "name" : "writeFromSync"
        "qualifiedname" : "dart.io.RandomAccessFile.writeFromSync"
        "comment" : "<p>Synchronously writes from a [List<int>] to the file. It will read the buffer from index <code>start</code> to index <code>end</code>. If <code>start</code> is omitted, it'll start from index 0. If <code>end</code> is omitted, it will write to the end of <code>buffer</code>.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io.RandomAccessFile.writeFromSync#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io.RandomAccessFile.writeFromSync#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io.RandomAccessFile.writeFromSync#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "writeString" : 
        "name" : "writeString"
        "qualifiedname" : "dart.io.RandomAccessFile.writeString"
        "comment" : "<p>Writes a string to the file using the given <code>Encoding</code>. Returns a [:Future<RandomAccessFile>:] that completes with this RandomAccessFile when the write completes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io.RandomAccessFile.writeString#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.RandomAccessFile.writeString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "writeStringSync" : 
        "name" : "writeStringSync"
        "qualifiedname" : "dart.io.RandomAccessFile.writeStringSync"
        "comment" : "<p>Synchronously writes a single string to the file using the given <code>Encoding</code>.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "string" : 
            "name" : "string"
            "qualifiedname" : "dart.io.RandomAccessFile.writeStringSync#string"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.RandomAccessFile.writeStringSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "position" : 
        "name" : "position"
        "qualifiedname" : "dart.io.RandomAccessFile.position"
        "comment" : "<p>Gets the current byte position in the file. Returns a [:Future<int>:] that completes with the position.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "positionSync" : 
        "name" : "positionSync"
        "qualifiedname" : "dart.io.RandomAccessFile.positionSync"
        "comment" : "<p>Synchronously gets the current byte position in the file.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "setPosition" : 
        "name" : "setPosition"
        "qualifiedname" : "dart.io.RandomAccessFile.setPosition"
        "comment" : "<p>Sets the byte position in the file. Returns a [:Future<RandomAccessFile>:] that completes with this RandomAccessFile when the position has been set.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "position" : 
            "name" : "position"
            "qualifiedname" : "dart.io.RandomAccessFile.setPosition#position"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "setPositionSync" : 
        "name" : "setPositionSync"
        "qualifiedname" : "dart.io.RandomAccessFile.setPositionSync"
        "comment" : "<p>Synchronously sets the byte position in the file.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "position" : 
            "name" : "position"
            "qualifiedname" : "dart.io.RandomAccessFile.setPositionSync#position"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "truncate" : 
        "name" : "truncate"
        "qualifiedname" : "dart.io.RandomAccessFile.truncate"
        "comment" : "<p>Truncates (or extends) the file to <code>length</code> bytes. Returns a [:Future<RandomAccessFile>:] that completes with this RandomAccessFile when the truncation has been performed.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io.RandomAccessFile.truncate#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "truncateSync" : 
        "name" : "truncateSync"
        "qualifiedname" : "dart.io.RandomAccessFile.truncateSync"
        "comment" : "<p>Synchronously truncates (or extends) the file to <code>length</code> bytes.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "length" : 
            "name" : "length"
            "qualifiedname" : "dart.io.RandomAccessFile.truncateSync#length"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io.RandomAccessFile.length"
        "comment" : "<p>Gets the length of the file. Returns a [:Future<int>:] that completes with the length in bytes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "lengthSync" : 
        "name" : "lengthSync"
        "qualifiedname" : "dart.io.RandomAccessFile.lengthSync"
        "comment" : "<p>Synchronously gets the length of the file.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "flush" : 
        "name" : "flush"
        "qualifiedname" : "dart.io.RandomAccessFile.flush"
        "comment" : "<p>Flushes the contents of the file to disk. Returns a [:Future<RandomAccessFile>:] that completes with this RandomAccessFile when the flush operation completes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "flushSync" : 
        "name" : "flushSync"
        "qualifiedname" : "dart.io.RandomAccessFile.flushSync"
        "comment" : "<p>Synchronously flushes the contents of the file to disk.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.RandomAccessFile.toString"
        "comment" : "<p>Returns a human-readable string for this RandomAccessFile instance.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.RandomAccessFile.path"
        "comment" : "<p>Gets the path of the file underlying this RandomAccessFile.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "File" : 
    "name" : "File"
    "qualifiedname" : "dart.io.File"
    "comment" : "<p><code>File</code> objects are references to files.</p> <p>If <code>path</code> is a symbolic link, rather than a file, then the methods of <code>File</code> operate on the ultimate target of the link, except for File.delete and File.deleteSync, which operate on the link.</p> <p>To operate on the underlying file data there are two options:</p><ul><li> <p>Use streaming: read the contents of the file from the <code>Stream</code>    this.<code>openRead</code>() and write to the file by writing to the <code>IOSink</code>    this.<code>openWrite</code>().</p></li><li>Open the file for random access operations using <code>open</code>.</li></ul>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.FileSystemEntity"
    "variables" : 
    "methods" : 
      "File" : 
        "name" : "File"
        "qualifiedname" : "dart.io.File.File"
        "comment" : "<p>Create a File object.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.File"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.File.File#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "File.fromPath" : 
        "name" : "File.fromPath"
        "qualifiedname" : "dart.io.File.File.fromPath"
        "comment" : "<p>Create a File object from a Path object.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.File"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.File.File.fromPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io.File.create"
        "comment" : "<p>Create the file. Returns a [:Future<File>:] that completes with the file when it has been created.</p> <p>Existing files are left untouched by <code>create</code>. Calling <code>create</code> on an existing file might fail if there are restrictive permissions on the file.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "createSync" : 
        "name" : "createSync"
        "qualifiedname" : "dart.io.File.createSync"
        "comment" : "<p>Synchronously create the file. Existing files are left untouched by <code>createSync</code>. Calling <code>createSync</code> on an existing file might fail if there are restrictive permissions on the file.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "delete" : 
        "name" : "delete"
        "qualifiedname" : "dart.io.File.delete"
        "comment" : "<p>Delete the file. Returns a [:Future<File>:] that completes with the file when it has been deleted. Only a file or a link to a file can be deleted with this method, not a directory or a broken link.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "deleteSync" : 
        "name" : "deleteSync"
        "qualifiedname" : "dart.io.File.deleteSync"
        "comment" : "<p>Synchronously delete the file. Only a file or a link to a file can be deleted with this method, not a directory or a broken link.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io.File.rename"
        "comment" : "<p>Renames this file. Returns a <code>Future&lt;File&gt;</code> that completes with a <code>File</code> instance for the renamed file.</p> <p>If <code>newPath</code> identifies an existing file, that file is replaced. If <code>newPath</code> identifies an existing directory, the operation fails and the future completes with an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.File.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io.File.renameSync"
        "comment" : "<p>Synchronously renames this file. Returns a <code>File</code> instance for the renamed file.</p> <p>If <code>newPath</code> identifies an existing file, that file is replaced. If <code>newPath</code> identifies an existing directory the operation fails and an exception is thrown.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.File"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.File.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "directory" : 
        "name" : "directory"
        "qualifiedname" : "dart.io.File.directory"
        "comment" : "<p>Get a <code>Directory</code> object for the directory containing this file.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io.File.length"
        "comment" : "<p>Get the length of the file. Returns a [:Future<int>:] that completes with the length in bytes.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "lengthSync" : 
        "name" : "lengthSync"
        "qualifiedname" : "dart.io.File.lengthSync"
        "comment" : "<p>Synchronously get the length of the file.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "lastModified" : 
        "name" : "lastModified"
        "qualifiedname" : "dart.io.File.lastModified"
        "comment" : "<p>Get the last-modified time of the file. Returns a [:Future<DateTime>:] that completes with a <code>DateTime</code> object for the modification date.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "lastModifiedSync" : 
        "name" : "lastModifiedSync"
        "qualifiedname" : "dart.io.File.lastModifiedSync"
        "comment" : "<p>Get the last-modified time of the file. Throws an exception if the file does not exist.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.DateTime"
        "parameters" : 
      "open" : 
        "name" : "open"
        "qualifiedname" : "dart.io.File.open"
        "comment" : "<p>Open the file for random access operations. Returns a [:Future<RandomAccessFile>:] that completes with the opened random access file. <code>RandomAccessFile</code>s must be closed using the <code>RandomAccessFile.close</code> method.</p> <p>Files can be opened in three modes:</p> <p><code>FileMode.READ</code>: open the file for reading.</p> <p><code>FileMode.WRITE</code>: open the file for both reading and writing and truncate the file to length zero. If the file does not exist the file is created.</p> <p><code>FileMode.APPEND</code>: same as <code>FileMode.WRITE</code> except that the file is not truncated.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.open#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.READ"
      "openSync" : 
        "name" : "openSync"
        "qualifiedname" : "dart.io.File.openSync"
        "comment" : "<p>Synchronously open the file for random access operations. The result is a <code>RandomAccessFile</code> on which random access operations can be performed. Opened <code>RandomAccessFile</code>s must be closed using the <code>RandomAccessFile.close</code> method.</p> <p>See <code>open</code> for information on the <code>mode</code> argument.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.RandomAccessFile"
        "parameters" : 
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.openSync#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.READ"
      "fullPath" : 
        "name" : "fullPath"
        "qualifiedname" : "dart.io.File.fullPath"
        "comment" : "<p>Get the canonical full path corresponding to the file path. Returns a [:Future<String>:] that completes with the path.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "fullPathSync" : 
        "name" : "fullPathSync"
        "qualifiedname" : "dart.io.File.fullPathSync"
        "comment" : "<p>Synchronously get the canonical full path corresponding to the file path.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "openRead" : 
        "name" : "openRead"
        "qualifiedname" : "dart.io.File.openRead"
        "comment" : "<p>Create a new independent <code>Stream</code> for the contents of this file.</p> <p>If <code>start</code> is present, the file will be read from byte-offset <code>start</code>. Otherwise from the beginning (index 0).</p> <p>If <code>end</code> is present, only up to byte-index <code>end</code> will be read. Otherwise, until end of file.</p> <p>In order to make sure that system resources are freed, the stream must be read to completion or the subscription on the stream must be cancelled.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io.File.openRead#start"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io.File.openRead#end"
            "optional" : "true"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "openWrite" : 
        "name" : "openWrite"
        "qualifiedname" : "dart.io.File.openWrite"
        "comment" : "<p>Creates a new independent <code>IOSink</code> for the file. The <code>IOSink</code> must be closed when no longer used, to free system resources.</p> <p>An <code>IOSink</code> for a file can be opened in two modes:</p><ul><li><code>FileMode.WRITE</code>: truncates the file to length zero.</li><li> <p><code>FileMode.APPEND</code>: sets the initial write position to the end   of the file.</p></li></ul> <p> When writing strings through the returned <code>IOSink</code> the encoding  specified using <code>encoding</code> will be used. The returned <code>IOSink</code>  has an <code>:encoding:</code> property which can be changed after the  <code>IOSink</code> has been created.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.IOSink"
        "parameters" : 
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.openWrite#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.openWrite#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsBytes" : 
        "name" : "readAsBytes"
        "qualifiedname" : "dart.io.File.readAsBytes"
        "comment" : "<p>Read the entire file contents as a list of bytes. Returns a [:Future<List<int>>:] that completes with the list of bytes that is the contents of the file.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "readAsBytesSync" : 
        "name" : "readAsBytesSync"
        "qualifiedname" : "dart.io.File.readAsBytesSync"
        "comment" : "<p>Synchronously read the entire file contents as a list of bytes.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "readAsString" : 
        "name" : "readAsString"
        "qualifiedname" : "dart.io.File.readAsString"
        "comment" : "<p>Read the entire file contents as a string using the given <code>Encoding</code>.</p> <p>Returns a [:Future<String>:] that completes with the string once the file contents has been read.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.readAsString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsStringSync" : 
        "name" : "readAsStringSync"
        "qualifiedname" : "dart.io.File.readAsStringSync"
        "comment" : "<p>Synchronously read the entire file contents as a string using the given <code>Encoding</code>.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.readAsStringSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsLines" : 
        "name" : "readAsLines"
        "qualifiedname" : "dart.io.File.readAsLines"
        "comment" : "<p>Read the entire file contents as lines of text using the given <code>Encoding</code>.</p> <p>Returns a [:Future<List<String>>:] that completes with the lines once the file contents has been read.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.readAsLines#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "readAsLinesSync" : 
        "name" : "readAsLinesSync"
        "qualifiedname" : "dart.io.File.readAsLinesSync"
        "comment" : "<p>Synchronously read the entire file contents as lines of text using the given <code>Encoding</code>.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.readAsLinesSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "writeAsBytes" : 
        "name" : "writeAsBytes"
        "qualifiedname" : "dart.io.File.writeAsBytes"
        "comment" : "<p>Write a list of bytes to a file.</p> <p>Opens the file, writes the list of bytes to it, and closes the file. Returns a [:Future<File>:] that completes with this <code>File</code> object once the entire operation has completed.</p> <p>By default <code>writeAsBytes</code> creates the file for writing and truncates the file if it already exists. In order to append the bytes to an existing file, pass <code>FileMode.APPEND</code> as the optional mode parameter.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io.File.writeAsBytes#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.writeAsBytes#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
      "writeAsBytesSync" : 
        "name" : "writeAsBytesSync"
        "qualifiedname" : "dart.io.File.writeAsBytesSync"
        "comment" : "<p>Synchronously write a list of bytes to a file.</p> <p>Opens the file, writes the list of bytes to it and closes the file.</p> <p>By default <code>writeAsBytesSync</code> creates the file for writing and truncates the file if it already exists. In order to append the bytes to an existing file, pass <code>FileMode.APPEND</code> as the optional mode parameter.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io.File.writeAsBytesSync#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.writeAsBytesSync#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
      "writeAsString" : 
        "name" : "writeAsString"
        "qualifiedname" : "dart.io.File.writeAsString"
        "comment" : "<p>Write a string to a file.</p> <p>Opens the file, writes the string in the given encoding, and closes the file. Returns a [:Future<File>:] that completes with this <code>File</code> object once the entire operation has completed.</p> <p>By default <code>writeAsString</code> creates the file for writing and truncates the file if it already exists. In order to append the bytes to an existing file, pass <code>FileMode.APPEND</code> as the optional mode parameter.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "contents" : 
            "name" : "contents"
            "qualifiedname" : "dart.io.File.writeAsString#contents"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.writeAsString#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.writeAsString#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "writeAsStringSync" : 
        "name" : "writeAsStringSync"
        "qualifiedname" : "dart.io.File.writeAsStringSync"
        "comment" : "<p>Synchronously write a string to a file.</p> <p>Opens the file, writes the string in the given encoding, and closes the file.</p> <p>By default <code>writeAsStringSync</code> creates the file for writing and truncates the file if it already exists. In order to append the bytes to an existing file, pass <code>FileMode.APPEND</code> as the optional mode parameter.</p> <p>Throws a <code>FileException</code> if the operation fails.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "contents" : 
            "name" : "contents"
            "qualifiedname" : "dart.io.File.writeAsStringSync#contents"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "mode" : 
            "name" : "mode"
            "qualifiedname" : "dart.io.File.writeAsStringSync#mode"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.FileMode"
            "value" : "FileMode.WRITE"
          "encoding" : 
            "name" : "encoding"
            "qualifiedname" : "dart.io.File.writeAsStringSync#encoding"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.io.Encoding"
            "value" : "Encoding.UTF_8"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.File.path"
        "comment" : "<p>Get the path of the file.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "FileMode" : 
    "name" : "FileMode"
    "qualifiedname" : "dart.io.FileMode"
    "comment" : "<p>FileMode describes the modes in which a file can be opened.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "READ" : 
        "name" : "READ"
        "qualifiedname" : "dart.io.FileMode.READ"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "WRITE" : 
        "name" : "WRITE"
        "qualifiedname" : "dart.io.FileMode.WRITE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "APPEND" : 
        "name" : "APPEND"
        "qualifiedname" : "dart.io.FileMode.APPEND"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_mode" : 
        "name" : "_mode"
        "qualifiedname" : "dart.io.FileMode._mode"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "FileMode._internal" : 
        "name" : "FileMode._internal"
        "qualifiedname" : "dart.io.FileMode.FileMode._internal"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_mode" : 
            "name" : "_mode"
            "qualifiedname" : "dart.io.FileMode.FileMode._internal#_mode"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_EventHandler" : 
    "name" : "_EventHandler"
    "qualifiedname" : "dart.io._EventHandler"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_start" : 
        "name" : "_start"
        "qualifiedname" : "dart.io._EventHandler._start"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "void"
        "parameters" : 
      "_sendData" : 
        "name" : "_sendData"
        "qualifiedname" : "dart.io._EventHandler._sendData"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "sender" : 
            "name" : "sender"
            "qualifiedname" : "dart.io._EventHandler._sendData#sender"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.Object"
            "value" : "null"
          "receivePort" : 
            "name" : "receivePort"
            "qualifiedname" : "dart.io._EventHandler._sendData#receivePort"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.isolate.ReceivePort"
            "value" : "null"
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._EventHandler._sendData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_AsyncDirectoryLister" : 
    "name" : "_AsyncDirectoryLister"
    "qualifiedname" : "dart.io._AsyncDirectoryLister"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "LIST_FILE" : 
        "name" : "LIST_FILE"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.LIST_FILE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LIST_DIRECTORY" : 
        "name" : "LIST_DIRECTORY"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.LIST_DIRECTORY"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LIST_LINK" : 
        "name" : "LIST_LINK"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.LIST_LINK"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LIST_ERROR" : 
        "name" : "LIST_ERROR"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.LIST_ERROR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LIST_DONE" : 
        "name" : "LIST_DONE"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.LIST_DONE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_TYPE" : 
        "name" : "RESPONSE_TYPE"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.RESPONSE_TYPE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_PATH" : 
        "name" : "RESPONSE_PATH"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.RESPONSE_PATH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_COMPLETE" : 
        "name" : "RESPONSE_COMPLETE"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.RESPONSE_COMPLETE"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "RESPONSE_ERROR" : 
        "name" : "RESPONSE_ERROR"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.RESPONSE_ERROR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "recursive" : 
        "name" : "recursive"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.recursive"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "followLinks" : 
        "name" : "followLinks"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.followLinks"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "controller" : 
        "name" : "controller"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.controller"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.async.StreamController"
      "id" : 
        "name" : "id"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.id"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "canceled" : 
        "name" : "canceled"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.canceled"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "nextRunning" : 
        "name" : "nextRunning"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.nextRunning"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "closed" : 
        "name" : "closed"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.closed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_AsyncDirectoryLister" : 
        "name" : "_AsyncDirectoryLister"
        "qualifiedname" : "dart.io._AsyncDirectoryLister._AsyncDirectoryLister"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._AsyncDirectoryLister._AsyncDirectoryLister#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._AsyncDirectoryLister._AsyncDirectoryLister#recursive"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io._AsyncDirectoryLister._AsyncDirectoryLister#followLinks"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "stream" : 
        "name" : "stream"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.stream"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
      "onListen" : 
        "name" : "onListen"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.onListen"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "onResume" : 
        "name" : "onResume"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.onResume"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "onCancel" : 
        "name" : "onCancel"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.onCancel"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "next" : 
        "name" : "next"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.next"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "error" : 
        "name" : "error"
        "qualifiedname" : "dart.io._AsyncDirectoryLister.error"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io._AsyncDirectoryLister.error#message"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
  "_Directory" : 
    "name" : "_Directory"
    "qualifiedname" : "dart.io._Directory"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.Directory"
    "variables" : 
      "CREATE_REQUEST" : 
        "name" : "CREATE_REQUEST"
        "qualifiedname" : "dart.io._Directory.CREATE_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "DELETE_REQUEST" : 
        "name" : "DELETE_REQUEST"
        "qualifiedname" : "dart.io._Directory.DELETE_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "EXISTS_REQUEST" : 
        "name" : "EXISTS_REQUEST"
        "qualifiedname" : "dart.io._Directory.EXISTS_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "CREATE_TEMP_REQUEST" : 
        "name" : "CREATE_TEMP_REQUEST"
        "qualifiedname" : "dart.io._Directory.CREATE_TEMP_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "LIST_START_REQUEST" : 
        "name" : "LIST_START_REQUEST"
        "qualifiedname" : "dart.io._Directory.LIST_START_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "LIST_NEXT_REQUEST" : 
        "name" : "LIST_NEXT_REQUEST"
        "qualifiedname" : "dart.io._Directory.LIST_NEXT_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "LIST_STOP_REQUEST" : 
        "name" : "LIST_STOP_REQUEST"
        "qualifiedname" : "dart.io._Directory.LIST_STOP_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "RENAME_REQUEST" : 
        "name" : "RENAME_REQUEST"
        "qualifiedname" : "dart.io._Directory.RENAME_REQUEST"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_path" : 
        "name" : "_path"
        "qualifiedname" : "dart.io._Directory._path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "_directoryService" : 
        "name" : "_directoryService"
        "qualifiedname" : "dart.io._Directory._directoryService"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.isolate.SendPort"
    "methods" : 
      "_Directory" : 
        "name" : "_Directory"
        "qualifiedname" : "dart.io._Directory._Directory"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_path" : 
            "name" : "_path"
            "qualifiedname" : "dart.io._Directory._Directory#_path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_Directory.fromPath" : 
        "name" : "_Directory.fromPath"
        "qualifiedname" : "dart.io._Directory._Directory.fromPath"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._Directory.fromPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "_current" : 
        "name" : "_current"
        "qualifiedname" : "dart.io._Directory._current"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
      "_setCurrent" : 
        "name" : "_setCurrent"
        "qualifiedname" : "dart.io._Directory._setCurrent"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._setCurrent#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_createTemp" : 
        "name" : "_createTemp"
        "qualifiedname" : "dart.io._Directory._createTemp"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "template" : 
            "name" : "template"
            "qualifiedname" : "dart.io._Directory._createTemp#template"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_exists" : 
        "name" : "_exists"
        "qualifiedname" : "dart.io._Directory._exists"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.int"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._exists#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_create" : 
        "name" : "_create"
        "qualifiedname" : "dart.io._Directory._create"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._create#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_delete" : 
        "name" : "_delete"
        "qualifiedname" : "dart.io._Directory._delete"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._delete#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory._delete#recursive"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_rename" : 
        "name" : "_rename"
        "qualifiedname" : "dart.io._Directory._rename"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dynamic"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._rename#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._Directory._rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_list" : 
        "name" : "_list"
        "qualifiedname" : "dart.io._Directory._list"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._list#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory._list#recursive"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io._Directory._list#followLinks"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "_newServicePort" : 
        "name" : "_newServicePort"
        "qualifiedname" : "dart.io._Directory._newServicePort"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.isolate.SendPort"
        "parameters" : 
      "current" : 
        "name" : "current"
        "qualifiedname" : "dart.io._Directory.current"
        "comment" : ""
        "type" : "getter"
        "static" : "true"
        "return" : "dart.io.Directory"
        "parameters" : 
      "current=" : 
        "name" : "current="
        "qualifiedname" : "dart.io._Directory.current="
        "comment" : ""
        "type" : "setter"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory.current=#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "exists" : 
        "name" : "exists"
        "qualifiedname" : "dart.io._Directory.exists"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "existsSync" : 
        "name" : "existsSync"
        "qualifiedname" : "dart.io._Directory.existsSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "stat" : 
        "name" : "stat"
        "qualifiedname" : "dart.io._Directory.stat"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "statSync" : 
        "name" : "statSync"
        "qualifiedname" : "dart.io._Directory.statSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.FileStat"
        "parameters" : 
      "_computeExistingIndex" : 
        "name" : "_computeExistingIndex"
        "qualifiedname" : "dart.io._Directory._computeExistingIndex"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "dirsToCreate" : 
            "name" : "dirsToCreate"
            "qualifiedname" : "dart.io._Directory._computeExistingIndex#dirsToCreate"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "createRecursively" : 
        "name" : "createRecursively"
        "qualifiedname" : "dart.io._Directory.createRecursively"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io._Directory.create"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory.create#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "createRecursivelySync" : 
        "name" : "createRecursivelySync"
        "qualifiedname" : "dart.io._Directory.createRecursivelySync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "createSync" : 
        "name" : "createSync"
        "qualifiedname" : "dart.io._Directory.createSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory.createSync#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "createTemp" : 
        "name" : "createTemp"
        "qualifiedname" : "dart.io._Directory.createTemp"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "createTempSync" : 
        "name" : "createTempSync"
        "qualifiedname" : "dart.io._Directory.createTempSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
      "delete" : 
        "name" : "delete"
        "qualifiedname" : "dart.io._Directory.delete"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory.delete#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "deleteSync" : 
        "name" : "deleteSync"
        "qualifiedname" : "dart.io._Directory.deleteSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory.deleteSync#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io._Directory.rename"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._Directory.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io._Directory.renameSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io._Directory.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_trimTrailingPathSeparators" : 
        "name" : "_trimTrailingPathSeparators"
        "qualifiedname" : "dart.io._Directory._trimTrailingPathSeparators"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io._Directory._trimTrailingPathSeparators#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "list" : 
        "name" : "list"
        "qualifiedname" : "dart.io._Directory.list"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory.list#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io._Directory.list#followLinks"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "listSync" : 
        "name" : "listSync"
        "qualifiedname" : "dart.io._Directory.listSync"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io._Directory.listSync#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io._Directory.listSync#followLinks"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io._Directory.path"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io._Directory.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
      "_isErrorResponse" : 
        "name" : "_isErrorResponse"
        "qualifiedname" : "dart.io._Directory._isErrorResponse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._Directory._isErrorResponse#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_exceptionOrErrorFromResponse" : 
        "name" : "_exceptionOrErrorFromResponse"
        "qualifiedname" : "dart.io._Directory._exceptionOrErrorFromResponse"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "response" : 
            "name" : "response"
            "qualifiedname" : "dart.io._Directory._exceptionOrErrorFromResponse#response"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io._Directory._exceptionOrErrorFromResponse#message"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "_ensureDirectoryService" : 
        "name" : "_ensureDirectoryService"
        "qualifiedname" : "dart.io._Directory._ensureDirectoryService"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
  "DirectoryException" : 
    "name" : "DirectoryException"
    "qualifiedname" : "dart.io.DirectoryException"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
      - "dart.io.IOException"
    "variables" : 
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.DirectoryException.message"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.DirectoryException.path"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "osError" : 
        "name" : "osError"
        "qualifiedname" : "dart.io.DirectoryException.osError"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io.OSError"
    "methods" : 
      "DirectoryException" : 
        "name" : "DirectoryException"
        "qualifiedname" : "dart.io.DirectoryException.DirectoryException"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.DirectoryException.DirectoryException#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.DirectoryException.DirectoryException#path"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "osError" : 
            "name" : "osError"
            "qualifiedname" : "dart.io.DirectoryException.DirectoryException#osError"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.io.OSError"
            "value" : "null"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.DirectoryException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "Directory" : 
    "name" : "Directory"
    "qualifiedname" : "dart.io.Directory"
    "comment" : "<p><code>Directory</code> objects are used for working with directories.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.io.FileSystemEntity"
    "variables" : 
      "path" : 
        "name" : "path"
        "qualifiedname" : "dart.io.Directory.path"
        "comment" : "<p>Gets the path of this directory.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
    "methods" : 
      "Directory" : 
        "name" : "Directory"
        "qualifiedname" : "dart.io.Directory.Directory"
        "comment" : "<p>Creates a directory object. The path is either an absolute path, or it is a relative path which is interpreted relative to the directory in which the Dart VM was started.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.Directory.Directory#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "Directory.fromPath" : 
        "name" : "Directory.fromPath"
        "qualifiedname" : "dart.io.Directory.Directory.fromPath"
        "comment" : "<p>Creates a directory object from a Path object. The path is either an absolute path, or it is a relative path which is interpreted relative to the directory in which the Dart VM was started.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.Directory.Directory.fromPath#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io.Path"
            "value" : "null"
      "current" : 
        "name" : "current"
        "qualifiedname" : "dart.io.Directory.current"
        "comment" : "<p>Creates a directory object pointing to the current working directory.</p>"
        "type" : "getter"
        "static" : "true"
        "return" : "dart.io.Directory"
        "parameters" : 
      "current=" : 
        "name" : "current="
        "qualifiedname" : "dart.io.Directory.current="
        "comment" : "<p>Sets the current working directory of the Dart process including all running isolates. The new value set can be either a <code>Directory</code> or a <code>String</code>.</p> <p>The new value is passed to the OS's system call unchanged, so a relative path passed as the new working directory will be resolved by the OS.</p> <p>Note that setting the current working directory is a synchronous operation and that it changes the the working directory of <em>all</em> isolates.</p> <p>Use this with care - especially when working with asynchronous operations and multiple isolates. Changing the working directory, while asynchronous operations are pending or when other isolates are working with the file system, can lead to unexpected results.</p>"
        "type" : "setter"
        "static" : "true"
        "return" : "void"
        "parameters" : 
          "path" : 
            "name" : "path"
            "qualifiedname" : "dart.io.Directory.current=#path"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "create" : 
        "name" : "create"
        "qualifiedname" : "dart.io.Directory.create"
        "comment" : "<p>Creates the directory with this name.</p> <p>If <code>recursive</code> is false, only the last directory in the path is created. If <code>recursive</code> is true, all non-existing path components are created. If the directory already exists nothing is done.</p> <p>Returns a [:Future<Directory>:] that completes with this directory once it has been created. If the directory cannot be created the future completes with an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io.Directory.create#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "createSync" : 
        "name" : "createSync"
        "qualifiedname" : "dart.io.Directory.createSync"
        "comment" : "<p>Synchronously creates the directory with this name.</p> <p>If <code>recursive</code> is false, only the last directory in the path is created. If <code>recursive</code> is true, all non-existing path components are created. If the directory already exists nothing is done.</p> <p>If the directory cannot be created an exception is thrown.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io.Directory.createSync#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "createTemp" : 
        "name" : "createTemp"
        "qualifiedname" : "dart.io.Directory.createTemp"
        "comment" : "<p>Creates a temporary directory with a name based on the current path.  The path is used as a template, and additional characters are appended to it to make a unique temporary directory name.  If the path is the empty string, a default system temp directory and name are used for the template.</p> <p>Returns a [:Future<Directory>:] that completes with the newly created temporary directory.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
      "createTempSync" : 
        "name" : "createTempSync"
        "qualifiedname" : "dart.io.Directory.createTempSync"
        "comment" : "<p>Synchronously creates a temporary directory with a name based on the current path. The path is used as a template, and additional characters are appended to it to make a unique temporary directory name. If the path is the empty string, a default system temp directory and name are used for the template. Returns the newly created temporary directory.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
      "delete" : 
        "name" : "delete"
        "qualifiedname" : "dart.io.Directory.delete"
        "comment" : "<p>Deletes this directory.</p> <p>If <code>recursive</code> is false, the directory must be empty.  Only directories and links to directories will be deleted.</p> <p>If <code>recursive</code> is true, this directory and all sub-directories and files in the directories are deleted. Links are not followed when deleting recursively. Only the link is deleted, not its target.</p> <p>If <code>recursive</code> is true, the target is deleted even if it is a file, or a link to a file, not only if it is a directory.  This behavior allows <code>delete</code> to be used to unconditionally delete any file system object.</p> <p>Returns a [:Future<Directory>:] that completes with this directory when the deletion is done. If the directory cannot be deleted, the future completes with an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io.Directory.delete#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "deleteSync" : 
        "name" : "deleteSync"
        "qualifiedname" : "dart.io.Directory.deleteSync"
        "comment" : "<p>Synchronously deletes this directory.</p> <p>If <code>recursive</code> is false, the directory must be empty.</p> <p>If <code>recursive</code> is true, this directory and all sub-directories and files in the directories are deleted. Links are not followed when deleting recursively. Only the link is deleted, not its target.</p> <p>If <code>recursive</code> is true, the target is deleted even if it is a file, or a link to a file, not only if it is a directory.  This behavior allows <code>delete</code> to be used to unconditionally delete any file system object.</p> <p>Throws an exception if the directory cannot be deleted.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io.Directory.deleteSync#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dynamic"
            "value" : "false"
      "rename" : 
        "name" : "rename"
        "qualifiedname" : "dart.io.Directory.rename"
        "comment" : "<p>Renames this directory. Returns a [:Future<Directory>:] that completes with a <code>Directory</code> instance for the renamed directory.</p> <p>If newPath identifies an existing directory, that directory is replaced. If newPath identifies an existing file, the operation fails and the future completes with an exception.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Future"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.Directory.rename#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "renameSync" : 
        "name" : "renameSync"
        "qualifiedname" : "dart.io.Directory.renameSync"
        "comment" : "<p>Synchronously renames this directory. Returns a <code>Directory</code> instance for the renamed directory.</p> <p>If newPath identifies an existing directory, that directory is replaced. If newPath identifies an existing file the operation fails and an exception is thrown.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.io.Directory"
        "parameters" : 
          "newPath" : 
            "name" : "newPath"
            "qualifiedname" : "dart.io.Directory.renameSync#newPath"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
      "list" : 
        "name" : "list"
        "qualifiedname" : "dart.io.Directory.list"
        "comment" : "<p>Lists the sub-directories and files of this <code>Directory</code>. Optionally recurses into sub-directories.</p> <p>If <code>followLinks</code> is false, then any symbolic links found are reported as <code>Link</code> objects, rather than as directories or files, and are not recursed into.</p> <p>If <code>followLinks</code> is true, then working links are reported as directories or files, depending on their type, and links to directories are recursed into. Broken links are reported as <code>Link</code> objects. If a symbolic link makes a loop in the file system, then a recursive listing will not follow a link twice in the same recursive descent, but will report it as a <code>Link</code> the second time it is seen.</p> <p>The result is a stream of <code>FileSystemEntity</code> objects for the directories, files, and links.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.async.Stream"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io.Directory.list#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.Directory.list#followLinks"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "listSync" : 
        "name" : "listSync"
        "qualifiedname" : "dart.io.Directory.listSync"
        "comment" : "<p>Lists the sub-directories and files of this <code>Directory</code>. Optionally recurses into sub-directories.</p> <p>If <code>followLinks</code> is false, then any symbolic links found are reported as <code>Link</code> objects, rather than as directories or files, and are not recursed into.</p> <p>If <code>followLinks</code> is true, then working links are reported as directories or files, depending on their type, and links to directories are recursed into. Broken links are reported as <code>Link</code> objects. If a link makes a loop in the file system, then a recursive listing will not follow a link twice in the same recursive descent, but will report it as a <code>Link</code> the second time it is seen.</p> <p>Returns a <code>List</code> containing <code>FileSystemEntity</code> objects for the directories, files, and links.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "recursive" : 
            "name" : "recursive"
            "qualifiedname" : "dart.io.Directory.listSync#recursive"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "followLinks" : 
            "name" : "followLinks"
            "qualifiedname" : "dart.io.Directory.listSync#followLinks"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.Directory.toString"
        "comment" : "<p>Returns a human readable string for this Directory instance.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "ZLibInflater" : 
    "name" : "ZLibInflater"
    "qualifiedname" : "dart.io.ZLibInflater"
    "comment" : "<p>ZLibInflater class used to inflate a stream of bytes, using zlib.</p>"
    "superclass" : "dart.io._FilterTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "ZLibInflater" : 
        "name" : "ZLibInflater"
        "qualifiedname" : "dart.io.ZLibInflater.ZLibInflater"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
  "ZLibDeflater" : 
    "name" : "ZLibDeflater"
    "qualifiedname" : "dart.io.ZLibDeflater"
    "comment" : "<p>ZLibDeflater class used to deflate a stream of bytes, using zlib.</p>"
    "superclass" : "dart.io._FilterTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "ZLibDeflater" : 
        "name" : "ZLibDeflater"
        "qualifiedname" : "dart.io.ZLibDeflater.ZLibDeflater"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "gzip" : 
            "name" : "gzip"
            "qualifiedname" : "dart.io.ZLibDeflater.ZLibDeflater#gzip"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
          "level" : 
            "name" : "level"
            "qualifiedname" : "dart.io.ZLibDeflater.ZLibDeflater#level"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "6"
  "_FilterTransformer" : 
    "name" : "_FilterTransformer"
    "qualifiedname" : "dart.io._FilterTransformer"
    "comment" : ""
    "superclass" : "dart.async.StreamEventTransformer"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_filter" : 
        "name" : "_filter"
        "qualifiedname" : "dart.io._FilterTransformer._filter"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.io._Filter"
      "_closed" : 
        "name" : "_closed"
        "qualifiedname" : "dart.io._FilterTransformer._closed"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
      "_empty" : 
        "name" : "_empty"
        "qualifiedname" : "dart.io._FilterTransformer._empty"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_FilterTransformer" : 
        "name" : "_FilterTransformer"
        "qualifiedname" : "dart.io._FilterTransformer._FilterTransformer"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_filter" : 
            "name" : "_filter"
            "qualifiedname" : "dart.io._FilterTransformer._FilterTransformer#_filter"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.io._Filter"
            "value" : "null"
      "handleData" : 
        "name" : "handleData"
        "qualifiedname" : "dart.io._FilterTransformer.handleData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._FilterTransformer.handleData#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._FilterTransformer.handleData#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
      "handleDone" : 
        "name" : "handleDone"
        "qualifiedname" : "dart.io._FilterTransformer.handleDone"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "sink" : 
            "name" : "sink"
            "qualifiedname" : "dart.io._FilterTransformer.handleDone#sink"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.async.EventSink"
            "value" : "null"
  "_Filter" : 
    "name" : "_Filter"
    "qualifiedname" : "dart.io._Filter"
    "comment" : "<p>Private helper-class to handle native filters.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "process" : 
        "name" : "process"
        "qualifiedname" : "dart.io._Filter.process"
        "comment" : "<p>Call to process a chunk of data. A call to <code>process</code> should only be made when <code>processed</code> returns <code>null</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._Filter.process#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "processed" : 
        "name" : "processed"
        "qualifiedname" : "dart.io._Filter.processed"
        "comment" : "<p>Get a chunk of processed data. When there are no more data available, <code>processed</code> will return <code>null</code>. Set <code>flush</code> to <code>false</code> for non-final calls to improve performance of some filters.</p> <p>The last call to <code>processed</code> should have <code>end</code> set to <code>true</code>. This will make sure a 'end' packet is written on the stream.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
          "flush" : 
            "name" : "flush"
            "qualifiedname" : "dart.io._Filter.processed#flush"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
          "end" : 
            "name" : "end"
            "qualifiedname" : "dart.io._Filter.processed#end"
            "optional" : "true"
            "named" : "true"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "end" : 
        "name" : "end"
        "qualifiedname" : "dart.io._Filter.end"
        "comment" : "<p>Mark the filter as closed. Always call this method for any filter created to avoid leaking resources. <code>end</code> can be called at any time, but any successive calls to <code>process</code> or <code>processed</code> will fail.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
      "newZLibDeflateFilter" : 
        "name" : "newZLibDeflateFilter"
        "qualifiedname" : "dart.io._Filter.newZLibDeflateFilter"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io._Filter"
        "parameters" : 
          "gzip" : 
            "name" : "gzip"
            "qualifiedname" : "dart.io._Filter.newZLibDeflateFilter#gzip"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
          "level" : 
            "name" : "level"
            "qualifiedname" : "dart.io._Filter.newZLibDeflateFilter#level"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "newZLibInflateFilter" : 
        "name" : "newZLibInflateFilter"
        "qualifiedname" : "dart.io._Filter.newZLibInflateFilter"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.io._Filter"
        "parameters" : 
  "_SHA1" : 
    "name" : "_SHA1"
    "qualifiedname" : "dart.io._SHA1"
    "comment" : ""
    "superclass" : "dart.io._HashBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_w" : 
        "name" : "_w"
        "qualifiedname" : "dart.io._SHA1._w"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
    "methods" : 
      "_SHA1" : 
        "name" : "_SHA1"
        "qualifiedname" : "dart.io._SHA1._SHA1"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "newInstance" : 
        "name" : "newInstance"
        "qualifiedname" : "dart.io._SHA1.newInstance"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._SHA1"
        "parameters" : 
      "_updateHash" : 
        "name" : "_updateHash"
        "qualifiedname" : "dart.io._SHA1._updateHash"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "m" : 
            "name" : "m"
            "qualifiedname" : "dart.io._SHA1._updateHash#m"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
  "_MD5" : 
    "name" : "_MD5"
    "qualifiedname" : "dart.io._MD5"
    "comment" : ""
    "superclass" : "dart.io._HashBase"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_k" : 
        "name" : "_k"
        "qualifiedname" : "dart.io._MD5._k"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
      "_r" : 
        "name" : "_r"
        "qualifiedname" : "dart.io._MD5._r"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dynamic"
    "methods" : 
      "_MD5" : 
        "name" : "_MD5"
        "qualifiedname" : "dart.io._MD5._MD5"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "newInstance" : 
        "name" : "newInstance"
        "qualifiedname" : "dart.io._MD5.newInstance"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.io._MD5"
        "parameters" : 
      "_updateHash" : 
        "name" : "_updateHash"
        "qualifiedname" : "dart.io._MD5._updateHash"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "m" : 
            "name" : "m"
            "qualifiedname" : "dart.io._MD5._updateHash#m"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
  "_HashBase" : 
    "name" : "_HashBase"
    "qualifiedname" : "dart.io._HashBase"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_chunkSizeInWords" : 
        "name" : "_chunkSizeInWords"
        "qualifiedname" : "dart.io._HashBase._chunkSizeInWords"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_digestSizeInWords" : 
        "name" : "_digestSizeInWords"
        "qualifiedname" : "dart.io._HashBase._digestSizeInWords"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
      "_bigEndianWords" : 
        "name" : "_bigEndianWords"
        "qualifiedname" : "dart.io._HashBase._bigEndianWords"
        "comment" : ""
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.bool"
      "_lengthInBytes" : 
        "name" : "_lengthInBytes"
        "qualifiedname" : "dart.io._HashBase._lengthInBytes"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_pendingData" : 
        "name" : "_pendingData"
        "qualifiedname" : "dart.io._HashBase._pendingData"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_currentChunk" : 
        "name" : "_currentChunk"
        "qualifiedname" : "dart.io._HashBase._currentChunk"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_h" : 
        "name" : "_h"
        "qualifiedname" : "dart.io._HashBase._h"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "_digestCalled" : 
        "name" : "_digestCalled"
        "qualifiedname" : "dart.io._HashBase._digestCalled"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.bool"
    "methods" : 
      "_HashBase" : 
        "name" : "_HashBase"
        "qualifiedname" : "dart.io._HashBase._HashBase"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "_chunkSizeInWords" : 
            "name" : "_chunkSizeInWords"
            "qualifiedname" : "dart.io._HashBase._HashBase#_chunkSizeInWords"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "_digestSizeInWords" : 
            "name" : "_digestSizeInWords"
            "qualifiedname" : "dart.io._HashBase._HashBase#_digestSizeInWords"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "_bigEndianWords" : 
            "name" : "_bigEndianWords"
            "qualifiedname" : "dart.io._HashBase._HashBase#_bigEndianWords"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.bool"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._HashBase.add"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._HashBase.add#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "close" : 
        "name" : "close"
        "qualifiedname" : "dart.io._HashBase.close"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "blockSize" : 
        "name" : "blockSize"
        "qualifiedname" : "dart.io._HashBase.blockSize"
        "comment" : ""
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "newInstance" : 
        "name" : "newInstance"
        "qualifiedname" : "dart.io._HashBase.newInstance"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_updateHash" : 
        "name" : "_updateHash"
        "qualifiedname" : "dart.io._HashBase._updateHash"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "m" : 
            "name" : "m"
            "qualifiedname" : "dart.io._HashBase._updateHash#m"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "_add32" : 
        "name" : "_add32"
        "qualifiedname" : "dart.io._HashBase._add32"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "x" : 
            "name" : "x"
            "qualifiedname" : "dart.io._HashBase._add32#x"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "y" : 
            "name" : "y"
            "qualifiedname" : "dart.io._HashBase._add32#y"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_roundUp" : 
        "name" : "_roundUp"
        "qualifiedname" : "dart.io._HashBase._roundUp"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "val" : 
            "name" : "val"
            "qualifiedname" : "dart.io._HashBase._roundUp#val"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
          "n" : 
            "name" : "n"
            "qualifiedname" : "dart.io._HashBase._roundUp#n"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dynamic"
            "value" : "null"
      "_rotl32" : 
        "name" : "_rotl32"
        "qualifiedname" : "dart.io._HashBase._rotl32"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "val" : 
            "name" : "val"
            "qualifiedname" : "dart.io._HashBase._rotl32#val"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
          "shift" : 
            "name" : "shift"
            "qualifiedname" : "dart.io._HashBase._rotl32#shift"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_resultAsBytes" : 
        "name" : "_resultAsBytes"
        "qualifiedname" : "dart.io._HashBase._resultAsBytes"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_bytesToChunk" : 
        "name" : "_bytesToChunk"
        "qualifiedname" : "dart.io._HashBase._bytesToChunk"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "data" : 
            "name" : "data"
            "qualifiedname" : "dart.io._HashBase._bytesToChunk#data"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "dataIndex" : 
            "name" : "dataIndex"
            "qualifiedname" : "dart.io._HashBase._bytesToChunk#dataIndex"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_wordToBytes" : 
        "name" : "_wordToBytes"
        "qualifiedname" : "dart.io._HashBase._wordToBytes"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "word" : 
            "name" : "word"
            "qualifiedname" : "dart.io._HashBase._wordToBytes#word"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "_iterate" : 
        "name" : "_iterate"
        "qualifiedname" : "dart.io._HashBase._iterate"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "_finalizeData" : 
        "name" : "_finalizeData"
        "qualifiedname" : "dart.io._HashBase._finalizeData"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
  "_CryptoUtils" : 
    "name" : "_CryptoUtils"
    "qualifiedname" : "dart.io._CryptoUtils"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "PAD" : 
        "name" : "PAD"
        "qualifiedname" : "dart.io._CryptoUtils.PAD"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "CR" : 
        "name" : "CR"
        "qualifiedname" : "dart.io._CryptoUtils.CR"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LF" : 
        "name" : "LF"
        "qualifiedname" : "dart.io._CryptoUtils.LF"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "LINE_LENGTH" : 
        "name" : "LINE_LENGTH"
        "qualifiedname" : "dart.io._CryptoUtils.LINE_LENGTH"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "_encodeTable" : 
        "name" : "_encodeTable"
        "qualifiedname" : "dart.io._CryptoUtils._encodeTable"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.String"
      "_encodeTableUrlSafe" : 
        "name" : "_encodeTableUrlSafe"
        "qualifiedname" : "dart.io._CryptoUtils._encodeTableUrlSafe"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.String"
      "_decodeTable" : 
        "name" : "_decodeTable"
        "qualifiedname" : "dart.io._CryptoUtils._decodeTable"
        "comment" : ""
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.List"
    "methods" : 
      "bytesToHex" : 
        "name" : "bytesToHex"
        "qualifiedname" : "dart.io._CryptoUtils.bytesToHex"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._CryptoUtils.bytesToHex#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "bytesToBase64" : 
        "name" : "bytesToBase64"
        "qualifiedname" : "dart.io._CryptoUtils.bytesToBase64"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.String"
        "parameters" : 
          "bytes" : 
            "name" : "bytes"
            "qualifiedname" : "dart.io._CryptoUtils.bytesToBase64#bytes"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "urlSafe" : 
            "name" : "urlSafe"
            "qualifiedname" : "dart.io._CryptoUtils.bytesToBase64#urlSafe"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
          "addLineSeparator" : 
            "name" : "addLineSeparator"
            "qualifiedname" : "dart.io._CryptoUtils.bytesToBase64#addLineSeparator"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "false"
      "base64StringToBytes" : 
        "name" : "base64StringToBytes"
        "qualifiedname" : "dart.io._CryptoUtils.base64StringToBytes"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.List"
        "parameters" : 
          "input" : 
            "name" : "input"
            "qualifiedname" : "dart.io._CryptoUtils.base64StringToBytes#input"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.String"
            "value" : "null"
          "ignoreInvalidCharacters" : 
            "name" : "ignoreInvalidCharacters"
            "qualifiedname" : "dart.io._CryptoUtils.base64StringToBytes#ignoreInvalidCharacters"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.bool"
            "value" : "true"
  "_IOCrypto" : 
    "name" : "_IOCrypto"
    "qualifiedname" : "dart.io._IOCrypto"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "getRandomBytes" : 
        "name" : "getRandomBytes"
        "qualifiedname" : "dart.io._IOCrypto.getRandomBytes"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.typed_data.Uint8List"
        "parameters" : 
          "count" : 
            "name" : "count"
            "qualifiedname" : "dart.io._IOCrypto.getRandomBytes#count"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "_BufferUtils" : 
    "name" : "_BufferUtils"
    "qualifiedname" : "dart.io._BufferUtils"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
    "methods" : 
      "_isBuiltinList" : 
        "name" : "_isBuiltinList"
        "qualifiedname" : "dart.io._BufferUtils._isBuiltinList"
        "comment" : ""
        "type" : "method"
        "static" : "true"
        "return" : "dart.core.bool"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._BufferUtils._isBuiltinList#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
  "_BufferAndStart" : 
    "name" : "_BufferAndStart"
    "qualifiedname" : "dart.io._BufferAndStart"
    "comment" : ""
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "buffer" : 
        "name" : "buffer"
        "qualifiedname" : "dart.io._BufferAndStart.buffer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.List"
      "start" : 
        "name" : "start"
        "qualifiedname" : "dart.io._BufferAndStart.start"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "_BufferAndStart" : 
        "name" : "_BufferAndStart"
        "qualifiedname" : "dart.io._BufferAndStart._BufferAndStart"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._BufferAndStart._BufferAndStart#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
          "start" : 
            "name" : "start"
            "qualifiedname" : "dart.io._BufferAndStart._BufferAndStart#start"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
  "OSError" : 
    "name" : "OSError"
    "qualifiedname" : "dart.io.OSError"
    "comment" : "<p>An <code>OSError</code> object holds information about an error from the operating system.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "noErrorCode" : 
        "name" : "noErrorCode"
        "qualifiedname" : "dart.io.OSError.noErrorCode"
        "comment" : "<p>Constant used to indicate that no OS error code is available.</p>"
        "final" : "false"
        "static" : "true"
        "type" : "dart.core.int"
      "message" : 
        "name" : "message"
        "qualifiedname" : "dart.io.OSError.message"
        "comment" : "<p>Error message supplied by the operating system. null if no message is associated with the error.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.String"
      "errorCode" : 
        "name" : "errorCode"
        "qualifiedname" : "dart.io.OSError.errorCode"
        "comment" : "<p>Error code supplied by the operating system. Will have the value <code>noErrorCode</code> if there is no error code associated with the error.</p>"
        "final" : "true"
        "static" : "false"
        "type" : "dart.core.int"
    "methods" : 
      "OSError" : 
        "name" : "OSError"
        "qualifiedname" : "dart.io.OSError.OSError"
        "comment" : "<p>Creates an OSError object from a message and an errorCode.</p>"
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
          "message" : 
            "name" : "message"
            "qualifiedname" : "dart.io.OSError.OSError#message"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.String"
            "value" : "\"\""
          "errorCode" : 
            "name" : "errorCode"
            "qualifiedname" : "dart.io.OSError.OSError#errorCode"
            "optional" : "true"
            "named" : "false"
            "default" : "true"
            "type" : "dart.core.int"
            "value" : "noErrorCode"
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.OSError.toString"
        "comment" : "<p>Converts an OSError object to a string representation.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "IOException" : 
    "name" : "IOException"
    "qualifiedname" : "dart.io.IOException"
    "comment" : "<p>Base class for all IO related exceptions.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "true"
    "typedef" : "false"
    "implements" : 
      - "dart.core.Exception"
    "variables" : 
    "methods" : 
      "toString" : 
        "name" : "toString"
        "qualifiedname" : "dart.io.IOException.toString"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.String"
        "parameters" : 
  "_BufferList" : 
    "name" : "_BufferList"
    "qualifiedname" : "dart.io._BufferList"
    "comment" : "<p>Utility class that can fast concatenate [List<int>]s of bytes. Use <code>readBytes</code> to get the final buffer.</p>"
    "superclass" : "dart.core.Object"
    "abstract" : "false"
    "typedef" : "false"
    "implements" : 
    "variables" : 
      "_INIT_SIZE" : 
        "name" : "_INIT_SIZE"
        "qualifiedname" : "dart.io._BufferList._INIT_SIZE"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_length" : 
        "name" : "_length"
        "qualifiedname" : "dart.io._BufferList._length"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.core.int"
      "_buffer" : 
        "name" : "_buffer"
        "qualifiedname" : "dart.io._BufferList._buffer"
        "comment" : ""
        "final" : "false"
        "static" : "false"
        "type" : "dart.typed_data.Uint8List"
    "methods" : 
      "_BufferList" : 
        "name" : "_BufferList"
        "qualifiedname" : "dart.io._BufferList._BufferList"
        "comment" : ""
        "type" : "constructor"
        "static" : "false"
        "return" : "dynamic"
        "parameters" : 
      "pow2roundup" : 
        "name" : "pow2roundup"
        "qualifiedname" : "dart.io._BufferList.pow2roundup"
        "comment" : ""
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
          "x" : 
            "name" : "x"
            "qualifiedname" : "dart.io._BufferList.pow2roundup#x"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.int"
            "value" : "null"
      "add" : 
        "name" : "add"
        "qualifiedname" : "dart.io._BufferList.add"
        "comment" : "<p>Adds a new buffer to the list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._BufferList.add#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "write" : 
        "name" : "write"
        "qualifiedname" : "dart.io._BufferList.write"
        "comment" : "<p>Same as <code>add</code>.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
          "buffer" : 
            "name" : "buffer"
            "qualifiedname" : "dart.io._BufferList.write#buffer"
            "optional" : "false"
            "named" : "false"
            "default" : "false"
            "type" : "dart.core.List"
            "value" : "null"
      "readBytes" : 
        "name" : "readBytes"
        "qualifiedname" : "dart.io._BufferList.readBytes"
        "comment" : "<p>Read all the bytes from the buffer list. If it's empty, an empty list is returned. A call to <code>readBytes</code> will clear the buffer.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "dart.core.List"
        "parameters" : 
      "length" : 
        "name" : "length"
        "qualifiedname" : "dart.io._BufferList.length"
        "comment" : "<p>Returns the total number of bytes in the buffer.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.int"
        "parameters" : 
      "isEmpty" : 
        "name" : "isEmpty"
        "qualifiedname" : "dart.io._BufferList.isEmpty"
        "comment" : "<p>Returns whether the buffer list is empty.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "isNotEmpty" : 
        "name" : "isNotEmpty"
        "qualifiedname" : "dart.io._BufferList.isNotEmpty"
        "comment" : "<p>Returns whether the buffer list is not empty.</p>"
        "type" : "getter"
        "static" : "false"
        "return" : "dart.core.bool"
        "parameters" : 
      "clear" : 
        "name" : "clear"
        "qualifiedname" : "dart.io._BufferList.clear"
        "comment" : "<p>Clears the content of the buffer list.</p>"
        "type" : "method"
        "static" : "false"
        "return" : "void"
        "parameters" : 
